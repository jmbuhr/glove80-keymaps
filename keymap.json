{
  "keyboard": "glove80",
  "uuid": "",
  "date": 1722894521,
  "creator": "",
  "parent_uuid": "c3e95c9a-bc7c-4828-984e-ee1493c1d71d",
  "firmware_api_version": "1",
  "locale": "en-US",
  "title": "moonshifter bilateral v0.4",
  "notes": "Sunaku's Keymap v34 for the \"Glorious Engrammer\" üßë‚ÄçüöÄüöÄ‚ú®\n- Intro & setup: https://github.com/sunaku/glove80-keymaps\n- Release notes: https://github.com/sunaku/glove80-keymaps/releases/tag/v34\n- Documentation: https://sunaku.github.io/moergo-glove80-keyboard.html#layers\n- Discord forum: https://discord.com/channels/877392805654306816/1111469812850380831\n\nSummary:\nThis release auto-detects mouse key capabilities, adds a configurable Difficulty Level for newcomers, adds a Factory layer for \"out of the box\" Glove80 compatibility, simplifies home row mod reordering and macOS Cmd/Ctrl swap, adds Alt/Ctrl/Win-Tab switching on Cursor layer, adds OS-native shortcuts for international characters on World layer, adds Spacegram operators & Hexadecimal input on Number layer, improves expressiveness of Emoji layer, and more! üíÅ\n\nChanges:\n- Remove `#define ENABLE_MOUSE_KEYS` setting in favor of automatic PR23 detection.  Thanks to @comradecandy on Discord for guidance.\n- Add `#define DIFFICULTY_LEVEL` setting (like in a video game) to help newcomers grow accustomed to the timing thresholds.  Thanks to @troy0820_ for inspiring this feature.\n- World layer: add native-OS shortcut localization (e.g. Alt-codes in Windows) with friendlier `world.yaml` representation.\n- Compose: add `#define COMPOSE_KEY_LINUX` setting to override the RALT default and `COMPOSE_SEQ_*()` functions for per-OS overrides.\n- Unicode: extract OS-specific behavior into `#define UNICODE_SEQ_*()` functions that you can redefine to override.\n- Cursor layer: add Mod+Tab shortcuts (Alt+Tab, Ctrl+Tab, and Win+Tab) on the thumb cluster to be accessed via chording.  Thanks to @moosyresearch on Discord for suggesting these features.\n- Miryoku layers: use home row mods from the base layer (via `#define <hand>_<finger>_MOD`) instead of hard-coding them. Thanks to @ptonner on Discord for requesting this.\n- Miryoku layers: simplify home row mod reordering by extracting mods from base layer and alpha layouts into `#define <finger>_FINGER_MOD` and `#define <hand>_<finger>_MOD` settings, thereby eliminating the procedure for users to compile from source with JSON export + `rake` command.  Moreover, macOS convention of Cmd/Ctrl is now honored by converting the default GACS order into CAGS order according to the `#define OPERATING_SYSTEM` setting.  Thanks to @sudarshang on Discord for inspiring this feature.\n- Typing layer: use thumb cluster taps from base layer (via `#define KEY_<hand>_<finger>`) instead of hard-coding them.  Thanks to @ptonner on Discord for requesting this.\n- Factory layer: add layer with factory default layout, toggled via Magic+T3 (furthest key in upper arc of thumb cluster).  Thanks to @basnijholt on Discord for requesting this.\n- Plain keys: use homey settings instead of index finger settings (which are deliberately fast-acting for CamelCase typing).\n- Plain keys: enable retro-tap feature to convert standalone holds into taps.  Thanks to @ErrorCode on Discord for suggesting this.\n- Number layer: add variation of Spacegram operators on the left hand that better suit me than a simple left/right mirror.  Thanks to @ArabShapt on Discord for requesting this.\n- Number layer: add hexadecimal digits and undo/redo with sticky shift.  Thanks to @PoiXP on Discord for requesting this.\n- Emoji layer: add shifted (dual symbols) on home & upper rows; put my signature \"üßë‚ÄçüöÄüöÄ‚ú®\" pictogram on thumb cluster; etc.\n- Function layer: restore CapsLock on the left-most pinky home row key, to match layer diagram.  Thanks to @greatst on Discord for reporting this.\n- Lower layer: move to bottom of tower (just the above Magic layer) so that home row mods can carry over to the Lower layer.  Thanks to @between_names on Discord for reporting this issue.",
  "tags": [
    "sunaku",
    "engram",
    "qwerty",
    "home-row-mods",
    "programming",
    "symbol-layer",
    "vim",
    "gaming"
  ],
  "unlisted": false,
  "layer_names": [
    "QWERTY",
    "Typing",
    "LeftPinky",
    "LeftRing1",
    "LeftRing2",
    "LeftMiddy",
    "LeftIndex",
    "RightPinky",
    "RightRing1",
    "RightRing2",
    "RightMiddy",
    "RightIndex",
    "Factory",
    "Magic",
    "lower",
    "both",
    "gaming"
  ],
  "layers": [
    [
      {
        "value": "&kp",
        "params": [
          {
            "value": "F1",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F2",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F3",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F4",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F5",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F6",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F7",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F8",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F9",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F10",
            "params": []
          }
        ]
      },
      {
        "value": "&caps_word",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N1",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N2",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N3",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N4",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N5",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N6",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N7",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N8",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N9",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N0",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "PSCRN",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "TAB",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "Q",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftRing2 (W)",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "E",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "R",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "T",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "Y",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "U",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "I",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightRing2 (O)",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "P",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "TAB",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "ESC",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftPinky (A)",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftRing1 (S)",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftMiddy (D)",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftIndex (F)",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&plain LAYER_Typing G",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&plain LAYER_Typing H",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightIndex (J)",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightMiddy (K)",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightRing1 (L)",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightPinky (SEMI)",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "ESC",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LSHFT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "Z",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "X",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "V",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "B",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "ESC",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LG",
            "params": [
              {
                "value": "D",
                "params": []
              }
            ]
          }
        ]
      },
      {
        "value": "&tog",
        "params": [
          {
            "value": 16,
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LS",
            "params": [
              {
                "value": "LG",
                "params": [
                  {
                    "value": "M",
                    "params": []
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "DEL",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "BSPC",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "M",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "COMMA",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "DOT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "FSLH",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RSHFT",
            "params": []
          }
        ]
      },
      {
        "value": "&magic",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "HOME",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "END",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LC",
            "params": [
              {
                "value": "C",
                "params": []
              }
            ]
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LC",
            "params": [
              {
                "value": "V",
                "params": []
              }
            ]
          }
        ]
      },
      {
        "value": "&lt",
        "params": [
          {
            "value": 14,
            "params": []
          },
          {
            "value": "SPACE",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LGUI",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F11",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F12",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RET",
            "params": []
          }
        ]
      },
      {
        "value": "&lt",
        "params": [
          {
            "value": 14,
            "params": []
          },
          {
            "value": "SPACE",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LEFT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "DOWN",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "UP",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RIGHT",
            "params": []
          }
        ]
      },
      {
        "value": "&magic",
        "params": []
      }
    ],
    [
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp LEFT_RING2_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp RIGHT_RING2_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp LEFT_PINKY_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp LEFT_RING1_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp LEFT_MIDDY_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp LEFT_INDEX_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp KEY_LH_C1R4",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp KEY_RH_C1R4",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp RIGHT_INDEX_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp RIGHT_MIDDY_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp RIGHT_RING1_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp RIGHT_PINKY_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      }
    ],
    [
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_pinky_tap KEY_LH_C6R1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_pinky_tap KEY_LH_C5R1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_pinky_tap KEY_LH_C4R1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_pinky_tap KEY_LH_C3R1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_pinky_tap KEY_LH_C2R1",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_pinky_tap KEY_LH_C6R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_pinky_tap KEY_LH_C5R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_pinky_tap KEY_LH_C4R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_pinky_tap KEY_LH_C3R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_pinky_tap KEY_LH_C2R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_pinky_tap KEY_LH_C1R2",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_pinky_tap KEY_LH_C6R3",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_pinky_tap KEY_LH_C5R3",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftPinkyRing2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_pinky_tap KEY_LH_C3R3",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_pinky_tap KEY_LH_C2R3",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_pinky_tap KEY_LH_C1R3",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp RIGHT_RING2_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_pinky_tap KEY_LH_C6R4",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftPinkyRing1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftPinkyMiddy",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftPinkyIndex",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_pinky_tap KEY_LH_C1R4",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp RIGHT_PLAIN_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp RIGHT_INDEX_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp RIGHT_MIDDY_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp RIGHT_RING1_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp RIGHT_PINKY_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_pinky_tap KEY_LH_C6R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_pinky_tap KEY_LH_C5R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_pinky_tap KEY_LH_C4R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_pinky_tap KEY_LH_C3R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_pinky_tap KEY_LH_C2R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_pinky_tap KEY_LH_C1R5",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_pinky_tap KEY_LH_C5R6",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_pinky_tap KEY_LH_C4R6",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_pinky_tap KEY_LH_C3R6",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_pinky_tap KEY_LH_C2R6",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      }
    ],
    [
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ring1_tap KEY_LH_C6R1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ring1_tap KEY_LH_C5R1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ring1_tap KEY_LH_C4R1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ring1_tap KEY_LH_C3R1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ring1_tap KEY_LH_C2R1",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ring1_tap KEY_LH_C6R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ring1_tap KEY_LH_C5R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ring1_tap KEY_LH_C4R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ring1_tap KEY_LH_C3R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ring1_tap KEY_LH_C2R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ring1_tap KEY_LH_C1R2",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ring1_tap KEY_LH_C6R3",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ring1_tap KEY_LH_C5R3",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftRing1Ring2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ring1_tap KEY_LH_C3R3",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ring1_tap KEY_LH_C2R3",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ring1_tap KEY_LH_C1R3",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp RIGHT_RING2_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ring1_tap KEY_LH_C6R4",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftRing1Pinky",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftRing1Middy",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftRing1Index",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ring1_tap KEY_LH_C1R4",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp RIGHT_PLAIN_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp RIGHT_INDEX_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp RIGHT_MIDDY_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp RIGHT_RING1_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp RIGHT_PINKY_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ring1_tap KEY_LH_C6R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ring1_tap KEY_LH_C5R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ring1_tap KEY_LH_C4R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ring1_tap KEY_LH_C3R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ring1_tap KEY_LH_C2R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ring1_tap KEY_LH_C1R5",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ring1_tap KEY_LH_C5R6",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ring1_tap KEY_LH_C4R6",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ring1_tap KEY_LH_C3R6",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ring1_tap KEY_LH_C2R6",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      }
    ],
    [
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ring2_tap KEY_LH_C6R1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ring2_tap KEY_LH_C5R1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ring2_tap KEY_LH_C4R1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ring2_tap KEY_LH_C3R1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ring2_tap KEY_LH_C2R1",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ring2_tap KEY_LH_C6R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ring2_tap KEY_LH_C5R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ring2_tap KEY_LH_C4R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ring2_tap KEY_LH_C3R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ring2_tap KEY_LH_C2R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ring2_tap KEY_LH_C1R2",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ring2_tap KEY_LH_C6R3",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ring2_tap KEY_LH_C5R3",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ring2_tap KEY_LH_C3R3",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ring2_tap KEY_LH_C2R3",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ring2_tap KEY_LH_C1R3",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp RIGHT_RING2_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ring2_tap KEY_LH_C6R4",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftRing2Pinky",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftRing2Ring1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftRing2Middy",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftRing2Index",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ring2_tap KEY_LH_C1R4",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp RIGHT_PLAIN_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp RIGHT_INDEX_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp RIGHT_MIDDY_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp RIGHT_RING1_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp RIGHT_PINKY_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ring2_tap KEY_LH_C6R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ring2_tap KEY_LH_C5R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ring2_tap KEY_LH_C4R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ring2_tap KEY_LH_C3R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ring2_tap KEY_LH_C2R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ring2_tap KEY_LH_C1R5",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ring2_tap KEY_LH_C5R6",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ring2_tap KEY_LH_C4R6",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ring2_tap KEY_LH_C3R6",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_ring2_tap KEY_LH_C2R6",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      }
    ],
    [
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_middy_tap KEY_LH_C6R1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_middy_tap KEY_LH_C5R1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_middy_tap KEY_LH_C4R1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_middy_tap KEY_LH_C3R1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_middy_tap KEY_LH_C2R1",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_middy_tap KEY_LH_C6R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_middy_tap KEY_LH_C5R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_middy_tap KEY_LH_C4R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_middy_tap KEY_LH_C3R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_middy_tap KEY_LH_C2R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_middy_tap KEY_LH_C1R2",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_middy_tap KEY_LH_C6R3",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_middy_tap KEY_LH_C5R3",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftMiddyRing2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_middy_tap KEY_LH_C3R3",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_middy_tap KEY_LH_C2R3",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_middy_tap KEY_LH_C1R3",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp RIGHT_RING2_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_middy_tap KEY_LH_C6R4",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftMiddyPinky",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftMiddyRing1",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftMiddyIndex",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_middy_tap KEY_LH_C1R4",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp RIGHT_PLAIN_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp RIGHT_INDEX_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp RIGHT_MIDDY_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp RIGHT_RING1_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp RIGHT_PINKY_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_middy_tap KEY_LH_C6R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_middy_tap KEY_LH_C5R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_middy_tap KEY_LH_C4R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_middy_tap KEY_LH_C3R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_middy_tap KEY_LH_C2R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_middy_tap KEY_LH_C1R5",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_middy_tap KEY_LH_C5R6",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_middy_tap KEY_LH_C4R6",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_middy_tap KEY_LH_C3R6",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_middy_tap KEY_LH_C2R6",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      }
    ],
    [
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_index_tap KEY_LH_C6R1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_index_tap KEY_LH_C5R1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_index_tap KEY_LH_C4R1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_index_tap KEY_LH_C3R1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_index_tap KEY_LH_C2R1",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_index_tap KEY_LH_C6R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_index_tap KEY_LH_C5R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_index_tap KEY_LH_C4R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_index_tap KEY_LH_C3R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_index_tap KEY_LH_C2R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_index_tap KEY_LH_C1R2",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_index_tap KEY_LH_C6R3",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_index_tap KEY_LH_C5R3",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftIndexRing2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_index_tap KEY_LH_C3R3",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_index_tap KEY_LH_C2R3",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_index_tap KEY_LH_C1R3",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp RIGHT_RING2_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_index_tap KEY_LH_C6R4",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftIndexPinky",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftIndexRing1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&LeftIndexMiddy",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_index_tap KEY_LH_C1R4",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp RIGHT_PLAIN_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp RIGHT_INDEX_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp RIGHT_MIDDY_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp RIGHT_RING1_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp RIGHT_PINKY_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_index_tap KEY_LH_C6R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_index_tap KEY_LH_C5R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_index_tap KEY_LH_C4R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_index_tap KEY_LH_C3R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_index_tap KEY_LH_C2R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_index_tap KEY_LH_C1R5",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_index_tap KEY_LH_C5R6",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_index_tap KEY_LH_C4R6",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_index_tap KEY_LH_C3R6",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&left_index_tap KEY_LH_C2R6",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      }
    ],
    [
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_pinky_tap KEY_RH_C2R1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_pinky_tap KEY_RH_C3R1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_pinky_tap KEY_RH_C4R1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_pinky_tap KEY_RH_C5R1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_pinky_tap KEY_RH_C6R1",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_pinky_tap KEY_RH_C1R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_pinky_tap KEY_RH_C2R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_pinky_tap KEY_RH_C3R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_pinky_tap KEY_RH_C4R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_pinky_tap KEY_RH_C5R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_pinky_tap KEY_RH_C6R2",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp LEFT_RING2_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_pinky_tap KEY_RH_C1R3",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_pinky_tap KEY_RH_C2R3",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_pinky_tap KEY_RH_C3R3",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightPinkyRing2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_pinky_tap KEY_RH_C5R3",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_pinky_tap KEY_RH_C6R3",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp LEFT_PINKY_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp LEFT_RING1_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp LEFT_MIDDY_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp LEFT_INDEX_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp LEFT_PLAIN_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_pinky_tap KEY_RH_C1R4",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightPinkyIndex",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightPinkyMiddy",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightPinkyRing1",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_pinky_tap KEY_RH_C6R4",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_pinky_tap KEY_RH_C1R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_pinky_tap KEY_RH_C2R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_pinky_tap KEY_RH_C3R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_pinky_tap KEY_RH_C4R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_pinky_tap KEY_RH_C5R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_pinky_tap KEY_RH_C6R5",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_pinky_tap KEY_RH_C2R6",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_pinky_tap KEY_RH_C3R6",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_pinky_tap KEY_RH_C4R6",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_pinky_tap KEY_RH_C5R6",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      }
    ],
    [
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ring1_tap KEY_RH_C2R1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ring1_tap KEY_RH_C3R1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ring1_tap KEY_RH_C4R1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ring1_tap KEY_RH_C5R1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ring1_tap KEY_RH_C6R1",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ring1_tap KEY_RH_C1R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ring1_tap KEY_RH_C2R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ring1_tap KEY_RH_C3R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ring1_tap KEY_RH_C4R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ring1_tap KEY_RH_C5R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ring1_tap KEY_RH_C6R2",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp LEFT_RING2_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ring1_tap KEY_RH_C1R3",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ring1_tap KEY_RH_C2R3",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ring1_tap KEY_RH_C3R3",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightRing1Ring2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ring1_tap KEY_RH_C5R3",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ring1_tap KEY_RH_C6R3",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp LEFT_PINKY_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp LEFT_RING1_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp LEFT_MIDDY_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp LEFT_INDEX_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp LEFT_PLAIN_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ring1_tap KEY_RH_C1R4",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightRing1Index",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightRing1Middy",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightRing1Pinky",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ring1_tap KEY_RH_C6R4",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ring1_tap KEY_RH_C1R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ring1_tap KEY_RH_C2R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ring1_tap KEY_RH_C3R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ring1_tap KEY_RH_C4R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ring1_tap KEY_RH_C5R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ring1_tap KEY_RH_C6R5",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ring1_tap KEY_RH_C2R6",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ring1_tap KEY_RH_C3R6",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ring1_tap KEY_RH_C4R6",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ring1_tap KEY_RH_C5R6",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      }
    ],
    [
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ring2_tap KEY_RH_C2R1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ring2_tap KEY_RH_C3R1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ring2_tap KEY_RH_C4R1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ring2_tap KEY_RH_C5R1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ring2_tap KEY_RH_C6R1",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ring2_tap KEY_RH_C1R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ring2_tap KEY_RH_C2R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ring2_tap KEY_RH_C3R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ring2_tap KEY_RH_C4R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ring2_tap KEY_RH_C5R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ring2_tap KEY_RH_C6R2",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp LEFT_RING2_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ring2_tap KEY_RH_C1R3",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ring2_tap KEY_RH_C2R3",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ring2_tap KEY_RH_C3R3",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ring2_tap KEY_RH_C5R3",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ring2_tap KEY_RH_C6R3",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp LEFT_PINKY_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp LEFT_RING1_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp LEFT_MIDDY_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp LEFT_INDEX_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp LEFT_PLAIN_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ring2_tap KEY_RH_C1R4",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightRing2Index",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightRing2Middy",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightRing2Ring1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightRing2Pinky",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ring2_tap KEY_RH_C6R4",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ring2_tap KEY_RH_C1R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ring2_tap KEY_RH_C2R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ring2_tap KEY_RH_C3R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ring2_tap KEY_RH_C4R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ring2_tap KEY_RH_C5R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ring2_tap KEY_RH_C6R5",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ring2_tap KEY_RH_C2R6",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ring2_tap KEY_RH_C3R6",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ring2_tap KEY_RH_C4R6",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_ring2_tap KEY_RH_C5R6",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      }
    ],
    [
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_middy_tap KEY_RH_C2R1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_middy_tap KEY_RH_C3R1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_middy_tap KEY_RH_C4R1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_middy_tap KEY_RH_C5R1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_middy_tap KEY_RH_C6R1",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_middy_tap KEY_RH_C1R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_middy_tap KEY_RH_C2R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_middy_tap KEY_RH_C3R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_middy_tap KEY_RH_C4R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_middy_tap KEY_RH_C5R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_middy_tap KEY_RH_C6R2",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp LEFT_RING2_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_middy_tap KEY_RH_C1R3",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_middy_tap KEY_RH_C2R3",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_middy_tap KEY_RH_C3R3",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightMiddyRing2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_middy_tap KEY_RH_C5R3",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_middy_tap KEY_RH_C6R3",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp LEFT_PINKY_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp LEFT_RING1_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp LEFT_MIDDY_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp LEFT_INDEX_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp LEFT_PLAIN_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_middy_tap KEY_RH_C1R4",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightMiddyIndex",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightMiddyRing1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightMiddyPinky",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_middy_tap KEY_RH_C6R4",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_middy_tap KEY_RH_C1R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_middy_tap KEY_RH_C2R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_middy_tap KEY_RH_C3R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_middy_tap KEY_RH_C4R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_middy_tap KEY_RH_C5R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_middy_tap KEY_RH_C6R5",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_middy_tap KEY_RH_C2R6",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_middy_tap KEY_RH_C3R6",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_middy_tap KEY_RH_C4R6",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_middy_tap KEY_RH_C5R6",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      }
    ],
    [
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_index_tap KEY_RH_C2R1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_index_tap KEY_RH_C3R1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_index_tap KEY_RH_C4R1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_index_tap KEY_RH_C5R1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_index_tap KEY_RH_C6R1",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_index_tap KEY_RH_C1R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_index_tap KEY_RH_C2R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_index_tap KEY_RH_C3R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_index_tap KEY_RH_C4R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_index_tap KEY_RH_C5R2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_index_tap KEY_RH_C6R2",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp LEFT_RING2_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_index_tap KEY_RH_C1R3",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_index_tap KEY_RH_C2R3",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_index_tap KEY_RH_C3R3",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightIndexRing2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_index_tap KEY_RH_C5R3",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_index_tap KEY_RH_C6R3",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp LEFT_PINKY_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp LEFT_RING1_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp LEFT_MIDDY_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp LEFT_INDEX_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&kp LEFT_PLAIN_KEY",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_index_tap KEY_RH_C1R4",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightIndexMiddy",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightIndexRing1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&RightIndexPinky",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_index_tap KEY_RH_C6R4",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_index_tap KEY_RH_C1R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_index_tap KEY_RH_C2R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_index_tap KEY_RH_C3R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_index_tap KEY_RH_C4R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_index_tap KEY_RH_C5R5",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_index_tap KEY_RH_C6R5",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_index_tap KEY_RH_C2R6",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_index_tap KEY_RH_C3R6",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_index_tap KEY_RH_C4R6",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&right_index_tap KEY_RH_C5R6",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      }
    ],
    [
      {
        "value": "&kp",
        "params": [
          {
            "value": "F1",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F2",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F3",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F4",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F5",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F6",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F7",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F8",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F9",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F10",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "EQUAL",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N1",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N2",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N3",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N4",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N5",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N6",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N7",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N8",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N9",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N0",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "MINUS",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "TAB",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "Q",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "W",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "E",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "R",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "T",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "Y",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "U",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "I",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "O",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "P",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "BSLH",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "ESC",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "A",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "S",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "D",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "G",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "H",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "J",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "K",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "L",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "SEMI",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "SQT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "GRAVE",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "Z",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "X",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "V",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "B",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LSHFT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LCTRL",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LGUI",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RCTRL",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RSHFT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "M",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "COMMA",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "DOT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "FSLH",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "PG_UP",
            "params": []
          }
        ]
      },
      {
        "value": "&magic",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "HOME",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "END",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LEFT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RIGHT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "BSPC",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "DEL",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LALT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RALT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RET",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "SPACE",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "UP",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "DOWN",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LBKT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RBKT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "PG_DN",
            "params": []
          }
        ]
      }
    ],
    [
      {
        "value": "&bt",
        "params": [
          {
            "value": "BT_CLR",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&bt",
        "params": [
          {
            "value": "BT_CLR_ALL",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&to 0",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&to 1",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&to 2",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&to 3",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&to 4",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&to 5",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&rgb_ug",
        "params": [
          {
            "value": "RGB_SPI",
            "params": []
          }
        ]
      },
      {
        "value": "&rgb_ug",
        "params": [
          {
            "value": "RGB_SAI",
            "params": []
          }
        ]
      },
      {
        "value": "&rgb_ug",
        "params": [
          {
            "value": "RGB_HUI",
            "params": []
          }
        ]
      },
      {
        "value": "&rgb_ug",
        "params": [
          {
            "value": "RGB_BRI",
            "params": []
          }
        ]
      },
      {
        "value": "&rgb_ug",
        "params": [
          {
            "value": "RGB_TOG",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&bootloader",
        "params": []
      },
      {
        "value": "&rgb_ug",
        "params": [
          {
            "value": "RGB_SPD",
            "params": []
          }
        ]
      },
      {
        "value": "&rgb_ug",
        "params": [
          {
            "value": "RGB_SAD",
            "params": []
          }
        ]
      },
      {
        "value": "&rgb_ug",
        "params": [
          {
            "value": "RGB_HUD",
            "params": []
          }
        ]
      },
      {
        "value": "&rgb_ug",
        "params": [
          {
            "value": "RGB_BRD",
            "params": []
          }
        ]
      },
      {
        "value": "&rgb_ug",
        "params": [
          {
            "value": "RGB_EFF",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&bootloader",
        "params": []
      },
      {
        "value": "&reset",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&bt_2",
        "params": []
      },
      {
        "value": "&bt_3",
        "params": []
      },
      {
        "value": "&tog",
        "params": [
          {
            "value": 12,
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&reset",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&bt_0",
        "params": []
      },
      {
        "value": "&bt_1",
        "params": []
      },
      {
        "value": "&out",
        "params": [
          {
            "value": "OUT_USB",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      }
    ],
    [
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F1",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F2",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F3",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F4",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F5",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F6",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F7",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F8",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F9",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F10",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "TAB",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LS",
            "params": [
              {
                "value": "N1",
                "params": []
              }
            ]
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LS",
            "params": [
              {
                "value": "N2",
                "params": []
              }
            ]
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LS",
            "params": [
              {
                "value": "N3",
                "params": []
              }
            ]
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LS",
            "params": [
              {
                "value": "N4",
                "params": []
              }
            ]
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LS",
            "params": [
              {
                "value": "N5",
                "params": []
              }
            ]
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LS",
            "params": [
              {
                "value": "N6",
                "params": []
              }
            ]
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LS",
            "params": [
              {
                "value": "N7",
                "params": []
              }
            ]
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LS",
            "params": [
              {
                "value": "N8",
                "params": []
              }
            ]
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LS",
            "params": [
              {
                "value": "N9",
                "params": []
              }
            ]
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LS",
            "params": [
              {
                "value": "N0",
                "params": []
              }
            ]
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "TAB",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "ESC",
            "params": []
          }
        ]
      },
      {
        "value": "&mt",
        "params": [
          {
            "value": "LSHFT",
            "params": []
          },
          {
            "value": "N1",
            "params": []
          }
        ]
      },
      {
        "value": "&mt",
        "params": [
          {
            "value": "LCTRL",
            "params": []
          },
          {
            "value": "N2",
            "params": []
          }
        ]
      },
      {
        "value": "&mt",
        "params": [
          {
            "value": "LALT",
            "params": []
          },
          {
            "value": "N3",
            "params": []
          }
        ]
      },
      {
        "value": "&mt",
        "params": [
          {
            "value": "LGUI",
            "params": []
          },
          {
            "value": "N4",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N5",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N6",
            "params": []
          }
        ]
      },
      {
        "value": "&mt",
        "params": [
          {
            "value": "LGUI",
            "params": []
          },
          {
            "value": "N7",
            "params": []
          }
        ]
      },
      {
        "value": "&mt",
        "params": [
          {
            "value": "LALT",
            "params": []
          },
          {
            "value": "N8",
            "params": []
          }
        ]
      },
      {
        "value": "&mt",
        "params": [
          {
            "value": "LCTRL",
            "params": []
          },
          {
            "value": "N9",
            "params": []
          }
        ]
      },
      {
        "value": "&mt",
        "params": [
          {
            "value": "LSHFT",
            "params": []
          },
          {
            "value": "N0",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "ESC",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "GRAVE",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "SQT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "MINUS",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "EQUAL",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "TAB",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "TAB",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LBKT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RBKT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "PLUS",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "BSLH",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&lt",
        "params": [
          {
            "value": 15,
            "params": []
          },
          {
            "value": "RET",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&lt",
        "params": [
          {
            "value": 15,
            "params": []
          },
          {
            "value": "RET",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      }
    ],
    [
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LEFT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "DOWN",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "UP",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RIGHT",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      }
    ],
    [
      {
        "value": "&kp",
        "params": [
          {
            "value": "F1",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F2",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F3",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F4",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F5",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F6",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F7",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F8",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F9",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F10",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "EQUAL",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N1",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N2",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N3",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N4",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N5",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N6",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N7",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N8",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N9",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N0",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "MINUS",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "TAB",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "Q",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "W",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "E",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "R",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "T",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "Y",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "U",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "I",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "O",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "P",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "BSLH",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "CAPS",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "A",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "S",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "D",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "G",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "H",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "J",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "K",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "L",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "SEMI",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "SQT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LSHFT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "Z",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "X",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "V",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "B",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "ESC",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "P",
            "params": []
          }
        ]
      },
      {
        "value": "&to",
        "params": [
          {
            "value": 0,
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LS",
            "params": [
              {
                "value": "LG",
                "params": [
                  {
                    "value": "M",
                    "params": []
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "DEL",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "BSPC",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "M",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "COMMA",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "DOT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "FSLH",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RSHFT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LCTRL",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "HOME",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "END",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "PG_DN",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "PG_DN",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "SPACE",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LGUI",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F11",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F12",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RET",
            "params": []
          }
        ]
      },
      {
        "value": "&lt",
        "params": [
          {
            "value": 14,
            "params": []
          },
          {
            "value": "SPACE",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LEFT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "DOWN",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "UP",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RIGHT",
            "params": []
          }
        ]
      },
      {
        "value": "&to",
        "params": [
          {
            "value": 0,
            "params": []
          }
        ]
      }
    ]
  ],
  "custom_defined_behaviors": "// NOTE: Use the `#define` settings below to customize this keymap!\n// For example, here are the main optional features you can enable:\n#define DIFFICULTY_LEVEL  4 // 1:easy --> 5:hard (see levels below)\n\n#define PINKY_FINGER_MOD LSFT\n#define RING1_FINGER_MOD LCTL\n#define RING2_FINGER_MOD RALT\n#define MIDDY_FINGER_MOD LALT\n#define INDEX_FINGER_MOD LGUI\n\n\n//////////////////////////////////////////////////////////////////////////////\n//\n// Sunaku's Keymap v34 -- \"Glorious Engrammer\"\n// - https://github.com/sunaku/glove80-keymaps\n//\n//////////////////////////////////////////////////////////////////////////////\n\n//\n// DIFFICULTY_LEVEL specifies your level of expertise with this keymap.\n// It's meant to help newcomers gradually work their way up to mastery.\n// You can disable this setting by omitting it or assigning a `0` zero.\n//\n// #define DIFFICULTY_LEVEL 0 // custom (no preset settings)\n// #define DIFFICULTY_LEVEL 1 // novice (500ms)\n// #define DIFFICULTY_LEVEL 2 // slower (400ms)\n// #define DIFFICULTY_LEVEL 3 // normal (300ms)\n// #define DIFFICULTY_LEVEL 4 // faster (200ms)\n// #define DIFFICULTY_LEVEL 5 // sunaku (see defaults below)\n//\n#ifdef DIFFICULTY_LEVEL\n#if DIFFICULTY_LEVEL == 1\n    #define CAPPY_HOLDING_TIME 500\n    #define HOMEY_HOLDING_TIME 500\n    #define INDEX_HOLDING_TIME 500\n    #define PLAIN_HOLDING_TIME 500\n    #define SPACE_HOLDING_TIME 500\n#elif DIFFICULTY_LEVEL == 2\n    #define CAPPY_HOLDING_TIME 400\n    #define HOMEY_HOLDING_TIME 400\n    #define INDEX_HOLDING_TIME 400\n    #define PLAIN_HOLDING_TIME 400\n    #define SPACE_HOLDING_TIME 400\n#elif DIFFICULTY_LEVEL == 3\n    #define CAPPY_HOLDING_TIME 300\n    #define HOMEY_HOLDING_TIME 300\n    #define INDEX_HOLDING_TIME 300\n    #define PLAIN_HOLDING_TIME 300\n    #define SPACE_HOLDING_TIME 300\n#elif DIFFICULTY_LEVEL == 4\n    #define CAPPY_HOLDING_TIME 200\n    #define HOMEY_HOLDING_TIME 200\n    #define INDEX_HOLDING_TIME 200\n    #define PLAIN_HOLDING_TIME 200\n    #define SPACE_HOLDING_TIME 200\n#endif\n#endif\n\n//\n// OPERATING_SYSTEM defines which operating system you intend to use\n// with this keymap, because shortcuts vary across operating systems.\n//\n// - https://zmk.dev/docs/codes\n// - https://en.wikipedia.org/wiki/Table_of_keyboard_shortcuts\n//\n#ifndef OPERATING_SYSTEM\n#define OPERATING_SYSTEM 1 // linux\n#endif\n#if OPERATING_SYSTEM == 2\n    #define _C      LG\n    #define _REDO   _C(LS(Z))\n    #define _POWER  K_POWER\n    #define _W      LA\n    #define _HOME   _C(LEFT)\n    #define _END    _C(RIGHT)\n#else\n    #define _C      LC\n    #define _REDO   _C(Y)\n    #define _POWER  C_POWER\n    #define _W      _C\n    #define _HOME   HOME\n    #define _END    END\n#endif\n#define _SLEEP      C_SLEEP\n#if OPERATING_SYSTEM == 3\n    #define _LOCK   LG(L)\n#elif OPERATING_SYSTEM == 2\n    #define _LOCK   _C(LC(Q))\n#elif OPERATING_SYSTEM == 1\n    #define _LOCK   K_LOCK\n#endif\n#define _UNDO       _C(Z)\n#define _CUT        _C(X)\n#define _COPY       _C(C)\n#define _PASTE      _C(V)\n#define _FIND       _C(F)\n#define _FIND_NEXT  _C(G)\n#define _FIND_PREV  _C(LS(G))\n\n//\n// Glove80 specific symbol overrides to support non \"en-US\" locales\n//\n#undef  AMPS\n#define AMPS  LS(N7)\n#undef  AT\n#define AT    LS(N2)\n#undef  CARET\n#define CARET LS(N6)\n#undef  COLON\n#define COLON LS(SEMI)\n#undef  DLLR\n#define DLLR  LS(N4)\n#undef  DQT\n#define DQT   LS(SQT)\n#undef  EXCL\n#define EXCL  LS(N1)\n#undef  GT\n#define GT    LS(DOT)\n#undef  HASH\n#define HASH  LS(N3)\n#undef  LBRC\n#define LBRC  LS(LBKT)\n#undef  LPAR\n#define LPAR  LS(N9)\n#undef  LT\n#define LT    LS(COMMA)\n#undef  PIPE\n#define PIPE  LS(BSLH)\n#undef  PLUS\n#define PLUS  LS(EQUAL)\n#undef  PRCNT\n#define PRCNT LS(N5)\n#undef  QMARK\n#define QMARK LS(FSLH)\n#undef  RBRC\n#define RBRC  LS(RBKT)\n#undef  RPAR\n#define RPAR  LS(N0)\n#undef  STAR\n#define STAR  LS(N8)\n#undef  TILDE\n#define TILDE LS(GRAVE)\n#undef  UNDER\n#define UNDER LS(MINUS)\n\n#if LAYER_QWERTY == 0\n#define KEY_LH_C6R1 F1\n#define KEY_LH_C5R1 F2\n#define KEY_LH_C4R1 F3\n#define KEY_LH_C3R1 F4\n#define KEY_LH_C2R1 F5\n#define KEY_RH_C2R1 F6\n#define KEY_RH_C3R1 F7\n#define KEY_RH_C4R1 F8\n#define KEY_RH_C5R1 F9\n#define KEY_RH_C6R1 F10\n#define KEY_LH_C6R2 EQUAL\n#define KEY_LH_C5R2 N1\n#define KEY_LH_C4R2 N2\n#define KEY_LH_C3R2 N3\n#define KEY_LH_C2R2 N4\n#define KEY_LH_C1R2 N5\n#define KEY_RH_C1R2 N6\n#define KEY_RH_C2R2 N7\n#define KEY_RH_C3R2 N8\n#define KEY_RH_C4R2 N9\n#define KEY_RH_C5R2 N0\n#define KEY_RH_C6R2 BSLH\n#define KEY_LH_C6R3 GRAVE\n#define KEY_LH_C5R3 Q\n#define KEY_LH_C4R3 W\n#define KEY_LH_C3R3 E\n#define KEY_LH_C2R3 R\n#define KEY_LH_C1R3 T\n#define KEY_RH_C1R3 Y\n#define KEY_RH_C2R3 U\n#define KEY_RH_C3R3 I\n#define KEY_RH_C4R3 O\n#define KEY_RH_C5R3 P\n#define KEY_RH_C6R3 MINUS\n#define KEY_LH_C6R4 CAPSLOCK\n#define KEY_LH_C5R4 A\n#define KEY_LH_C4R4 S\n#define KEY_LH_C3R4 D\n#define KEY_LH_C2R4 F\n#define KEY_LH_C1R4 G\n#define KEY_RH_C1R4 H\n#define KEY_RH_C2R4 J\n#define KEY_RH_C3R4 K\n#define KEY_RH_C4R4 L\n#define KEY_RH_C5R4 SEMI\n#define KEY_RH_C6R4 SQT\n#define KEY_LH_C6R5 LSHFT\n#define KEY_LH_C5R5 Z\n#define KEY_LH_C4R5 X\n#define KEY_LH_C3R5 C\n#define KEY_LH_C2R5 V\n#define KEY_LH_C1R5 B\n#define KEY_LH_T1 ESC\n#define KEY_LH_T2 UP\n#define KEY_LH_T3 DOWN\n#define KEY_RH_T3 LEFT\n#define KEY_RH_T2 RIGHT\n#define KEY_RH_T1 ENTER\n#define KEY_RH_C1R5 N\n#define KEY_RH_C2R5 M\n#define KEY_RH_C3R5 COMMA\n#define KEY_RH_C4R5 DOT\n#define KEY_RH_C5R5 FSLH\n#define KEY_RH_C6R5 RSHFT\n#define KEY_LH_C6R6 0\n#define KEY_LH_C5R6 HOME\n#define KEY_LH_C4R6 PG_UP\n#define KEY_LH_C3R6 PG_DN\n#define KEY_LH_C2R6 END\n#define KEY_LH_T4 BACKSPACE\n#define KEY_LH_T5 DELETE\n#define KEY_LH_T6 0\n#define KEY_RH_T6 0\n#define KEY_RH_T5 TAB\n#define KEY_RH_T4 SPACE\n#define KEY_RH_C2R6 LPAR\n#define KEY_RH_C3R6 LBKT\n#define KEY_RH_C4R6 RBKT\n#define KEY_RH_C5R6 RPAR\n#define KEY_RH_C6R6 0\n#endif\n\nbehaviors {\n\n    //////////////////////////////////////////////////////////////////////////\n    //\n    // Miryoku layers and home row mods (ported from my QMK endgame)\n    // - https://sunaku.github.io/home-row-mods.html#porting-to-zmk\n    // - https://github.com/urob/zmk-config#timeless-homerow-mods\n    //\n    //////////////////////////////////////////////////////////////////////////\n\n    //\n    // ENFORCE_BILATERAL cancels out single-handed home row mods activation by\n    // releasing any currently pressed mods and replacing them with plain taps.\n    //\n    // NOTE: You may still encounter \"flashing mods\" where an operating system\n    // action is triggered by the release of mods, such as LGUI which launches\n    // the Windows Start Menu and LALT which opens the Microsoft Office Ribbon.\n    //\n    #define ENFORCE_BILATERAL\n\n    //\n    // ENABLE_KEY_REPEAT allows \"tap then hold\" repetition of the tap portion\n    // of home row mods and layer access keys.  You can keep this disabled if\n    // you prefer to use the &plain overlay method of key repetition instead.\n    //\n    #define ENABLE_KEY_REPEAT\n\n    //\n    // The *_FINGER_MOD specify which modifiers are used by home row mod keys.\n    // Here, we use Miryoku's \"GACS\" (Win, Alt, Ctrl, Shift) order by default,\n    // unless OPERATING_SYSTEM is macOS, in which case Win & Ctrl are swapped.\n    //\n    #ifndef PINKY_FINGER_MOD\n      #if OPERATING_SYSTEM == 2\n        #define PINKY_FINGER_MOD LCTL\n      #else\n        #define PINKY_FINGER_MOD LGUI\n      #endif\n    #endif\n    #ifndef RING1_FINGER_MOD\n    #define RING1_FINGER_MOD LALT\n    #endif\n    #ifndef RING2_FINGER_MOD\n    #define RING2_FINGER_MOD RALT\n    #endif\n    #ifndef MIDDY_FINGER_MOD\n      #if OPERATING_SYSTEM == 2\n        #define MIDDY_FINGER_MOD LGUI\n      #else\n        #define MIDDY_FINGER_MOD LCTL\n      #endif\n    #endif\n    #ifndef INDEX_FINGER_MOD\n    #define INDEX_FINGER_MOD LSFT\n    #endif\n    //\n    // The following settings let you configure mods individually, per finger:\n    //\n    #ifndef LEFT_PINKY_MOD\n    #define LEFT_PINKY_MOD  PINKY_FINGER_MOD\n    #endif\n    #ifndef RIGHT_PINKY_MOD\n    #define RIGHT_PINKY_MOD PINKY_FINGER_MOD\n    #endif\n    #ifndef LEFT_RING1_MOD\n    #define LEFT_RING1_MOD  RING1_FINGER_MOD\n    #endif\n    #ifndef RIGHT_RING1_MOD\n    #define RIGHT_RING1_MOD RING1_FINGER_MOD\n    #endif\n    #ifndef LEFT_RING2_MOD\n    #define LEFT_RING2_MOD  RING2_FINGER_MOD\n    #endif\n    #ifndef RIGHT_RING2_MOD\n    #define RIGHT_RING2_MOD RING2_FINGER_MOD\n    #endif\n    #ifndef LEFT_MIDDY_MOD\n    #define LEFT_MIDDY_MOD  MIDDY_FINGER_MOD\n    #endif\n    #ifndef RIGHT_MIDDY_MOD\n    #define RIGHT_MIDDY_MOD MIDDY_FINGER_MOD\n    #endif\n    #ifndef LEFT_INDEX_MOD\n    #define LEFT_INDEX_MOD  INDEX_FINGER_MOD\n    #endif\n    #ifndef RIGHT_INDEX_MOD\n    #define RIGHT_INDEX_MOD INDEX_FINGER_MOD\n    #endif\n\n    //\n    // HOMEY_HOLDING_TYPE defines the flavor of ZMK hold-tap behavior to use\n    // for the pinky, ring, and middle fingers (which are assigned to Super,\n    // Alt, and Ctrl respectively in the Miryoku system) on home row keys.\n    //\n    #ifndef HOMEY_HOLDING_TYPE\n    #define HOMEY_HOLDING_TYPE \"tap-preferred\"\n    #endif\n\n    //\n    // HOMEY_HOLDING_TIME defines how long you need to hold (milliseconds)\n    // home row mod keys in order to send their modifiers to the computer\n    // (i.e. \"register\" them) for mod-click mouse usage (e.g. Ctrl-Click).\n    //\n    #ifndef HOMEY_HOLDING_TIME\n    #define HOMEY_HOLDING_TIME 270 // TAPPING_TERM + ALLOW_CROSSOVER_AFTER\n    #endif\n\n    //\n    // HOMEY_STREAK_DECAY defines how long you need to wait (milliseconds)\n    // after typing before you can use home row mods again.  It prevents\n    // unintended activation of home row mods when you're actively typing.\n    //\n    #ifndef HOMEY_STREAK_DECAY\n    #define HOMEY_STREAK_DECAY 230\n    #endif\n\n    //\n    // HOMEY_REPEAT_DECAY defines how much time you have left (milliseconds)\n    // after tapping a key to hold it again in order to make it auto-repeat.\n    //\n    #ifndef HOMEY_REPEAT_DECAY\n    #define HOMEY_REPEAT_DECAY 300 // \"tap then hold\" for key auto-repeat\n    #endif\n\n    //\n    // CHORD_HOLDING_TYPE defines the flavor of ZMK hold-tap behavior to use\n    // for chorded home row mods (secondary keypresses in multi-mod chords).\n    //\n    #ifndef CHORD_HOLDING_TYPE\n    #define CHORD_HOLDING_TYPE HOMEY_HOLDING_TYPE\n    #endif\n\n    //\n    // CHORD_HOLDING_TIME defines how long you need to hold (milliseconds)\n    // home row mod keys in order to send their modifiers to the computer\n    // (i.e. \"register\" them) for mod-click mouse usage (e.g. Ctrl-Click).\n    // This is specifically for secondary keypresses in multi-mod chords.\n    //\n    #ifndef CHORD_HOLDING_TIME\n    #define CHORD_HOLDING_TIME 150\n    #endif\n\n    //\n    // CHORD_STREAK_DECAY defines how long you need to wait (milliseconds)\n    // after typing before you can use home row mods again.  It prevents\n    // unintended activation of home row mods when you're actively typing\n    // This is specifically for secondary keypresses in multi-mod chords.\n    //\n    #ifndef CHORD_STREAK_DECAY\n    #define CHORD_STREAK_DECAY HOMEY_STREAK_DECAY\n    #endif\n\n    //\n    // CHORD_REPEAT_DECAY defines how much time you have left (milliseconds)\n    // after tapping a key to hold it again in order to make it auto-repeat.\n    // This is specifically for secondary keypresses in multi-mod chords.\n    //\n    #ifndef CHORD_REPEAT_DECAY\n    #define CHORD_REPEAT_DECAY HOMEY_REPEAT_DECAY\n    #endif\n\n    //\n    // INDEX_HOLDING_TYPE defines the flavor of ZMK hold-tap behavior to use\n    // for index fingers (which Miryoku assigns to Shift) on home row keys.\n    //\n    // NOTE: The \"tap-preferred\" flavor of ZMK hold-tap for index finger keys\n    // allows faster activation of the Shift modifier (without having to wait\n    // for the modified key to be released as the \"balanced\" flavor requires).\n    // Typing streaks and the `hold-trigger-on-release` setting are disabled\n    // for the index fingers so as not to hinder their speed and dexterity.\n    //\n    #ifndef INDEX_HOLDING_TYPE\n    #define INDEX_HOLDING_TYPE \"tap-preferred\"\n    #endif\n\n    //\n    // INDEX_HOLDING_TIME defines how long you need to hold (milliseconds)\n    // index finger keys in order to send their modifiers to the computer\n    // (i.e. \"register\" them) for mod-click mouse usage (e.g. Shift-Click).\n    //\n    #ifndef INDEX_HOLDING_TIME\n    #define INDEX_HOLDING_TIME 170\n    #endif\n\n    //\n    // INDEX_STREAK_DECAY defines how long you need to wait (milliseconds)\n    // after typing before you can use home row mods again.  It prevents\n    // unintended activation of home row mods when you're actively typing.\n    //\n    #ifndef INDEX_STREAK_DECAY\n    #define INDEX_STREAK_DECAY 100\n    #endif\n\n    //\n    // INDEX_REPEAT_DECAY defines how much time you have left (milliseconds)\n    // after tapping a key to hold it again in order to make it auto-repeat.\n    //\n    #ifndef INDEX_REPEAT_DECAY\n    #define INDEX_REPEAT_DECAY 300 // \"tap then hold\" for key auto-repeat\n    #endif\n\n    //\n    // PLAIN_HOLDING_TYPE defines the flavor of ZMK hold-tap behavior to use\n    // for index fingers (which Miryoku assigns to Shift) on home row keys.\n    //\n    // NOTE: The \"tap-preferred\" flavor of ZMK hold-tap for index finger keys\n    // allows faster activation of the Shift modifier (without having to wait\n    // for the modified key to be released as the \"balanced\" flavor requires).\n    // Typing streaks and the `hold-trigger-on-release` setting are disabled\n    // for the index fingers so as not to hinder their speed and dexterity.\n    //\n    #ifndef PLAIN_HOLDING_TYPE\n    #define PLAIN_HOLDING_TYPE HOMEY_HOLDING_TYPE\n    #endif\n\n    //\n    // PLAIN_HOLDING_TIME defines how long you need to hold (milliseconds)\n    // index finger keys in order to send their modifiers to the computer\n    // (i.e. \"register\" them) for mod-click mouse usage (e.g. Shift-Click).\n    //\n    #ifndef PLAIN_HOLDING_TIME\n    #define PLAIN_HOLDING_TIME HOMEY_HOLDING_TIME\n    #endif\n\n    //\n    // PLAIN_STREAK_DECAY defines how long you need to wait (milliseconds)\n    // after typing before you can use home row mods again.  It prevents\n    // unintended activation of home row mods when you're actively typing.\n    //\n    #ifndef PLAIN_STREAK_DECAY\n    #define PLAIN_STREAK_DECAY HOMEY_STREAK_DECAY\n    #endif\n\n    //\n    // THUMB_HOLDING_TYPE defines the flavor of ZMK hold-tap behavior to use\n    // for the thumbs (which are assigned to 6 layers in the Miryoku system).\n    //\n    // NOTE: The \"balanced\" flavor of ZMK hold-tap provides instant modifier\n    // activation for the symbol layer (if the tapped symbol key is released\n    // while the thumb layer key is still held down) for quicker programming.\n    //\n    #ifndef THUMB_HOLDING_TYPE\n    #define THUMB_HOLDING_TYPE \"balanced\"\n    #endif\n\n    //\n    // THUMB_HOLDING_TIME defines how long you need to hold (milliseconds)\n    // a thumb key to activate a layer.  Shorter holds are treated as taps.\n    //\n    #ifndef THUMB_HOLDING_TIME\n    #define THUMB_HOLDING_TIME 200\n    #endif\n\n    //\n    // THUMB_REPEAT_DECAY defines how much time you have left (milliseconds)\n    // after tapping a key to hold it again in order to make it auto-repeat.\n    //\n    #ifndef THUMB_REPEAT_DECAY\n    #define THUMB_REPEAT_DECAY 300 // \"tap then hold\" for key auto-repeat\n    #endif\n\n    //\n    // SPACE_HOLDING_TYPE defines the flavor of ZMK hold-tap behavior to use\n    // for spacebar (assigned to the right thumb's home position by default).\n    //\n    // NOTE: The \"balanced\" flavor of ZMK hold-tap provides instant modifier\n    // activation for the symbol layer (if the tapped symbol key is released\n    // while the thumb layer key is still held down) for quicker programming.\n    //\n    #ifndef SPACE_HOLDING_TYPE\n    #define SPACE_HOLDING_TYPE THUMB_HOLDING_TYPE\n    #endif\n\n    //\n    // SPACE_HOLDING_TIME defines how long you need to hold (milliseconds)\n    // the space thumb key to activate.  Shorter holds are treated as taps.\n    //\n    #ifndef SPACE_HOLDING_TIME\n    #define SPACE_HOLDING_TIME THUMB_HOLDING_TIME\n    #endif\n\n    //\n    // SPACE_REPEAT_DECAY defines how much time you have left (milliseconds)\n    // after tapping a key to hold it again in order to make it auto-repeat.\n    //\n    #ifndef SPACE_REPEAT_DECAY\n    #define SPACE_REPEAT_DECAY THUMB_REPEAT_DECAY\n    #endif\n\n    //\n    // Glove80 key positions index for positional hold-tap\n    // - https://discord.com/channels/877392805654306816/937645688244826154/1066713913351221248\n    // - https://media.discordapp.net/attachments/937645688244826154/1066713913133121556/image.png\n    //\n    // |------------------------|------------------------|\n    // | LEFT_HAND_KEYS         |        RIGHT_HAND_KEYS |\n    // |                        |                        |\n    // |  0  1  2  3  4         |          5  6  7  8  9 |\n    // | 10 11 12 13 14 15      |      16 17 18 19 20 21 |\n    // | 22 23 24 25 26 27      |      28 29 30 31 32 33 |\n    // | 34 35 36 37 38 39      |      40 41 42 43 44 45 |\n    // | 46 47 48 49 50 51      |      58 59 60 61 62 63 |\n    // | 64 65 66 67 68         |         75 76 77 78 79 |\n    // |                69 52   |   57 74                |\n    // |                 70 53  |  56 73                 |\n    // |                  71 54 | 55 72                  |\n    // |------------------------|------------------------|\n    //\n    #define LEFT_HAND_KEYS      \\\n          0  1  2  3  4         \\\n         10 11 12 13 14 15      \\\n         22 23 24 25 26 27      \\\n         34 35 36 37 38 39      \\\n         46 47 48 49 50 51      \\\n         64 65 66 67 68\n    #define RIGHT_HAND_KEYS     \\\n                                           5  6  7  8  9 \\\n                                       16 17 18 19 20 21 \\\n                                       28 29 30 31 32 33 \\\n                                       40 41 42 43 44 45 \\\n                                       58 59 60 61 62 63 \\\n                                          75 76 77 78 79\n    #define THUMB_KEYS          \\\n                        69 52       57 74                \\\n                         70 53     56 73                 \\\n                          71 54   55 72\n\n    #define LEFT_PINKY_KEY  KEY_LH_C5R4\n    #define LEFT_RING1_KEY  KEY_LH_C4R4\n    #define LEFT_RING2_KEY  KEY_LH_C4R3\n    #define LEFT_MIDDY_KEY  KEY_LH_C3R4\n    #define LEFT_INDEX_KEY  KEY_LH_C2R4\n    #define LEFT_PLAIN_KEY  KEY_LH_C1R4\n\n    #define RIGHT_PINKY_KEY KEY_RH_C5R4\n    #define RIGHT_RING1_KEY KEY_RH_C4R4\n    #define RIGHT_RING2_KEY KEY_RH_C4R3\n    #define RIGHT_MIDDY_KEY KEY_RH_C3R4\n    #define RIGHT_INDEX_KEY KEY_RH_C2R4\n    #define RIGHT_PLAIN_KEY KEY_RH_C1R4\n\n    //\n    // Home row mods with bilateral combinations support\n    //\n    #ifndef PINKY_HOLDING_TYPE\n    #define PINKY_HOLDING_TYPE INDEX_HOLDING_TYPE\n    #endif\n    #ifndef PINKY_CHORD_HOLDING_TYPE\n    #define PINKY_CHORD_HOLDING_TYPE INDEX_HOLDING_TYPE\n    #endif\n    #ifndef LEFT_PINKY_CHORD_HOLDING_TYPE\n    #define LEFT_PINKY_CHORD_HOLDING_TYPE INDEX_CHORD_HOLDING_TYPE\n    #endif\n    #ifndef RIGHT_PINKY_CHORD_HOLDING_TYPE\n    #define RIGHT_PINKY_CHORD_HOLDING_TYPE INDEX_CHORD_HOLDING_TYPE\n    #endif\n    #ifndef PINKY_HOLDING_TIME\n    #define PINKY_HOLDING_TIME INDEX_HOLDING_TIME\n    #endif\n    #ifndef PINKY_CHORD_HOLDING_TIME\n    #define PINKY_CHORD_HOLDING_TIME CHORD_HOLDING_TIME\n    #endif\n    #ifndef LEFT_PINKY_CHORD_HOLDING_TIME\n    #define LEFT_PINKY_CHORD_HOLDING_TIME INDEX_CHORD_HOLDING_TIME\n    #endif\n    #ifndef RIGHT_PINKY_CHORD_HOLDING_TIME\n    #define RIGHT_PINKY_CHORD_HOLDING_TIME INDEX_CHORD_HOLDING_TIME\n    #endif\n    #ifndef PINKY_STREAK_DECAY\n    #define PINKY_STREAK_DECAY INDEX_STREAK_DECAY\n    #endif\n    #ifndef PINKY_CHORD_STREAK_DECAY\n    #define PINKY_CHORD_STREAK_DECAY INDEX_STREAK_DECAY\n    #endif\n    #ifndef LEFT_PINKY_CHORD_STREAK_DECAY\n    #define LEFT_PINKY_CHORD_STREAK_DECAY INDEX_CHORD_STREAK_DECAY\n    #endif\n    #ifndef RIGHT_PINKY_CHORD_STREAK_DECAY\n    #define RIGHT_PINKY_CHORD_STREAK_DECAY INDEX_CHORD_STREAK_DECAY\n    #endif\n    #ifndef PINKY_REPEAT_DECAY\n    #define PINKY_REPEAT_DECAY INDEX_REPEAT_DECAY\n    #endif\n    #ifndef PINKY_CHORD_REPEAT_DECAY\n    #define PINKY_CHORD_REPEAT_DECAY INDEX_REPEAT_DECAY\n    #endif\n    #ifndef LEFT_PINKY_CHORD_REPEAT_DECAY\n    #define LEFT_PINKY_CHORD_REPEAT_DECAY INDEX_CHORD_REPEAT_DECAY\n    #endif\n    #ifndef RIGHT_PINKY_CHORD_REPEAT_DECAY\n    #define RIGHT_PINKY_CHORD_REPEAT_DECAY INDEX_CHORD_REPEAT_DECAY\n    #endif\n    #ifndef RING1_HOLDING_TYPE\n    #define RING1_HOLDING_TYPE HOMEY_HOLDING_TYPE\n    #endif\n    #ifndef RING1_CHORD_HOLDING_TYPE\n    #define RING1_CHORD_HOLDING_TYPE CHORD_HOLDING_TYPE\n    #endif\n    #ifndef LEFT_RING1_CHORD_HOLDING_TYPE\n    #define LEFT_RING1_CHORD_HOLDING_TYPE RING1_CHORD_HOLDING_TYPE\n    #endif\n    #ifndef RIGHT_RING1_CHORD_HOLDING_TYPE\n    #define RIGHT_RING1_CHORD_HOLDING_TYPE RING1_CHORD_HOLDING_TYPE\n    #endif\n    #ifndef RING1_HOLDING_TIME\n    #define RING1_HOLDING_TIME HOMEY_HOLDING_TIME\n    #endif\n    #ifndef RING1_CHORD_HOLDING_TIME\n    #define RING1_CHORD_HOLDING_TIME CHORD_HOLDING_TIME\n    #endif\n    #ifndef LEFT_RING1_CHORD_HOLDING_TIME\n    #define LEFT_RING1_CHORD_HOLDING_TIME RING1_CHORD_HOLDING_TIME\n    #endif\n    #ifndef RIGHT_RING1_CHORD_HOLDING_TIME\n    #define RIGHT_RING1_CHORD_HOLDING_TIME RING1_CHORD_HOLDING_TIME\n    #endif\n    #ifndef RING1_STREAK_DECAY\n    #define RING1_STREAK_DECAY HOMEY_STREAK_DECAY\n    #endif\n    #ifndef RING1_CHORD_STREAK_DECAY\n    #define RING1_CHORD_STREAK_DECAY CHORD_STREAK_DECAY\n    #endif\n    #ifndef LEFT_RING1_CHORD_STREAK_DECAY\n    #define LEFT_RING1_CHORD_STREAK_DECAY RING1_CHORD_STREAK_DECAY\n    #endif\n    #ifndef RIGHT_RING1_CHORD_STREAK_DECAY\n    #define RIGHT_RING1_CHORD_STREAK_DECAY RING1_CHORD_STREAK_DECAY\n    #endif\n    #ifndef RING1_REPEAT_DECAY\n    #define RING1_REPEAT_DECAY HOMEY_REPEAT_DECAY\n    #endif\n    #ifndef RING1_CHORD_REPEAT_DECAY\n    #define RING1_CHORD_REPEAT_DECAY CHORD_REPEAT_DECAY\n    #endif\n    #ifndef LEFT_RING1_CHORD_REPEAT_DECAY\n    #define LEFT_RING1_CHORD_REPEAT_DECAY RING1_CHORD_REPEAT_DECAY\n    #endif\n    #ifndef RIGHT_RING1_CHORD_REPEAT_DECAY\n    #define RIGHT_RING1_CHORD_REPEAT_DECAY RING1_CHORD_REPEAT_DECAY\n    #endif\n    #ifndef RING2_HOLDING_TYPE\n    #define RING2_HOLDING_TYPE HOMEY_HOLDING_TYPE\n    #endif\n    #ifndef RING2_CHORD_HOLDING_TYPE\n    #define RING2_CHORD_HOLDING_TYPE CHORD_HOLDING_TYPE\n    #endif\n    #ifndef LEFT_RING2_CHORD_HOLDING_TYPE\n    #define LEFT_RING2_CHORD_HOLDING_TYPE RING2_CHORD_HOLDING_TYPE\n    #endif\n    #ifndef RIGHT_RING2_CHORD_HOLDING_TYPE\n    #define RIGHT_RING2_CHORD_HOLDING_TYPE RING2_CHORD_HOLDING_TYPE\n    #endif\n    #ifndef RING2_HOLDING_TIME\n    #define RING2_HOLDING_TIME HOMEY_HOLDING_TIME\n    #endif\n    #ifndef RING2_CHORD_HOLDING_TIME\n    #define RING2_CHORD_HOLDING_TIME CHORD_HOLDING_TIME\n    #endif\n    #ifndef LEFT_RING2_CHORD_HOLDING_TIME\n    #define LEFT_RING2_CHORD_HOLDING_TIME RING2_CHORD_HOLDING_TIME\n    #endif\n    #ifndef RIGHT_RING2_CHORD_HOLDING_TIME\n    #define RIGHT_RING2_CHORD_HOLDING_TIME RING2_CHORD_HOLDING_TIME\n    #endif\n    #ifndef RING2_STREAK_DECAY\n    #define RING2_STREAK_DECAY HOMEY_STREAK_DECAY\n    #endif\n    #ifndef RING2_CHORD_STREAK_DECAY\n    #define RING2_CHORD_STREAK_DECAY CHORD_STREAK_DECAY\n    #endif\n    #ifndef LEFT_RING2_CHORD_STREAK_DECAY\n    #define LEFT_RING2_CHORD_STREAK_DECAY RING2_CHORD_STREAK_DECAY\n    #endif\n    #ifndef RIGHT_RING2_CHORD_STREAK_DECAY\n    #define RIGHT_RING2_CHORD_STREAK_DECAY RING2_CHORD_STREAK_DECAY\n    #endif\n    #ifndef RING2_REPEAT_DECAY\n    #define RING2_REPEAT_DECAY HOMEY_REPEAT_DECAY\n    #endif\n    #ifndef RING2_CHORD_REPEAT_DECAY\n    #define RING2_CHORD_REPEAT_DECAY CHORD_REPEAT_DECAY\n    #endif\n    #ifndef LEFT_RING2_CHORD_REPEAT_DECAY\n    #define LEFT_RING2_CHORD_REPEAT_DECAY RING2_CHORD_REPEAT_DECAY\n    #endif\n    #ifndef RIGHT_RING2_CHORD_REPEAT_DECAY\n    #define RIGHT_RING2_CHORD_REPEAT_DECAY RING2_CHORD_REPEAT_DECAY\n    #endif\n    #ifndef MIDDY_HOLDING_TYPE\n    #define MIDDY_HOLDING_TYPE HOMEY_HOLDING_TYPE\n    #endif\n    #ifndef MIDDY_CHORD_HOLDING_TYPE\n    #define MIDDY_CHORD_HOLDING_TYPE CHORD_HOLDING_TYPE\n    #endif\n    #ifndef LEFT_MIDDY_CHORD_HOLDING_TYPE\n    #define LEFT_MIDDY_CHORD_HOLDING_TYPE MIDDY_CHORD_HOLDING_TYPE\n    #endif\n    #ifndef RIGHT_MIDDY_CHORD_HOLDING_TYPE\n    #define RIGHT_MIDDY_CHORD_HOLDING_TYPE MIDDY_CHORD_HOLDING_TYPE\n    #endif\n    #ifndef MIDDY_HOLDING_TIME\n    #define MIDDY_HOLDING_TIME HOMEY_HOLDING_TIME\n    #endif\n    #ifndef MIDDY_CHORD_HOLDING_TIME\n    #define MIDDY_CHORD_HOLDING_TIME CHORD_HOLDING_TIME\n    #endif\n    #ifndef LEFT_MIDDY_CHORD_HOLDING_TIME\n    #define LEFT_MIDDY_CHORD_HOLDING_TIME MIDDY_CHORD_HOLDING_TIME\n    #endif\n    #ifndef RIGHT_MIDDY_CHORD_HOLDING_TIME\n    #define RIGHT_MIDDY_CHORD_HOLDING_TIME MIDDY_CHORD_HOLDING_TIME\n    #endif\n    #ifndef MIDDY_STREAK_DECAY\n    #define MIDDY_STREAK_DECAY HOMEY_STREAK_DECAY\n    #endif\n    #ifndef MIDDY_CHORD_STREAK_DECAY\n    #define MIDDY_CHORD_STREAK_DECAY CHORD_STREAK_DECAY\n    #endif\n    #ifndef LEFT_MIDDY_CHORD_STREAK_DECAY\n    #define LEFT_MIDDY_CHORD_STREAK_DECAY MIDDY_CHORD_STREAK_DECAY\n    #endif\n    #ifndef RIGHT_MIDDY_CHORD_STREAK_DECAY\n    #define RIGHT_MIDDY_CHORD_STREAK_DECAY MIDDY_CHORD_STREAK_DECAY\n    #endif\n    #ifndef MIDDY_REPEAT_DECAY\n    #define MIDDY_REPEAT_DECAY HOMEY_REPEAT_DECAY\n    #endif\n    #ifndef MIDDY_CHORD_REPEAT_DECAY\n    #define MIDDY_CHORD_REPEAT_DECAY CHORD_REPEAT_DECAY\n    #endif\n    #ifndef LEFT_MIDDY_CHORD_REPEAT_DECAY\n    #define LEFT_MIDDY_CHORD_REPEAT_DECAY MIDDY_CHORD_REPEAT_DECAY\n    #endif\n    #ifndef RIGHT_MIDDY_CHORD_REPEAT_DECAY\n    #define RIGHT_MIDDY_CHORD_REPEAT_DECAY MIDDY_CHORD_REPEAT_DECAY\n    #endif\n    #ifndef INDEX_HOLDING_TYPE\n    #define INDEX_HOLDING_TYPE HOMEY_HOLDING_TYPE\n    #endif\n    #ifndef INDEX_CHORD_HOLDING_TYPE\n    #define INDEX_CHORD_HOLDING_TYPE CHORD_HOLDING_TYPE\n    #endif\n    #ifndef LEFT_INDEX_CHORD_HOLDING_TYPE\n    #define LEFT_INDEX_CHORD_HOLDING_TYPE INDEX_CHORD_HOLDING_TYPE\n    #endif\n    #ifndef RIGHT_INDEX_CHORD_HOLDING_TYPE\n    #define RIGHT_INDEX_CHORD_HOLDING_TYPE INDEX_CHORD_HOLDING_TYPE\n    #endif\n    #ifndef INDEX_HOLDING_TIME\n    #define INDEX_HOLDING_TIME HOMEY_HOLDING_TIME\n    #endif\n    #ifndef INDEX_CHORD_HOLDING_TIME\n    #define INDEX_CHORD_HOLDING_TIME CHORD_HOLDING_TIME\n    #endif\n    #ifndef LEFT_INDEX_CHORD_HOLDING_TIME\n    #define LEFT_INDEX_CHORD_HOLDING_TIME INDEX_CHORD_HOLDING_TIME\n    #endif\n    #ifndef RIGHT_INDEX_CHORD_HOLDING_TIME\n    #define RIGHT_INDEX_CHORD_HOLDING_TIME INDEX_CHORD_HOLDING_TIME\n    #endif\n    #ifndef INDEX_STREAK_DECAY\n    #define INDEX_STREAK_DECAY HOMEY_STREAK_DECAY\n    #endif\n    #ifndef INDEX_CHORD_STREAK_DECAY\n    #define INDEX_CHORD_STREAK_DECAY CHORD_STREAK_DECAY\n    #endif\n    #ifndef LEFT_INDEX_CHORD_STREAK_DECAY\n    #define LEFT_INDEX_CHORD_STREAK_DECAY INDEX_CHORD_STREAK_DECAY\n    #endif\n    #ifndef RIGHT_INDEX_CHORD_STREAK_DECAY\n    #define RIGHT_INDEX_CHORD_STREAK_DECAY INDEX_CHORD_STREAK_DECAY\n    #endif\n    #ifndef INDEX_REPEAT_DECAY\n    #define INDEX_REPEAT_DECAY HOMEY_REPEAT_DECAY\n    #endif\n    #ifndef INDEX_CHORD_REPEAT_DECAY\n    #define INDEX_CHORD_REPEAT_DECAY CHORD_REPEAT_DECAY\n    #endif\n    #ifndef LEFT_INDEX_CHORD_REPEAT_DECAY\n    #define LEFT_INDEX_CHORD_REPEAT_DECAY INDEX_CHORD_REPEAT_DECAY\n    #endif\n    #ifndef RIGHT_INDEX_CHORD_REPEAT_DECAY\n    #define RIGHT_INDEX_CHORD_REPEAT_DECAY INDEX_CHORD_REPEAT_DECAY\n    #endif\n    #ifndef LEFT_PINKY_HOLDING_TYPE\n    #define LEFT_PINKY_HOLDING_TYPE INDEX_HOLDING_TYPE\n    #endif\n    #ifndef LEFT_PINKY_HOLDING_TIME\n    #define LEFT_PINKY_HOLDING_TIME INDEX_HOLDING_TIME\n    #endif\n    #ifndef LEFT_PINKY_STREAK_DECAY\n    #define LEFT_PINKY_STREAK_DECAY INDEX_STREAK_DECAY\n    #endif\n    #ifndef LEFT_PINKY_REPEAT_DECAY\n    #define LEFT_PINKY_REPEAT_DECAY INDEX_REPEAT_DECAY\n    #endif\n    left_pinky: homey_left_pinky {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = LEFT_PINKY_HOLDING_TYPE;\n        hold-trigger-key-positions = <RIGHT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <LEFT_PINKY_HOLDING_TIME>;\n        #ifdef ENABLE_KEY_REPEAT\n        quick-tap-ms = <LEFT_PINKY_REPEAT_DECAY>;\n        #endif\n        require-prior-idle-ms = <LEFT_PINKY_STREAK_DECAY>;\n        #binding-cells = <2>;\n        #ifdef ENFORCE_BILATERAL\n        bindings = <&left_pinky_hold>, <&kp>;\n        #else\n        bindings = <&kp>, <&kp>;\n        #endif\n    };\n    left_pinky_hold: homey_left_pinky_hold {\n        compatible = \"zmk,behavior-macro-one-param\";\n        wait-ms = <0>;\n        tap-ms = <0>;\n        #binding-cells = <1>;\n        bindings\n            = <&macro_param_1to1>\n            , <&macro_press &kp MACRO_PLACEHOLDER\n                            &mo LAYER_LeftPinky>\n            , <&macro_pause_for_release>\n            , <&macro_param_1to1>\n            , <&macro_release &kp MACRO_PLACEHOLDER\n                              &mo LAYER_LeftPinky>\n            ;\n    };\n    left_pinky_tap: homey_left_pinky_tap {\n        compatible = \"zmk,behavior-macro-one-param\";\n        wait-ms = <0>;\n        tap-ms = <0>;\n        #binding-cells = <1>;\n        bindings\n            = <&macro_release\n                &kp LSFT &kp RSFT\n                &kp LALT &kp RALT\n                &kp LCTL &kp RCTL\n                &kp LGUI &kp LGUI>\n            , <&macro_tap &kp LEFT_PINKY_KEY>\n            , <&macro_param_1to1>\n            , <&macro_tap &kp MACRO_PLACEHOLDER>\n            ;\n    };\n    #define LeftPinky(key) left_pinky LEFT_PINKY_MOD key\n    #ifndef RIGHT_PINKY_HOLDING_TYPE\n    #define RIGHT_PINKY_HOLDING_TYPE PINKY_HOLDING_TYPE\n    #endif\n    #ifndef RIGHT_PINKY_HOLDING_TIME\n    #define RIGHT_PINKY_HOLDING_TIME PINKY_HOLDING_TIME\n    #endif\n    #ifndef RIGHT_PINKY_STREAK_DECAY\n    #define RIGHT_PINKY_STREAK_DECAY PINKY_STREAK_DECAY\n    #endif\n    #ifndef RIGHT_PINKY_REPEAT_DECAY\n    #define RIGHT_PINKY_REPEAT_DECAY PINKY_REPEAT_DECAY\n    #endif\n    right_pinky: homey_right_pinky {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = RIGHT_PINKY_HOLDING_TYPE;\n        hold-trigger-key-positions = <LEFT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <RIGHT_PINKY_HOLDING_TIME>;\n        #ifdef ENABLE_KEY_REPEAT\n        quick-tap-ms = <RIGHT_PINKY_REPEAT_DECAY>;\n        #endif\n        require-prior-idle-ms = <RIGHT_PINKY_STREAK_DECAY>;\n        #binding-cells = <2>;\n        #ifdef ENFORCE_BILATERAL\n        bindings = <&right_pinky_hold>, <&kp>;\n        #else\n        bindings = <&kp>, <&kp>;\n        #endif\n    };\n    right_pinky_hold: homey_right_pinky_hold {\n        compatible = \"zmk,behavior-macro-one-param\";\n        wait-ms = <0>;\n        tap-ms = <0>;\n        #binding-cells = <1>;\n        bindings\n            = <&macro_param_1to1>\n            , <&macro_press &kp MACRO_PLACEHOLDER\n                            &mo LAYER_RightPinky>\n            , <&macro_pause_for_release>\n            , <&macro_param_1to1>\n            , <&macro_release &kp MACRO_PLACEHOLDER\n                              &mo LAYER_RightPinky>\n            ;\n    };\n    right_pinky_tap: homey_right_pinky_tap {\n        compatible = \"zmk,behavior-macro-one-param\";\n        wait-ms = <0>;\n        tap-ms = <0>;\n        #binding-cells = <1>;\n        bindings\n            = <&macro_release\n                &kp LSFT &kp RSFT\n                &kp LALT &kp RALT\n                &kp LCTL &kp RCTL\n                &kp LGUI &kp LGUI>\n            , <&macro_tap &kp RIGHT_PINKY_KEY>\n            , <&macro_param_1to1>\n            , <&macro_tap &kp MACRO_PLACEHOLDER>\n            ;\n    };\n    #define RightPinky(key) right_pinky RIGHT_PINKY_MOD key\n    #ifndef LEFT_RING1_HOLDING_TYPE\n    #define LEFT_RING1_HOLDING_TYPE RING1_HOLDING_TYPE\n    #endif\n    #ifndef LEFT_RING1_HOLDING_TIME\n    #define LEFT_RING1_HOLDING_TIME RING1_HOLDING_TIME\n    #endif\n    #ifndef LEFT_RING1_STREAK_DECAY\n    #define LEFT_RING1_STREAK_DECAY RING1_STREAK_DECAY\n    #endif\n    #ifndef LEFT_RING1_REPEAT_DECAY\n    #define LEFT_RING1_REPEAT_DECAY RING1_REPEAT_DECAY\n    #endif\n    left_ring1: homey_left_ring1 {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = LEFT_RING1_HOLDING_TYPE;\n        hold-trigger-key-positions = <RIGHT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <LEFT_RING1_HOLDING_TIME>;\n        #ifdef ENABLE_KEY_REPEAT\n        quick-tap-ms = <LEFT_RING1_REPEAT_DECAY>;\n        #endif\n        require-prior-idle-ms = <LEFT_RING1_STREAK_DECAY>;\n        #binding-cells = <2>;\n        #ifdef ENFORCE_BILATERAL\n        bindings = <&left_ring1_hold>, <&kp>;\n        #else\n        bindings = <&kp>, <&kp>;\n        #endif\n    };\n    left_ring1_hold: homey_left_ring1_hold {\n        compatible = \"zmk,behavior-macro-one-param\";\n        wait-ms = <0>;\n        tap-ms = <0>;\n        #binding-cells = <1>;\n        bindings\n            = <&macro_param_1to1>\n            , <&macro_press &kp MACRO_PLACEHOLDER\n                            &mo LAYER_LeftRing1>\n            , <&macro_pause_for_release>\n            , <&macro_param_1to1>\n            , <&macro_release &kp MACRO_PLACEHOLDER\n                              &mo LAYER_LeftRing1>\n            ;\n    };\n    left_ring1_tap: homey_left_ring1_tap {\n        compatible = \"zmk,behavior-macro-one-param\";\n        wait-ms = <0>;\n        tap-ms = <0>;\n        #binding-cells = <1>;\n        bindings\n            = <&macro_release\n                &kp LSFT &kp RSFT\n                &kp LALT &kp RALT\n                &kp LCTL &kp RCTL\n                &kp LGUI &kp LGUI>\n            , <&macro_tap &kp LEFT_RING1_KEY>\n            , <&macro_param_1to1>\n            , <&macro_tap &kp MACRO_PLACEHOLDER>\n            ;\n    };\n    #define LeftRing1(key) left_ring1 LEFT_RING1_MOD key\n    #ifndef RIGHT_RING1_HOLDING_TYPE\n    #define RIGHT_RING1_HOLDING_TYPE RING1_HOLDING_TYPE\n    #endif\n    #ifndef RIGHT_RING1_HOLDING_TIME\n    #define RIGHT_RING1_HOLDING_TIME RING1_HOLDING_TIME\n    #endif\n    #ifndef RIGHT_RING1_STREAK_DECAY\n    #define RIGHT_RING1_STREAK_DECAY RING1_STREAK_DECAY\n    #endif\n    #ifndef RIGHT_RING1_REPEAT_DECAY\n    #define RIGHT_RING1_REPEAT_DECAY RING1_REPEAT_DECAY\n    #endif\n    right_ring1: homey_right_ring1 {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = RIGHT_RING1_HOLDING_TYPE;\n        hold-trigger-key-positions = <LEFT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <RIGHT_RING1_HOLDING_TIME>;\n        #ifdef ENABLE_KEY_REPEAT\n        quick-tap-ms = <RIGHT_RING1_REPEAT_DECAY>;\n        #endif\n        require-prior-idle-ms = <RIGHT_RING1_STREAK_DECAY>;\n        #binding-cells = <2>;\n        #ifdef ENFORCE_BILATERAL\n        bindings = <&right_ring1_hold>, <&kp>;\n        #else\n        bindings = <&kp>, <&kp>;\n        #endif\n    };\n    right_ring1_hold: homey_right_ring1_hold {\n        compatible = \"zmk,behavior-macro-one-param\";\n        wait-ms = <0>;\n        tap-ms = <0>;\n        #binding-cells = <1>;\n        bindings\n            = <&macro_param_1to1>\n            , <&macro_press &kp MACRO_PLACEHOLDER\n                            &mo LAYER_RightRing1>\n            , <&macro_pause_for_release>\n            , <&macro_param_1to1>\n            , <&macro_release &kp MACRO_PLACEHOLDER\n                              &mo LAYER_RightRing1>\n            ;\n    };\n    right_ring1_tap: homey_right_ring1_tap {\n        compatible = \"zmk,behavior-macro-one-param\";\n        wait-ms = <0>;\n        tap-ms = <0>;\n        #binding-cells = <1>;\n        bindings\n            = <&macro_release\n                &kp LSFT &kp RSFT\n                &kp LALT &kp RALT\n                &kp LCTL &kp RCTL\n                &kp LGUI &kp LGUI>\n            , <&macro_tap &kp RIGHT_RING1_KEY>\n            , <&macro_param_1to1>\n            , <&macro_tap &kp MACRO_PLACEHOLDER>\n            ;\n    };\n    #define RightRing1(key) right_ring1 RIGHT_RING1_MOD key\n    #ifndef LEFT_RING2_HOLDING_TYPE\n    #define LEFT_RING2_HOLDING_TYPE RING2_HOLDING_TYPE\n    #endif\n    #ifndef LEFT_RING2_HOLDING_TIME\n    #define LEFT_RING2_HOLDING_TIME RING2_HOLDING_TIME\n    #endif\n    #ifndef LEFT_RING2_STREAK_DECAY\n    #define LEFT_RING2_STREAK_DECAY RING2_STREAK_DECAY\n    #endif\n    #ifndef LEFT_RING2_REPEAT_DECAY\n    #define LEFT_RING2_REPEAT_DECAY RING2_REPEAT_DECAY\n    #endif\n    left_ring2: homey_left_ring2 {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = LEFT_RING2_HOLDING_TYPE;\n        hold-trigger-key-positions = <RIGHT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <LEFT_RING2_HOLDING_TIME>;\n        #ifdef ENABLE_KEY_REPEAT\n        quick-tap-ms = <LEFT_RING2_REPEAT_DECAY>;\n        #endif\n        require-prior-idle-ms = <LEFT_RING2_STREAK_DECAY>;\n        #binding-cells = <2>;\n        #ifdef ENFORCE_BILATERAL\n        bindings = <&left_ring2_hold>, <&kp>;\n        #else\n        bindings = <&kp>, <&kp>;\n        #endif\n    };\n    left_ring2_hold: homey_left_ring2_hold {\n        compatible = \"zmk,behavior-macro-one-param\";\n        wait-ms = <0>;\n        tap-ms = <0>;\n        #binding-cells = <1>;\n        bindings\n            = <&macro_param_1to1>\n            , <&macro_press &kp MACRO_PLACEHOLDER\n                            &mo LAYER_LeftRing2>\n            , <&macro_pause_for_release>\n            , <&macro_param_1to1>\n            , <&macro_release &kp MACRO_PLACEHOLDER\n                              &mo LAYER_LeftRing2>\n            ;\n    };\n    left_ring2_tap: homey_left_ring2_tap {\n        compatible = \"zmk,behavior-macro-one-param\";\n        wait-ms = <0>;\n        tap-ms = <0>;\n        #binding-cells = <1>;\n        bindings\n            = <&macro_release\n                &kp LSFT &kp RSFT\n                &kp LALT &kp RALT\n                &kp LCTL &kp RCTL\n                &kp LGUI &kp LGUI>\n            , <&macro_tap &kp LEFT_RING2_KEY>\n            , <&macro_param_1to1>\n            , <&macro_tap &kp MACRO_PLACEHOLDER>\n            ;\n    };\n    #define LeftRing2(key) left_ring2 LEFT_RING2_MOD key\n    #ifndef RIGHT_RING2_HOLDING_TYPE\n    #define RIGHT_RING2_HOLDING_TYPE RING2_HOLDING_TYPE\n    #endif\n    #ifndef RIGHT_RING2_HOLDING_TIME\n    #define RIGHT_RING2_HOLDING_TIME RING2_HOLDING_TIME\n    #endif\n    #ifndef RIGHT_RING2_STREAK_DECAY\n    #define RIGHT_RING2_STREAK_DECAY RING2_STREAK_DECAY\n    #endif\n    #ifndef RIGHT_RING2_REPEAT_DECAY\n    #define RIGHT_RING2_REPEAT_DECAY RING2_REPEAT_DECAY\n    #endif\n    right_ring2: homey_right_ring2 {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = RIGHT_RING2_HOLDING_TYPE;\n        hold-trigger-key-positions = <LEFT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <RIGHT_RING2_HOLDING_TIME>;\n        #ifdef ENABLE_KEY_REPEAT\n        quick-tap-ms = <RIGHT_RING2_REPEAT_DECAY>;\n        #endif\n        require-prior-idle-ms = <RIGHT_RING2_STREAK_DECAY>;\n        #binding-cells = <2>;\n        #ifdef ENFORCE_BILATERAL\n        bindings = <&right_ring2_hold>, <&kp>;\n        #else\n        bindings = <&kp>, <&kp>;\n        #endif\n    };\n    right_ring2_hold: homey_right_ring2_hold {\n        compatible = \"zmk,behavior-macro-one-param\";\n        wait-ms = <0>;\n        tap-ms = <0>;\n        #binding-cells = <1>;\n        bindings\n            = <&macro_param_1to1>\n            , <&macro_press &kp MACRO_PLACEHOLDER\n                            &mo LAYER_RightRing2>\n            , <&macro_pause_for_release>\n            , <&macro_param_1to1>\n            , <&macro_release &kp MACRO_PLACEHOLDER\n                              &mo LAYER_RightRing2>\n            ;\n    };\n    right_ring2_tap: homey_right_ring2_tap {\n        compatible = \"zmk,behavior-macro-one-param\";\n        wait-ms = <0>;\n        tap-ms = <0>;\n        #binding-cells = <1>;\n        bindings\n            = <&macro_release\n                &kp LSFT &kp RSFT\n                &kp LALT &kp RALT\n                &kp LCTL &kp RCTL\n                &kp LGUI &kp LGUI>\n            , <&macro_tap &kp RIGHT_RING2_KEY>\n            , <&macro_param_1to1>\n            , <&macro_tap &kp MACRO_PLACEHOLDER>\n            ;\n    };\n    #define RightRing2(key) right_ring2 RIGHT_RING2_MOD key\n    #ifndef LEFT_MIDDY_HOLDING_TYPE\n    #define LEFT_MIDDY_HOLDING_TYPE MIDDY_HOLDING_TYPE\n    #endif\n    #ifndef LEFT_MIDDY_HOLDING_TIME\n    #define LEFT_MIDDY_HOLDING_TIME MIDDY_HOLDING_TIME\n    #endif\n    #ifndef LEFT_MIDDY_STREAK_DECAY\n    #define LEFT_MIDDY_STREAK_DECAY MIDDY_STREAK_DECAY\n    #endif\n    #ifndef LEFT_MIDDY_REPEAT_DECAY\n    #define LEFT_MIDDY_REPEAT_DECAY MIDDY_REPEAT_DECAY\n    #endif\n    left_middy: homey_left_middy {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = LEFT_MIDDY_HOLDING_TYPE;\n        hold-trigger-key-positions = <RIGHT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <LEFT_MIDDY_HOLDING_TIME>;\n        #ifdef ENABLE_KEY_REPEAT\n        quick-tap-ms = <LEFT_MIDDY_REPEAT_DECAY>;\n        #endif\n        require-prior-idle-ms = <LEFT_MIDDY_STREAK_DECAY>;\n        #binding-cells = <2>;\n        #ifdef ENFORCE_BILATERAL\n        bindings = <&left_middy_hold>, <&kp>;\n        #else\n        bindings = <&kp>, <&kp>;\n        #endif\n    };\n    left_middy_hold: homey_left_middy_hold {\n        compatible = \"zmk,behavior-macro-one-param\";\n        wait-ms = <0>;\n        tap-ms = <0>;\n        #binding-cells = <1>;\n        bindings\n            = <&macro_param_1to1>\n            , <&macro_press &kp MACRO_PLACEHOLDER\n                            &mo LAYER_LeftMiddy>\n            , <&macro_pause_for_release>\n            , <&macro_param_1to1>\n            , <&macro_release &kp MACRO_PLACEHOLDER\n                              &mo LAYER_LeftMiddy>\n            ;\n    };\n    left_middy_tap: homey_left_middy_tap {\n        compatible = \"zmk,behavior-macro-one-param\";\n        wait-ms = <0>;\n        tap-ms = <0>;\n        #binding-cells = <1>;\n        bindings\n            = <&macro_release\n                &kp LSFT &kp RSFT\n                &kp LALT &kp RALT\n                &kp LCTL &kp RCTL\n                &kp LGUI &kp LGUI>\n            , <&macro_tap &kp LEFT_MIDDY_KEY>\n            , <&macro_param_1to1>\n            , <&macro_tap &kp MACRO_PLACEHOLDER>\n            ;\n    };\n    #define LeftMiddy(key) left_middy LEFT_MIDDY_MOD key\n    #ifndef RIGHT_MIDDY_HOLDING_TYPE\n    #define RIGHT_MIDDY_HOLDING_TYPE MIDDY_HOLDING_TYPE\n    #endif\n    #ifndef RIGHT_MIDDY_HOLDING_TIME\n    #define RIGHT_MIDDY_HOLDING_TIME MIDDY_HOLDING_TIME\n    #endif\n    #ifndef RIGHT_MIDDY_STREAK_DECAY\n    #define RIGHT_MIDDY_STREAK_DECAY MIDDY_STREAK_DECAY\n    #endif\n    #ifndef RIGHT_MIDDY_REPEAT_DECAY\n    #define RIGHT_MIDDY_REPEAT_DECAY MIDDY_REPEAT_DECAY\n    #endif\n    right_middy: homey_right_middy {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = RIGHT_MIDDY_HOLDING_TYPE;\n        hold-trigger-key-positions = <LEFT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <RIGHT_MIDDY_HOLDING_TIME>;\n        #ifdef ENABLE_KEY_REPEAT\n        quick-tap-ms = <RIGHT_MIDDY_REPEAT_DECAY>;\n        #endif\n        require-prior-idle-ms = <RIGHT_MIDDY_STREAK_DECAY>;\n        #binding-cells = <2>;\n        #ifdef ENFORCE_BILATERAL\n        bindings = <&right_middy_hold>, <&kp>;\n        #else\n        bindings = <&kp>, <&kp>;\n        #endif\n    };\n    right_middy_hold: homey_right_middy_hold {\n        compatible = \"zmk,behavior-macro-one-param\";\n        wait-ms = <0>;\n        tap-ms = <0>;\n        #binding-cells = <1>;\n        bindings\n            = <&macro_param_1to1>\n            , <&macro_press &kp MACRO_PLACEHOLDER\n                            &mo LAYER_RightMiddy>\n            , <&macro_pause_for_release>\n            , <&macro_param_1to1>\n            , <&macro_release &kp MACRO_PLACEHOLDER\n                              &mo LAYER_RightMiddy>\n            ;\n    };\n    right_middy_tap: homey_right_middy_tap {\n        compatible = \"zmk,behavior-macro-one-param\";\n        wait-ms = <0>;\n        tap-ms = <0>;\n        #binding-cells = <1>;\n        bindings\n            = <&macro_release\n                &kp LSFT &kp RSFT\n                &kp LALT &kp RALT\n                &kp LCTL &kp RCTL\n                &kp LGUI &kp LGUI>\n            , <&macro_tap &kp RIGHT_MIDDY_KEY>\n            , <&macro_param_1to1>\n            , <&macro_tap &kp MACRO_PLACEHOLDER>\n            ;\n    };\n    #define RightMiddy(key) right_middy RIGHT_MIDDY_MOD key\n    #ifndef LEFT_INDEX_HOLDING_TYPE\n    #define LEFT_INDEX_HOLDING_TYPE INDEX_HOLDING_TYPE\n    #endif\n    #ifndef LEFT_INDEX_HOLDING_TIME\n    #define LEFT_INDEX_HOLDING_TIME INDEX_HOLDING_TIME\n    #endif\n    #ifndef LEFT_INDEX_STREAK_DECAY\n    #define LEFT_INDEX_STREAK_DECAY INDEX_STREAK_DECAY\n    #endif\n    #ifndef LEFT_INDEX_REPEAT_DECAY\n    #define LEFT_INDEX_REPEAT_DECAY INDEX_REPEAT_DECAY\n    #endif\n    left_index: homey_left_index {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = LEFT_INDEX_HOLDING_TYPE;\n        hold-trigger-key-positions = <RIGHT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <LEFT_INDEX_HOLDING_TIME>;\n        #ifdef ENABLE_KEY_REPEAT\n        quick-tap-ms = <LEFT_INDEX_REPEAT_DECAY>;\n        #endif\n        require-prior-idle-ms = <LEFT_INDEX_STREAK_DECAY>;\n        #binding-cells = <2>;\n        #ifdef ENFORCE_BILATERAL\n        bindings = <&left_index_hold>, <&kp>;\n        #else\n        bindings = <&kp>, <&kp>;\n        #endif\n    };\n    left_index_hold: homey_left_index_hold {\n        compatible = \"zmk,behavior-macro-one-param\";\n        wait-ms = <0>;\n        tap-ms = <0>;\n        #binding-cells = <1>;\n        bindings\n            = <&macro_param_1to1>\n            , <&macro_press &kp MACRO_PLACEHOLDER\n                            &mo LAYER_LeftIndex>\n            , <&macro_pause_for_release>\n            , <&macro_param_1to1>\n            , <&macro_release &kp MACRO_PLACEHOLDER\n                              &mo LAYER_LeftIndex>\n            ;\n    };\n    left_index_tap: homey_left_index_tap {\n        compatible = \"zmk,behavior-macro-one-param\";\n        wait-ms = <0>;\n        tap-ms = <0>;\n        #binding-cells = <1>;\n        bindings\n            = <&macro_release\n                &kp LSFT &kp RSFT\n                &kp LALT &kp RALT\n                &kp LCTL &kp RCTL\n                &kp LGUI &kp LGUI>\n            , <&macro_tap &kp LEFT_INDEX_KEY>\n            , <&macro_param_1to1>\n            , <&macro_tap &kp MACRO_PLACEHOLDER>\n            ;\n    };\n    #define LeftIndex(key) left_index LEFT_INDEX_MOD key\n    #ifndef RIGHT_INDEX_HOLDING_TYPE\n    #define RIGHT_INDEX_HOLDING_TYPE INDEX_HOLDING_TYPE\n    #endif\n    #ifndef RIGHT_INDEX_HOLDING_TIME\n    #define RIGHT_INDEX_HOLDING_TIME INDEX_HOLDING_TIME\n    #endif\n    #ifndef RIGHT_INDEX_STREAK_DECAY\n    #define RIGHT_INDEX_STREAK_DECAY INDEX_STREAK_DECAY\n    #endif\n    #ifndef RIGHT_INDEX_REPEAT_DECAY\n    #define RIGHT_INDEX_REPEAT_DECAY INDEX_REPEAT_DECAY\n    #endif\n    right_index: homey_right_index {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = RIGHT_INDEX_HOLDING_TYPE;\n        hold-trigger-key-positions = <LEFT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <RIGHT_INDEX_HOLDING_TIME>;\n        #ifdef ENABLE_KEY_REPEAT\n        quick-tap-ms = <RIGHT_INDEX_REPEAT_DECAY>;\n        #endif\n        require-prior-idle-ms = <RIGHT_INDEX_STREAK_DECAY>;\n        #binding-cells = <2>;\n        #ifdef ENFORCE_BILATERAL\n        bindings = <&right_index_hold>, <&kp>;\n        #else\n        bindings = <&kp>, <&kp>;\n        #endif\n    };\n    right_index_hold: homey_right_index_hold {\n        compatible = \"zmk,behavior-macro-one-param\";\n        wait-ms = <0>;\n        tap-ms = <0>;\n        #binding-cells = <1>;\n        bindings\n            = <&macro_param_1to1>\n            , <&macro_press &kp MACRO_PLACEHOLDER\n                            &mo LAYER_RightIndex>\n            , <&macro_pause_for_release>\n            , <&macro_param_1to1>\n            , <&macro_release &kp MACRO_PLACEHOLDER\n                              &mo LAYER_RightIndex>\n            ;\n    };\n    right_index_tap: homey_right_index_tap {\n        compatible = \"zmk,behavior-macro-one-param\";\n        wait-ms = <0>;\n        tap-ms = <0>;\n        #binding-cells = <1>;\n        bindings\n            = <&macro_release\n                &kp LSFT &kp RSFT\n                &kp LALT &kp RALT\n                &kp LCTL &kp RCTL\n                &kp LGUI &kp LGUI>\n            , <&macro_tap &kp RIGHT_INDEX_KEY>\n            , <&macro_param_1to1>\n            , <&macro_tap &kp MACRO_PLACEHOLDER>\n            ;\n    };\n    #define RightIndex(key) right_index RIGHT_INDEX_MOD key\n    #ifndef LEFT_RING1_PINKY_HOLDING_TYPE\n    #define LEFT_RING1_PINKY_HOLDING_TYPE LEFT_RING1_CHORD_HOLDING_TYPE\n    #endif\n    #ifndef LEFT_RING1_PINKY_HOLDING_TIME\n    #define LEFT_RING1_PINKY_HOLDING_TIME LEFT_RING1_CHORD_HOLDING_TIME\n    #endif\n    #ifndef LEFT_RING1_PINKY_STREAK_DECAY\n    #define LEFT_RING1_PINKY_STREAK_DECAY LEFT_RING1_CHORD_STREAK_DECAY\n    #endif\n    #ifndef LEFT_RING1_PINKY_REPEAT_DECAY\n    #define LEFT_RING1_PINKY_REPEAT_DECAY LEFT_RING1_CHORD_REPEAT_DECAY\n    #endif\n    left_ring1_pinky: homey_left_ring1_pinky {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = LEFT_RING1_HOLDING_TYPE;\n        hold-trigger-key-positions = <RIGHT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <LEFT_RING1_HOLDING_TIME>;\n        #ifdef ENABLE_KEY_REPEAT\n        quick-tap-ms = <LEFT_RING1_REPEAT_DECAY>;\n        #endif\n        require-prior-idle-ms = <LEFT_RING1_STREAK_DECAY>;\n        #binding-cells = <2>;\n        #ifdef ENFORCE_BILATERAL\n        bindings = <&kp>, <&left_ring1_tap>;\n        #else\n        bindings = <&kp>, <&kp>;\n        #endif\n    };\n    #define LeftRing1Pinky left_ring1_pinky LEFT_PINKY_MOD LEFT_PINKY_KEY\n    #ifndef LEFT_RING2_PINKY_HOLDING_TYPE\n    #define LEFT_RING2_PINKY_HOLDING_TYPE LEFT_RING2_CHORD_HOLDING_TYPE\n    #endif\n    #ifndef LEFT_RING2_PINKY_HOLDING_TIME\n    #define LEFT_RING2_PINKY_HOLDING_TIME LEFT_RING2_CHORD_HOLDING_TIME\n    #endif\n    #ifndef LEFT_RING2_PINKY_STREAK_DECAY\n    #define LEFT_RING2_PINKY_STREAK_DECAY LEFT_RING2_CHORD_STREAK_DECAY\n    #endif\n    #ifndef LEFT_RING2_PINKY_REPEAT_DECAY\n    #define LEFT_RING2_PINKY_REPEAT_DECAY LEFT_RING2_CHORD_REPEAT_DECAY\n    #endif\n    left_ring2_pinky: homey_left_ring2_pinky {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = LEFT_RING2_HOLDING_TYPE;\n        hold-trigger-key-positions = <RIGHT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <LEFT_RING2_HOLDING_TIME>;\n        #ifdef ENABLE_KEY_REPEAT\n        quick-tap-ms = <LEFT_RING2_REPEAT_DECAY>;\n        #endif\n        require-prior-idle-ms = <LEFT_RING2_STREAK_DECAY>;\n        #binding-cells = <2>;\n        #ifdef ENFORCE_BILATERAL\n        bindings = <&kp>, <&left_ring2_tap>;\n        #else\n        bindings = <&kp>, <&kp>;\n        #endif\n    };\n    #define LeftRing2Pinky left_ring2_pinky LEFT_PINKY_MOD LEFT_PINKY_KEY\n    #ifndef LEFT_MIDDY_PINKY_HOLDING_TYPE\n    #define LEFT_MIDDY_PINKY_HOLDING_TYPE LEFT_MIDDY_CHORD_HOLDING_TYPE\n    #endif\n    #ifndef LEFT_MIDDY_PINKY_HOLDING_TIME\n    #define LEFT_MIDDY_PINKY_HOLDING_TIME LEFT_MIDDY_CHORD_HOLDING_TIME\n    #endif\n    #ifndef LEFT_MIDDY_PINKY_STREAK_DECAY\n    #define LEFT_MIDDY_PINKY_STREAK_DECAY LEFT_MIDDY_CHORD_STREAK_DECAY\n    #endif\n    #ifndef LEFT_MIDDY_PINKY_REPEAT_DECAY\n    #define LEFT_MIDDY_PINKY_REPEAT_DECAY LEFT_MIDDY_CHORD_REPEAT_DECAY\n    #endif\n    left_middy_pinky: homey_left_middy_pinky {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = LEFT_MIDDY_HOLDING_TYPE;\n        hold-trigger-key-positions = <RIGHT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <LEFT_MIDDY_HOLDING_TIME>;\n        #ifdef ENABLE_KEY_REPEAT\n        quick-tap-ms = <LEFT_MIDDY_REPEAT_DECAY>;\n        #endif\n        require-prior-idle-ms = <LEFT_MIDDY_STREAK_DECAY>;\n        #binding-cells = <2>;\n        #ifdef ENFORCE_BILATERAL\n        bindings = <&kp>, <&left_middy_tap>;\n        #else\n        bindings = <&kp>, <&kp>;\n        #endif\n    };\n    #define LeftMiddyPinky left_middy_pinky LEFT_PINKY_MOD LEFT_PINKY_KEY\n    #ifndef LEFT_INDEX_PINKY_HOLDING_TYPE\n    #define LEFT_INDEX_PINKY_HOLDING_TYPE LEFT_INDEX_CHORD_HOLDING_TYPE\n    #endif\n    #ifndef LEFT_INDEX_PINKY_HOLDING_TIME\n    #define LEFT_INDEX_PINKY_HOLDING_TIME LEFT_INDEX_CHORD_HOLDING_TIME\n    #endif\n    #ifndef LEFT_INDEX_PINKY_STREAK_DECAY\n    #define LEFT_INDEX_PINKY_STREAK_DECAY LEFT_INDEX_CHORD_STREAK_DECAY\n    #endif\n    #ifndef LEFT_INDEX_PINKY_REPEAT_DECAY\n    #define LEFT_INDEX_PINKY_REPEAT_DECAY LEFT_INDEX_CHORD_REPEAT_DECAY\n    #endif\n    left_index_pinky: homey_left_index_pinky {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = LEFT_INDEX_HOLDING_TYPE;\n        hold-trigger-key-positions = <RIGHT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <LEFT_INDEX_HOLDING_TIME>;\n        #ifdef ENABLE_KEY_REPEAT\n        quick-tap-ms = <LEFT_INDEX_REPEAT_DECAY>;\n        #endif\n        require-prior-idle-ms = <LEFT_INDEX_STREAK_DECAY>;\n        #binding-cells = <2>;\n        #ifdef ENFORCE_BILATERAL\n        bindings = <&kp>, <&left_index_tap>;\n        #else\n        bindings = <&kp>, <&kp>;\n        #endif\n    };\n    #define LeftIndexPinky left_index_pinky LEFT_PINKY_MOD LEFT_PINKY_KEY\n    #ifndef RIGHT_RING1_PINKY_HOLDING_TYPE\n    #define RIGHT_RING1_PINKY_HOLDING_TYPE RIGHT_RING1_CHORD_HOLDING_TYPE\n    #endif\n    #ifndef RIGHT_RING1_PINKY_HOLDING_TIME\n    #define RIGHT_RING1_PINKY_HOLDING_TIME RIGHT_RING1_CHORD_HOLDING_TIME\n    #endif\n    #ifndef RIGHT_RING1_PINKY_STREAK_DECAY\n    #define RIGHT_RING1_PINKY_STREAK_DECAY RIGHT_RING1_CHORD_STREAK_DECAY\n    #endif\n    #ifndef RIGHT_RING1_PINKY_REPEAT_DECAY\n    #define RIGHT_RING1_PINKY_REPEAT_DECAY RIGHT_RING1_CHORD_REPEAT_DECAY\n    #endif\n    right_ring1_pinky: homey_right_ring1_pinky {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = RIGHT_RING1_HOLDING_TYPE;\n        hold-trigger-key-positions = <LEFT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <RIGHT_RING1_HOLDING_TIME>;\n        #ifdef ENABLE_KEY_REPEAT\n        quick-tap-ms = <RIGHT_RING1_REPEAT_DECAY>;\n        #endif\n        require-prior-idle-ms = <RIGHT_RING1_STREAK_DECAY>;\n        #binding-cells = <2>;\n        #ifdef ENFORCE_BILATERAL\n        bindings = <&kp>, <&right_ring1_tap>;\n        #else\n        bindings = <&kp>, <&kp>;\n        #endif\n    };\n    #define RightRing1Pinky right_ring1_pinky RIGHT_PINKY_MOD RIGHT_PINKY_KEY\n    #ifndef RIGHT_RING2_PINKY_HOLDING_TYPE\n    #define RIGHT_RING2_PINKY_HOLDING_TYPE RIGHT_RING2_CHORD_HOLDING_TYPE\n    #endif\n    #ifndef RIGHT_RING2_PINKY_HOLDING_TIME\n    #define RIGHT_RING2_PINKY_HOLDING_TIME RIGHT_RING2_CHORD_HOLDING_TIME\n    #endif\n    #ifndef RIGHT_RING2_PINKY_STREAK_DECAY\n    #define RIGHT_RING2_PINKY_STREAK_DECAY RIGHT_RING2_CHORD_STREAK_DECAY\n    #endif\n    #ifndef RIGHT_RING2_PINKY_REPEAT_DECAY\n    #define RIGHT_RING2_PINKY_REPEAT_DECAY RIGHT_RING2_CHORD_REPEAT_DECAY\n    #endif\n    right_ring2_pinky: homey_right_ring2_pinky {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = RIGHT_RING2_HOLDING_TYPE;\n        hold-trigger-key-positions = <LEFT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <RIGHT_RING2_HOLDING_TIME>;\n        #ifdef ENABLE_KEY_REPEAT\n        quick-tap-ms = <RIGHT_RING2_REPEAT_DECAY>;\n        #endif\n        require-prior-idle-ms = <RIGHT_RING2_STREAK_DECAY>;\n        #binding-cells = <2>;\n        #ifdef ENFORCE_BILATERAL\n        bindings = <&kp>, <&right_ring2_tap>;\n        #else\n        bindings = <&kp>, <&kp>;\n        #endif\n    };\n    #define RightRing2Pinky right_ring2_pinky RIGHT_PINKY_MOD RIGHT_PINKY_KEY\n    #ifndef RIGHT_MIDDY_PINKY_HOLDING_TYPE\n    #define RIGHT_MIDDY_PINKY_HOLDING_TYPE RIGHT_MIDDY_CHORD_HOLDING_TYPE\n    #endif\n    #ifndef RIGHT_MIDDY_PINKY_HOLDING_TIME\n    #define RIGHT_MIDDY_PINKY_HOLDING_TIME RIGHT_MIDDY_CHORD_HOLDING_TIME\n    #endif\n    #ifndef RIGHT_MIDDY_PINKY_STREAK_DECAY\n    #define RIGHT_MIDDY_PINKY_STREAK_DECAY RIGHT_MIDDY_CHORD_STREAK_DECAY\n    #endif\n    #ifndef RIGHT_MIDDY_PINKY_REPEAT_DECAY\n    #define RIGHT_MIDDY_PINKY_REPEAT_DECAY RIGHT_MIDDY_CHORD_REPEAT_DECAY\n    #endif\n    right_middy_pinky: homey_right_middy_pinky {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = RIGHT_MIDDY_HOLDING_TYPE;\n        hold-trigger-key-positions = <LEFT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <RIGHT_MIDDY_HOLDING_TIME>;\n        #ifdef ENABLE_KEY_REPEAT\n        quick-tap-ms = <RIGHT_MIDDY_REPEAT_DECAY>;\n        #endif\n        require-prior-idle-ms = <RIGHT_MIDDY_STREAK_DECAY>;\n        #binding-cells = <2>;\n        #ifdef ENFORCE_BILATERAL\n        bindings = <&kp>, <&right_middy_tap>;\n        #else\n        bindings = <&kp>, <&kp>;\n        #endif\n    };\n    #define RightMiddyPinky right_middy_pinky RIGHT_PINKY_MOD RIGHT_PINKY_KEY\n    #ifndef RIGHT_INDEX_PINKY_HOLDING_TYPE\n    #define RIGHT_INDEX_PINKY_HOLDING_TYPE RIGHT_INDEX_CHORD_HOLDING_TYPE\n    #endif\n    #ifndef RIGHT_INDEX_PINKY_HOLDING_TIME\n    #define RIGHT_INDEX_PINKY_HOLDING_TIME RIGHT_INDEX_CHORD_HOLDING_TIME\n    #endif\n    #ifndef RIGHT_INDEX_PINKY_STREAK_DECAY\n    #define RIGHT_INDEX_PINKY_STREAK_DECAY RIGHT_INDEX_CHORD_STREAK_DECAY\n    #endif\n    #ifndef RIGHT_INDEX_PINKY_REPEAT_DECAY\n    #define RIGHT_INDEX_PINKY_REPEAT_DECAY RIGHT_INDEX_CHORD_REPEAT_DECAY\n    #endif\n    right_index_pinky: homey_right_index_pinky {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = RIGHT_INDEX_HOLDING_TYPE;\n        hold-trigger-key-positions = <LEFT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <RIGHT_INDEX_HOLDING_TIME>;\n        #ifdef ENABLE_KEY_REPEAT\n        quick-tap-ms = <RIGHT_INDEX_REPEAT_DECAY>;\n        #endif\n        require-prior-idle-ms = <RIGHT_INDEX_STREAK_DECAY>;\n        #binding-cells = <2>;\n        #ifdef ENFORCE_BILATERAL\n        bindings = <&kp>, <&right_index_tap>;\n        #else\n        bindings = <&kp>, <&kp>;\n        #endif\n    };\n    #define RightIndexPinky right_index_pinky RIGHT_PINKY_MOD RIGHT_PINKY_KEY\n    #ifndef LEFT_PINKY_RING1_HOLDING_TYPE\n    #define LEFT_PINKY_RING1_HOLDING_TYPE LEFT_PINKY_CHORD_HOLDING_TYPE\n    #endif\n    #ifndef LEFT_PINKY_RING1_HOLDING_TIME\n    #define LEFT_PINKY_RING1_HOLDING_TIME LEFT_PINKY_CHORD_HOLDING_TIME\n    #endif\n    #ifndef LEFT_PINKY_RING1_STREAK_DECAY\n    #define LEFT_PINKY_RING1_STREAK_DECAY LEFT_PINKY_CHORD_STREAK_DECAY\n    #endif\n    #ifndef LEFT_PINKY_RING1_REPEAT_DECAY\n    #define LEFT_PINKY_RING1_REPEAT_DECAY LEFT_PINKY_CHORD_REPEAT_DECAY\n    #endif\n    left_pinky_ring1: homey_left_pinky_ring1 {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = LEFT_PINKY_HOLDING_TYPE;\n        hold-trigger-key-positions = <RIGHT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <LEFT_PINKY_HOLDING_TIME>;\n        #ifdef ENABLE_KEY_REPEAT\n        quick-tap-ms = <LEFT_PINKY_REPEAT_DECAY>;\n        #endif\n        require-prior-idle-ms = <LEFT_PINKY_STREAK_DECAY>;\n        #binding-cells = <2>;\n        #ifdef ENFORCE_BILATERAL\n        bindings = <&kp>, <&left_pinky_tap>;\n        #else\n        bindings = <&kp>, <&kp>;\n        #endif\n    };\n    #define LeftPinkyRing1 left_pinky_ring1 LEFT_RING1_MOD LEFT_RING1_KEY\n    #ifndef LEFT_RING2_RING1_HOLDING_TYPE\n    #define LEFT_RING2_RING1_HOLDING_TYPE LEFT_RING2_CHORD_HOLDING_TYPE\n    #endif\n    #ifndef LEFT_RING2_RING1_HOLDING_TIME\n    #define LEFT_RING2_RING1_HOLDING_TIME LEFT_RING2_CHORD_HOLDING_TIME\n    #endif\n    #ifndef LEFT_RING2_RING1_STREAK_DECAY\n    #define LEFT_RING2_RING1_STREAK_DECAY LEFT_RING2_CHORD_STREAK_DECAY\n    #endif\n    #ifndef LEFT_RING2_RING1_REPEAT_DECAY\n    #define LEFT_RING2_RING1_REPEAT_DECAY LEFT_RING2_CHORD_REPEAT_DECAY\n    #endif\n    left_ring2_ring1: homey_left_ring2_ring1 {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = LEFT_RING2_HOLDING_TYPE;\n        hold-trigger-key-positions = <RIGHT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <LEFT_RING2_HOLDING_TIME>;\n        #ifdef ENABLE_KEY_REPEAT\n        quick-tap-ms = <LEFT_RING2_REPEAT_DECAY>;\n        #endif\n        require-prior-idle-ms = <LEFT_RING2_STREAK_DECAY>;\n        #binding-cells = <2>;\n        #ifdef ENFORCE_BILATERAL\n        bindings = <&kp>, <&left_ring2_tap>;\n        #else\n        bindings = <&kp>, <&kp>;\n        #endif\n    };\n    #define LeftRing2Ring1 left_ring2_ring1 LEFT_RING1_MOD LEFT_RING1_KEY\n    #ifndef LEFT_MIDDY_RING1_HOLDING_TYPE\n    #define LEFT_MIDDY_RING1_HOLDING_TYPE LEFT_MIDDY_CHORD_HOLDING_TYPE\n    #endif\n    #ifndef LEFT_MIDDY_RING1_HOLDING_TIME\n    #define LEFT_MIDDY_RING1_HOLDING_TIME LEFT_MIDDY_CHORD_HOLDING_TIME\n    #endif\n    #ifndef LEFT_MIDDY_RING1_STREAK_DECAY\n    #define LEFT_MIDDY_RING1_STREAK_DECAY LEFT_MIDDY_CHORD_STREAK_DECAY\n    #endif\n    #ifndef LEFT_MIDDY_RING1_REPEAT_DECAY\n    #define LEFT_MIDDY_RING1_REPEAT_DECAY LEFT_MIDDY_CHORD_REPEAT_DECAY\n    #endif\n    left_middy_ring1: homey_left_middy_ring1 {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = LEFT_MIDDY_HOLDING_TYPE;\n        hold-trigger-key-positions = <RIGHT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <LEFT_MIDDY_HOLDING_TIME>;\n        #ifdef ENABLE_KEY_REPEAT\n        quick-tap-ms = <LEFT_MIDDY_REPEAT_DECAY>;\n        #endif\n        require-prior-idle-ms = <LEFT_MIDDY_STREAK_DECAY>;\n        #binding-cells = <2>;\n        #ifdef ENFORCE_BILATERAL\n        bindings = <&kp>, <&left_middy_tap>;\n        #else\n        bindings = <&kp>, <&kp>;\n        #endif\n    };\n    #define LeftMiddyRing1 left_middy_ring1 LEFT_RING1_MOD LEFT_RING1_KEY\n    #ifndef LEFT_INDEX_RING1_HOLDING_TYPE\n    #define LEFT_INDEX_RING1_HOLDING_TYPE LEFT_INDEX_CHORD_HOLDING_TYPE\n    #endif\n    #ifndef LEFT_INDEX_RING1_HOLDING_TIME\n    #define LEFT_INDEX_RING1_HOLDING_TIME LEFT_INDEX_CHORD_HOLDING_TIME\n    #endif\n    #ifndef LEFT_INDEX_RING1_STREAK_DECAY\n    #define LEFT_INDEX_RING1_STREAK_DECAY LEFT_INDEX_CHORD_STREAK_DECAY\n    #endif\n    #ifndef LEFT_INDEX_RING1_REPEAT_DECAY\n    #define LEFT_INDEX_RING1_REPEAT_DECAY LEFT_INDEX_CHORD_REPEAT_DECAY\n    #endif\n    left_index_ring1: homey_left_index_ring1 {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = LEFT_INDEX_HOLDING_TYPE;\n        hold-trigger-key-positions = <RIGHT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <LEFT_INDEX_HOLDING_TIME>;\n        #ifdef ENABLE_KEY_REPEAT\n        quick-tap-ms = <LEFT_INDEX_REPEAT_DECAY>;\n        #endif\n        require-prior-idle-ms = <LEFT_INDEX_STREAK_DECAY>;\n        #binding-cells = <2>;\n        #ifdef ENFORCE_BILATERAL\n        bindings = <&kp>, <&left_index_tap>;\n        #else\n        bindings = <&kp>, <&kp>;\n        #endif\n    };\n    #define LeftIndexRing1 left_index_ring1 LEFT_RING1_MOD LEFT_RING1_KEY\n    #ifndef RIGHT_PINKY_RING1_HOLDING_TYPE\n    #define RIGHT_PINKY_RING1_HOLDING_TYPE RIGHT_PINKY_CHORD_HOLDING_TYPE\n    #endif\n    #ifndef RIGHT_PINKY_RING1_HOLDING_TIME\n    #define RIGHT_PINKY_RING1_HOLDING_TIME RIGHT_PINKY_CHORD_HOLDING_TIME\n    #endif\n    #ifndef RIGHT_PINKY_RING1_STREAK_DECAY\n    #define RIGHT_PINKY_RING1_STREAK_DECAY RIGHT_PINKY_CHORD_STREAK_DECAY\n    #endif\n    #ifndef RIGHT_PINKY_RING1_REPEAT_DECAY\n    #define RIGHT_PINKY_RING1_REPEAT_DECAY RIGHT_PINKY_CHORD_REPEAT_DECAY\n    #endif\n    right_pinky_ring1: homey_right_pinky_ring1 {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = RIGHT_PINKY_HOLDING_TYPE;\n        hold-trigger-key-positions = <LEFT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <RIGHT_PINKY_HOLDING_TIME>;\n        #ifdef ENABLE_KEY_REPEAT\n        quick-tap-ms = <RIGHT_PINKY_REPEAT_DECAY>;\n        #endif\n        require-prior-idle-ms = <RIGHT_PINKY_STREAK_DECAY>;\n        #binding-cells = <2>;\n        #ifdef ENFORCE_BILATERAL\n        bindings = <&kp>, <&right_pinky_tap>;\n        #else\n        bindings = <&kp>, <&kp>;\n        #endif\n    };\n    #define RightPinkyRing1 right_pinky_ring1 RIGHT_RING1_MOD RIGHT_RING1_KEY\n    #ifndef RIGHT_RING2_RING1_HOLDING_TYPE\n    #define RIGHT_RING2_RING1_HOLDING_TYPE RIGHT_RING2_CHORD_HOLDING_TYPE\n    #endif\n    #ifndef RIGHT_RING2_RING1_HOLDING_TIME\n    #define RIGHT_RING2_RING1_HOLDING_TIME RIGHT_RING2_CHORD_HOLDING_TIME\n    #endif\n    #ifndef RIGHT_RING2_RING1_STREAK_DECAY\n    #define RIGHT_RING2_RING1_STREAK_DECAY RIGHT_RING2_CHORD_STREAK_DECAY\n    #endif\n    #ifndef RIGHT_RING2_RING1_REPEAT_DECAY\n    #define RIGHT_RING2_RING1_REPEAT_DECAY RIGHT_RING2_CHORD_REPEAT_DECAY\n    #endif\n    right_ring2_ring1: homey_right_ring2_ring1 {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = RIGHT_RING2_HOLDING_TYPE;\n        hold-trigger-key-positions = <LEFT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <RIGHT_RING2_HOLDING_TIME>;\n        #ifdef ENABLE_KEY_REPEAT\n        quick-tap-ms = <RIGHT_RING2_REPEAT_DECAY>;\n        #endif\n        require-prior-idle-ms = <RIGHT_RING2_STREAK_DECAY>;\n        #binding-cells = <2>;\n        #ifdef ENFORCE_BILATERAL\n        bindings = <&kp>, <&right_ring2_tap>;\n        #else\n        bindings = <&kp>, <&kp>;\n        #endif\n    };\n    #define RightRing2Ring1 right_ring2_ring1 RIGHT_RING1_MOD RIGHT_RING1_KEY\n    #ifndef RIGHT_MIDDY_RING1_HOLDING_TYPE\n    #define RIGHT_MIDDY_RING1_HOLDING_TYPE RIGHT_MIDDY_CHORD_HOLDING_TYPE\n    #endif\n    #ifndef RIGHT_MIDDY_RING1_HOLDING_TIME\n    #define RIGHT_MIDDY_RING1_HOLDING_TIME RIGHT_MIDDY_CHORD_HOLDING_TIME\n    #endif\n    #ifndef RIGHT_MIDDY_RING1_STREAK_DECAY\n    #define RIGHT_MIDDY_RING1_STREAK_DECAY RIGHT_MIDDY_CHORD_STREAK_DECAY\n    #endif\n    #ifndef RIGHT_MIDDY_RING1_REPEAT_DECAY\n    #define RIGHT_MIDDY_RING1_REPEAT_DECAY RIGHT_MIDDY_CHORD_REPEAT_DECAY\n    #endif\n    right_middy_ring1: homey_right_middy_ring1 {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = RIGHT_MIDDY_HOLDING_TYPE;\n        hold-trigger-key-positions = <LEFT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <RIGHT_MIDDY_HOLDING_TIME>;\n        #ifdef ENABLE_KEY_REPEAT\n        quick-tap-ms = <RIGHT_MIDDY_REPEAT_DECAY>;\n        #endif\n        require-prior-idle-ms = <RIGHT_MIDDY_STREAK_DECAY>;\n        #binding-cells = <2>;\n        #ifdef ENFORCE_BILATERAL\n        bindings = <&kp>, <&right_middy_tap>;\n        #else\n        bindings = <&kp>, <&kp>;\n        #endif\n    };\n    #define RightMiddyRing1 right_middy_ring1 RIGHT_RING1_MOD RIGHT_RING1_KEY\n    #ifndef RIGHT_INDEX_RING1_HOLDING_TYPE\n    #define RIGHT_INDEX_RING1_HOLDING_TYPE RIGHT_INDEX_CHORD_HOLDING_TYPE\n    #endif\n    #ifndef RIGHT_INDEX_RING1_HOLDING_TIME\n    #define RIGHT_INDEX_RING1_HOLDING_TIME RIGHT_INDEX_CHORD_HOLDING_TIME\n    #endif\n    #ifndef RIGHT_INDEX_RING1_STREAK_DECAY\n    #define RIGHT_INDEX_RING1_STREAK_DECAY RIGHT_INDEX_CHORD_STREAK_DECAY\n    #endif\n    #ifndef RIGHT_INDEX_RING1_REPEAT_DECAY\n    #define RIGHT_INDEX_RING1_REPEAT_DECAY RIGHT_INDEX_CHORD_REPEAT_DECAY\n    #endif\n    right_index_ring1: homey_right_index_ring1 {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = RIGHT_INDEX_HOLDING_TYPE;\n        hold-trigger-key-positions = <LEFT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <RIGHT_INDEX_HOLDING_TIME>;\n        #ifdef ENABLE_KEY_REPEAT\n        quick-tap-ms = <RIGHT_INDEX_REPEAT_DECAY>;\n        #endif\n        require-prior-idle-ms = <RIGHT_INDEX_STREAK_DECAY>;\n        #binding-cells = <2>;\n        #ifdef ENFORCE_BILATERAL\n        bindings = <&kp>, <&right_index_tap>;\n        #else\n        bindings = <&kp>, <&kp>;\n        #endif\n    };\n    #define RightIndexRing1 right_index_ring1 RIGHT_RING1_MOD RIGHT_RING1_KEY\n    #ifndef LEFT_PINKY_RING2_HOLDING_TYPE\n    #define LEFT_PINKY_RING2_HOLDING_TYPE LEFT_PINKY_CHORD_HOLDING_TYPE\n    #endif\n    #ifndef LEFT_PINKY_RING2_HOLDING_TIME\n    #define LEFT_PINKY_RING2_HOLDING_TIME LEFT_PINKY_CHORD_HOLDING_TIME\n    #endif\n    #ifndef LEFT_PINKY_RING2_STREAK_DECAY\n    #define LEFT_PINKY_RING2_STREAK_DECAY LEFT_PINKY_CHORD_STREAK_DECAY\n    #endif\n    #ifndef LEFT_PINKY_RING2_REPEAT_DECAY\n    #define LEFT_PINKY_RING2_REPEAT_DECAY LEFT_PINKY_CHORD_REPEAT_DECAY\n    #endif\n    left_pinky_ring2: homey_left_pinky_ring2 {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = LEFT_PINKY_HOLDING_TYPE;\n        hold-trigger-key-positions = <RIGHT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <LEFT_PINKY_HOLDING_TIME>;\n        #ifdef ENABLE_KEY_REPEAT\n        quick-tap-ms = <LEFT_PINKY_REPEAT_DECAY>;\n        #endif\n        require-prior-idle-ms = <LEFT_PINKY_STREAK_DECAY>;\n        #binding-cells = <2>;\n        #ifdef ENFORCE_BILATERAL\n        bindings = <&kp>, <&left_pinky_tap>;\n        #else\n        bindings = <&kp>, <&kp>;\n        #endif\n    };\n    #define LeftPinkyRing2 left_pinky_ring2 LEFT_RING2_MOD LEFT_RING2_KEY\n    #ifndef LEFT_RING1_RING2_HOLDING_TYPE\n    #define LEFT_RING1_RING2_HOLDING_TYPE LEFT_RING1_CHORD_HOLDING_TYPE\n    #endif\n    #ifndef LEFT_RING1_RING2_HOLDING_TIME\n    #define LEFT_RING1_RING2_HOLDING_TIME LEFT_RING1_CHORD_HOLDING_TIME\n    #endif\n    #ifndef LEFT_RING1_RING2_STREAK_DECAY\n    #define LEFT_RING1_RING2_STREAK_DECAY LEFT_RING1_CHORD_STREAK_DECAY\n    #endif\n    #ifndef LEFT_RING1_RING2_REPEAT_DECAY\n    #define LEFT_RING1_RING2_REPEAT_DECAY LEFT_RING1_CHORD_REPEAT_DECAY\n    #endif\n    left_ring1_ring2: homey_left_ring1_ring2 {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = LEFT_RING1_HOLDING_TYPE;\n        hold-trigger-key-positions = <RIGHT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <LEFT_RING1_HOLDING_TIME>;\n        #ifdef ENABLE_KEY_REPEAT\n        quick-tap-ms = <LEFT_RING1_REPEAT_DECAY>;\n        #endif\n        require-prior-idle-ms = <LEFT_RING1_STREAK_DECAY>;\n        #binding-cells = <2>;\n        #ifdef ENFORCE_BILATERAL\n        bindings = <&kp>, <&left_ring1_tap>;\n        #else\n        bindings = <&kp>, <&kp>;\n        #endif\n    };\n    #define LeftRing1Ring2 left_ring1_ring2 LEFT_RING2_MOD LEFT_RING2_KEY\n    #ifndef LEFT_MIDDY_RING2_HOLDING_TYPE\n    #define LEFT_MIDDY_RING2_HOLDING_TYPE LEFT_MIDDY_CHORD_HOLDING_TYPE\n    #endif\n    #ifndef LEFT_MIDDY_RING2_HOLDING_TIME\n    #define LEFT_MIDDY_RING2_HOLDING_TIME LEFT_MIDDY_CHORD_HOLDING_TIME\n    #endif\n    #ifndef LEFT_MIDDY_RING2_STREAK_DECAY\n    #define LEFT_MIDDY_RING2_STREAK_DECAY LEFT_MIDDY_CHORD_STREAK_DECAY\n    #endif\n    #ifndef LEFT_MIDDY_RING2_REPEAT_DECAY\n    #define LEFT_MIDDY_RING2_REPEAT_DECAY LEFT_MIDDY_CHORD_REPEAT_DECAY\n    #endif\n    left_middy_ring2: homey_left_middy_ring2 {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = LEFT_MIDDY_HOLDING_TYPE;\n        hold-trigger-key-positions = <RIGHT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <LEFT_MIDDY_HOLDING_TIME>;\n        #ifdef ENABLE_KEY_REPEAT\n        quick-tap-ms = <LEFT_MIDDY_REPEAT_DECAY>;\n        #endif\n        require-prior-idle-ms = <LEFT_MIDDY_STREAK_DECAY>;\n        #binding-cells = <2>;\n        #ifdef ENFORCE_BILATERAL\n        bindings = <&kp>, <&left_middy_tap>;\n        #else\n        bindings = <&kp>, <&kp>;\n        #endif\n    };\n    #define LeftMiddyRing2 left_middy_ring2 LEFT_RING2_MOD LEFT_RING2_KEY\n    #ifndef LEFT_INDEX_RING2_HOLDING_TYPE\n    #define LEFT_INDEX_RING2_HOLDING_TYPE LEFT_INDEX_CHORD_HOLDING_TYPE\n    #endif\n    #ifndef LEFT_INDEX_RING2_HOLDING_TIME\n    #define LEFT_INDEX_RING2_HOLDING_TIME LEFT_INDEX_CHORD_HOLDING_TIME\n    #endif\n    #ifndef LEFT_INDEX_RING2_STREAK_DECAY\n    #define LEFT_INDEX_RING2_STREAK_DECAY LEFT_INDEX_CHORD_STREAK_DECAY\n    #endif\n    #ifndef LEFT_INDEX_RING2_REPEAT_DECAY\n    #define LEFT_INDEX_RING2_REPEAT_DECAY LEFT_INDEX_CHORD_REPEAT_DECAY\n    #endif\n    left_index_ring2: homey_left_index_ring2 {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = LEFT_INDEX_HOLDING_TYPE;\n        hold-trigger-key-positions = <RIGHT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <LEFT_INDEX_HOLDING_TIME>;\n        #ifdef ENABLE_KEY_REPEAT\n        quick-tap-ms = <LEFT_INDEX_REPEAT_DECAY>;\n        #endif\n        require-prior-idle-ms = <LEFT_INDEX_STREAK_DECAY>;\n        #binding-cells = <2>;\n        #ifdef ENFORCE_BILATERAL\n        bindings = <&kp>, <&left_index_tap>;\n        #else\n        bindings = <&kp>, <&kp>;\n        #endif\n    };\n    #define LeftIndexRing2 left_index_ring2 LEFT_RING2_MOD LEFT_RING2_KEY\n    #ifndef RIGHT_PINKY_RING2_HOLDING_TYPE\n    #define RIGHT_PINKY_RING2_HOLDING_TYPE RIGHT_PINKY_CHORD_HOLDING_TYPE\n    #endif\n    #ifndef RIGHT_PINKY_RING2_HOLDING_TIME\n    #define RIGHT_PINKY_RING2_HOLDING_TIME RIGHT_PINKY_CHORD_HOLDING_TIME\n    #endif\n    #ifndef RIGHT_PINKY_RING2_STREAK_DECAY\n    #define RIGHT_PINKY_RING2_STREAK_DECAY RIGHT_PINKY_CHORD_STREAK_DECAY\n    #endif\n    #ifndef RIGHT_PINKY_RING2_REPEAT_DECAY\n    #define RIGHT_PINKY_RING2_REPEAT_DECAY RIGHT_PINKY_CHORD_REPEAT_DECAY\n    #endif\n    right_pinky_ring2: homey_right_pinky_ring2 {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = RIGHT_PINKY_HOLDING_TYPE;\n        hold-trigger-key-positions = <LEFT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <RIGHT_PINKY_HOLDING_TIME>;\n        #ifdef ENABLE_KEY_REPEAT\n        quick-tap-ms = <RIGHT_PINKY_REPEAT_DECAY>;\n        #endif\n        require-prior-idle-ms = <RIGHT_PINKY_STREAK_DECAY>;\n        #binding-cells = <2>;\n        #ifdef ENFORCE_BILATERAL\n        bindings = <&kp>, <&right_pinky_tap>;\n        #else\n        bindings = <&kp>, <&kp>;\n        #endif\n    };\n    #define RightPinkyRing2 right_pinky_ring2 RIGHT_RING2_MOD RIGHT_RING2_KEY\n    #ifndef RIGHT_RING1_RING2_HOLDING_TYPE\n    #define RIGHT_RING1_RING2_HOLDING_TYPE RIGHT_RING1_CHORD_HOLDING_TYPE\n    #endif\n    #ifndef RIGHT_RING1_RING2_HOLDING_TIME\n    #define RIGHT_RING1_RING2_HOLDING_TIME RIGHT_RING1_CHORD_HOLDING_TIME\n    #endif\n    #ifndef RIGHT_RING1_RING2_STREAK_DECAY\n    #define RIGHT_RING1_RING2_STREAK_DECAY RIGHT_RING1_CHORD_STREAK_DECAY\n    #endif\n    #ifndef RIGHT_RING1_RING2_REPEAT_DECAY\n    #define RIGHT_RING1_RING2_REPEAT_DECAY RIGHT_RING1_CHORD_REPEAT_DECAY\n    #endif\n    right_ring1_ring2: homey_right_ring1_ring2 {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = RIGHT_RING1_HOLDING_TYPE;\n        hold-trigger-key-positions = <LEFT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <RIGHT_RING1_HOLDING_TIME>;\n        #ifdef ENABLE_KEY_REPEAT\n        quick-tap-ms = <RIGHT_RING1_REPEAT_DECAY>;\n        #endif\n        require-prior-idle-ms = <RIGHT_RING1_STREAK_DECAY>;\n        #binding-cells = <2>;\n        #ifdef ENFORCE_BILATERAL\n        bindings = <&kp>, <&right_ring1_tap>;\n        #else\n        bindings = <&kp>, <&kp>;\n        #endif\n    };\n    #define RightRing1Ring2 right_ring1_ring2 RIGHT_RING2_MOD RIGHT_RING2_KEY\n    #ifndef RIGHT_MIDDY_RING2_HOLDING_TYPE\n    #define RIGHT_MIDDY_RING2_HOLDING_TYPE RIGHT_MIDDY_CHORD_HOLDING_TYPE\n    #endif\n    #ifndef RIGHT_MIDDY_RING2_HOLDING_TIME\n    #define RIGHT_MIDDY_RING2_HOLDING_TIME RIGHT_MIDDY_CHORD_HOLDING_TIME\n    #endif\n    #ifndef RIGHT_MIDDY_RING2_STREAK_DECAY\n    #define RIGHT_MIDDY_RING2_STREAK_DECAY RIGHT_MIDDY_CHORD_STREAK_DECAY\n    #endif\n    #ifndef RIGHT_MIDDY_RING2_REPEAT_DECAY\n    #define RIGHT_MIDDY_RING2_REPEAT_DECAY RIGHT_MIDDY_CHORD_REPEAT_DECAY\n    #endif\n    right_middy_ring2: homey_right_middy_ring2 {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = RIGHT_MIDDY_HOLDING_TYPE;\n        hold-trigger-key-positions = <LEFT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <RIGHT_MIDDY_HOLDING_TIME>;\n        #ifdef ENABLE_KEY_REPEAT\n        quick-tap-ms = <RIGHT_MIDDY_REPEAT_DECAY>;\n        #endif\n        require-prior-idle-ms = <RIGHT_MIDDY_STREAK_DECAY>;\n        #binding-cells = <2>;\n        #ifdef ENFORCE_BILATERAL\n        bindings = <&kp>, <&right_middy_tap>;\n        #else\n        bindings = <&kp>, <&kp>;\n        #endif\n    };\n    #define RightMiddyRing2 right_middy_ring2 RIGHT_RING2_MOD RIGHT_RING2_KEY\n    #ifndef RIGHT_INDEX_RING2_HOLDING_TYPE\n    #define RIGHT_INDEX_RING2_HOLDING_TYPE RIGHT_INDEX_CHORD_HOLDING_TYPE\n    #endif\n    #ifndef RIGHT_INDEX_RING2_HOLDING_TIME\n    #define RIGHT_INDEX_RING2_HOLDING_TIME RIGHT_INDEX_CHORD_HOLDING_TIME\n    #endif\n    #ifndef RIGHT_INDEX_RING2_STREAK_DECAY\n    #define RIGHT_INDEX_RING2_STREAK_DECAY RIGHT_INDEX_CHORD_STREAK_DECAY\n    #endif\n    #ifndef RIGHT_INDEX_RING2_REPEAT_DECAY\n    #define RIGHT_INDEX_RING2_REPEAT_DECAY RIGHT_INDEX_CHORD_REPEAT_DECAY\n    #endif\n    right_index_ring2: homey_right_index_ring2 {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = RIGHT_INDEX_HOLDING_TYPE;\n        hold-trigger-key-positions = <LEFT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <RIGHT_INDEX_HOLDING_TIME>;\n        #ifdef ENABLE_KEY_REPEAT\n        quick-tap-ms = <RIGHT_INDEX_REPEAT_DECAY>;\n        #endif\n        require-prior-idle-ms = <RIGHT_INDEX_STREAK_DECAY>;\n        #binding-cells = <2>;\n        #ifdef ENFORCE_BILATERAL\n        bindings = <&kp>, <&right_index_tap>;\n        #else\n        bindings = <&kp>, <&kp>;\n        #endif\n    };\n    #define RightIndexRing2 right_index_ring2 RIGHT_RING2_MOD RIGHT_RING2_KEY\n    #ifndef LEFT_PINKY_MIDDY_HOLDING_TYPE\n    #define LEFT_PINKY_MIDDY_HOLDING_TYPE LEFT_PINKY_CHORD_HOLDING_TYPE\n    #endif\n    #ifndef LEFT_PINKY_MIDDY_HOLDING_TIME\n    #define LEFT_PINKY_MIDDY_HOLDING_TIME LEFT_PINKY_CHORD_HOLDING_TIME\n    #endif\n    #ifndef LEFT_PINKY_MIDDY_STREAK_DECAY\n    #define LEFT_PINKY_MIDDY_STREAK_DECAY LEFT_PINKY_CHORD_STREAK_DECAY\n    #endif\n    #ifndef LEFT_PINKY_MIDDY_REPEAT_DECAY\n    #define LEFT_PINKY_MIDDY_REPEAT_DECAY LEFT_PINKY_CHORD_REPEAT_DECAY\n    #endif\n    left_pinky_middy: homey_left_pinky_middy {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = LEFT_PINKY_HOLDING_TYPE;\n        hold-trigger-key-positions = <RIGHT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <LEFT_PINKY_HOLDING_TIME>;\n        #ifdef ENABLE_KEY_REPEAT\n        quick-tap-ms = <LEFT_PINKY_REPEAT_DECAY>;\n        #endif\n        require-prior-idle-ms = <LEFT_PINKY_STREAK_DECAY>;\n        #binding-cells = <2>;\n        #ifdef ENFORCE_BILATERAL\n        bindings = <&kp>, <&left_pinky_tap>;\n        #else\n        bindings = <&kp>, <&kp>;\n        #endif\n    };\n    #define LeftPinkyMiddy left_pinky_middy LEFT_MIDDY_MOD LEFT_MIDDY_KEY\n    #ifndef LEFT_RING1_MIDDY_HOLDING_TYPE\n    #define LEFT_RING1_MIDDY_HOLDING_TYPE LEFT_RING1_CHORD_HOLDING_TYPE\n    #endif\n    #ifndef LEFT_RING1_MIDDY_HOLDING_TIME\n    #define LEFT_RING1_MIDDY_HOLDING_TIME LEFT_RING1_CHORD_HOLDING_TIME\n    #endif\n    #ifndef LEFT_RING1_MIDDY_STREAK_DECAY\n    #define LEFT_RING1_MIDDY_STREAK_DECAY LEFT_RING1_CHORD_STREAK_DECAY\n    #endif\n    #ifndef LEFT_RING1_MIDDY_REPEAT_DECAY\n    #define LEFT_RING1_MIDDY_REPEAT_DECAY LEFT_RING1_CHORD_REPEAT_DECAY\n    #endif\n    left_ring1_middy: homey_left_ring1_middy {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = LEFT_RING1_HOLDING_TYPE;\n        hold-trigger-key-positions = <RIGHT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <LEFT_RING1_HOLDING_TIME>;\n        #ifdef ENABLE_KEY_REPEAT\n        quick-tap-ms = <LEFT_RING1_REPEAT_DECAY>;\n        #endif\n        require-prior-idle-ms = <LEFT_RING1_STREAK_DECAY>;\n        #binding-cells = <2>;\n        #ifdef ENFORCE_BILATERAL\n        bindings = <&kp>, <&left_ring1_tap>;\n        #else\n        bindings = <&kp>, <&kp>;\n        #endif\n    };\n    #define LeftRing1Middy left_ring1_middy LEFT_MIDDY_MOD LEFT_MIDDY_KEY\n    #ifndef LEFT_RING2_MIDDY_HOLDING_TYPE\n    #define LEFT_RING2_MIDDY_HOLDING_TYPE LEFT_RING2_CHORD_HOLDING_TYPE\n    #endif\n    #ifndef LEFT_RING2_MIDDY_HOLDING_TIME\n    #define LEFT_RING2_MIDDY_HOLDING_TIME LEFT_RING2_CHORD_HOLDING_TIME\n    #endif\n    #ifndef LEFT_RING2_MIDDY_STREAK_DECAY\n    #define LEFT_RING2_MIDDY_STREAK_DECAY LEFT_RING2_CHORD_STREAK_DECAY\n    #endif\n    #ifndef LEFT_RING2_MIDDY_REPEAT_DECAY\n    #define LEFT_RING2_MIDDY_REPEAT_DECAY LEFT_RING2_CHORD_REPEAT_DECAY\n    #endif\n    left_ring2_middy: homey_left_ring2_middy {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = LEFT_RING2_HOLDING_TYPE;\n        hold-trigger-key-positions = <RIGHT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <LEFT_RING2_HOLDING_TIME>;\n        #ifdef ENABLE_KEY_REPEAT\n        quick-tap-ms = <LEFT_RING2_REPEAT_DECAY>;\n        #endif\n        require-prior-idle-ms = <LEFT_RING2_STREAK_DECAY>;\n        #binding-cells = <2>;\n        #ifdef ENFORCE_BILATERAL\n        bindings = <&kp>, <&left_ring2_tap>;\n        #else\n        bindings = <&kp>, <&kp>;\n        #endif\n    };\n    #define LeftRing2Middy left_ring2_middy LEFT_MIDDY_MOD LEFT_MIDDY_KEY\n    #ifndef LEFT_INDEX_MIDDY_HOLDING_TYPE\n    #define LEFT_INDEX_MIDDY_HOLDING_TYPE LEFT_INDEX_CHORD_HOLDING_TYPE\n    #endif\n    #ifndef LEFT_INDEX_MIDDY_HOLDING_TIME\n    #define LEFT_INDEX_MIDDY_HOLDING_TIME LEFT_INDEX_CHORD_HOLDING_TIME\n    #endif\n    #ifndef LEFT_INDEX_MIDDY_STREAK_DECAY\n    #define LEFT_INDEX_MIDDY_STREAK_DECAY LEFT_INDEX_CHORD_STREAK_DECAY\n    #endif\n    #ifndef LEFT_INDEX_MIDDY_REPEAT_DECAY\n    #define LEFT_INDEX_MIDDY_REPEAT_DECAY LEFT_INDEX_CHORD_REPEAT_DECAY\n    #endif\n    left_index_middy: homey_left_index_middy {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = LEFT_INDEX_HOLDING_TYPE;\n        hold-trigger-key-positions = <RIGHT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <LEFT_INDEX_HOLDING_TIME>;\n        #ifdef ENABLE_KEY_REPEAT\n        quick-tap-ms = <LEFT_INDEX_REPEAT_DECAY>;\n        #endif\n        require-prior-idle-ms = <LEFT_INDEX_STREAK_DECAY>;\n        #binding-cells = <2>;\n        #ifdef ENFORCE_BILATERAL\n        bindings = <&kp>, <&left_index_tap>;\n        #else\n        bindings = <&kp>, <&kp>;\n        #endif\n    };\n    #define LeftIndexMiddy left_index_middy LEFT_MIDDY_MOD LEFT_MIDDY_KEY\n    #ifndef RIGHT_PINKY_MIDDY_HOLDING_TYPE\n    #define RIGHT_PINKY_MIDDY_HOLDING_TYPE RIGHT_PINKY_CHORD_HOLDING_TYPE\n    #endif\n    #ifndef RIGHT_PINKY_MIDDY_HOLDING_TIME\n    #define RIGHT_PINKY_MIDDY_HOLDING_TIME RIGHT_PINKY_CHORD_HOLDING_TIME\n    #endif\n    #ifndef RIGHT_PINKY_MIDDY_STREAK_DECAY\n    #define RIGHT_PINKY_MIDDY_STREAK_DECAY RIGHT_PINKY_CHORD_STREAK_DECAY\n    #endif\n    #ifndef RIGHT_PINKY_MIDDY_REPEAT_DECAY\n    #define RIGHT_PINKY_MIDDY_REPEAT_DECAY RIGHT_PINKY_CHORD_REPEAT_DECAY\n    #endif\n    right_pinky_middy: homey_right_pinky_middy {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = RIGHT_PINKY_HOLDING_TYPE;\n        hold-trigger-key-positions = <LEFT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <RIGHT_PINKY_HOLDING_TIME>;\n        #ifdef ENABLE_KEY_REPEAT\n        quick-tap-ms = <RIGHT_PINKY_REPEAT_DECAY>;\n        #endif\n        require-prior-idle-ms = <RIGHT_PINKY_STREAK_DECAY>;\n        #binding-cells = <2>;\n        #ifdef ENFORCE_BILATERAL\n        bindings = <&kp>, <&right_pinky_tap>;\n        #else\n        bindings = <&kp>, <&kp>;\n        #endif\n    };\n    #define RightPinkyMiddy right_pinky_middy RIGHT_MIDDY_MOD RIGHT_MIDDY_KEY\n    #ifndef RIGHT_RING1_MIDDY_HOLDING_TYPE\n    #define RIGHT_RING1_MIDDY_HOLDING_TYPE RIGHT_RING1_CHORD_HOLDING_TYPE\n    #endif\n    #ifndef RIGHT_RING1_MIDDY_HOLDING_TIME\n    #define RIGHT_RING1_MIDDY_HOLDING_TIME RIGHT_RING1_CHORD_HOLDING_TIME\n    #endif\n    #ifndef RIGHT_RING1_MIDDY_STREAK_DECAY\n    #define RIGHT_RING1_MIDDY_STREAK_DECAY RIGHT_RING1_CHORD_STREAK_DECAY\n    #endif\n    #ifndef RIGHT_RING1_MIDDY_REPEAT_DECAY\n    #define RIGHT_RING1_MIDDY_REPEAT_DECAY RIGHT_RING1_CHORD_REPEAT_DECAY\n    #endif\n    right_ring1_middy: homey_right_ring1_middy {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = RIGHT_RING1_HOLDING_TYPE;\n        hold-trigger-key-positions = <LEFT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <RIGHT_RING1_HOLDING_TIME>;\n        #ifdef ENABLE_KEY_REPEAT\n        quick-tap-ms = <RIGHT_RING1_REPEAT_DECAY>;\n        #endif\n        require-prior-idle-ms = <RIGHT_RING1_STREAK_DECAY>;\n        #binding-cells = <2>;\n        #ifdef ENFORCE_BILATERAL\n        bindings = <&kp>, <&right_ring1_tap>;\n        #else\n        bindings = <&kp>, <&kp>;\n        #endif\n    };\n    #define RightRing1Middy right_ring1_middy RIGHT_MIDDY_MOD RIGHT_MIDDY_KEY\n    #ifndef RIGHT_RING2_MIDDY_HOLDING_TYPE\n    #define RIGHT_RING2_MIDDY_HOLDING_TYPE RIGHT_RING2_CHORD_HOLDING_TYPE\n    #endif\n    #ifndef RIGHT_RING2_MIDDY_HOLDING_TIME\n    #define RIGHT_RING2_MIDDY_HOLDING_TIME RIGHT_RING2_CHORD_HOLDING_TIME\n    #endif\n    #ifndef RIGHT_RING2_MIDDY_STREAK_DECAY\n    #define RIGHT_RING2_MIDDY_STREAK_DECAY RIGHT_RING2_CHORD_STREAK_DECAY\n    #endif\n    #ifndef RIGHT_RING2_MIDDY_REPEAT_DECAY\n    #define RIGHT_RING2_MIDDY_REPEAT_DECAY RIGHT_RING2_CHORD_REPEAT_DECAY\n    #endif\n    right_ring2_middy: homey_right_ring2_middy {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = RIGHT_RING2_HOLDING_TYPE;\n        hold-trigger-key-positions = <LEFT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <RIGHT_RING2_HOLDING_TIME>;\n        #ifdef ENABLE_KEY_REPEAT\n        quick-tap-ms = <RIGHT_RING2_REPEAT_DECAY>;\n        #endif\n        require-prior-idle-ms = <RIGHT_RING2_STREAK_DECAY>;\n        #binding-cells = <2>;\n        #ifdef ENFORCE_BILATERAL\n        bindings = <&kp>, <&right_ring2_tap>;\n        #else\n        bindings = <&kp>, <&kp>;\n        #endif\n    };\n    #define RightRing2Middy right_ring2_middy RIGHT_MIDDY_MOD RIGHT_MIDDY_KEY\n    #ifndef RIGHT_INDEX_MIDDY_HOLDING_TYPE\n    #define RIGHT_INDEX_MIDDY_HOLDING_TYPE RIGHT_INDEX_CHORD_HOLDING_TYPE\n    #endif\n    #ifndef RIGHT_INDEX_MIDDY_HOLDING_TIME\n    #define RIGHT_INDEX_MIDDY_HOLDING_TIME RIGHT_INDEX_CHORD_HOLDING_TIME\n    #endif\n    #ifndef RIGHT_INDEX_MIDDY_STREAK_DECAY\n    #define RIGHT_INDEX_MIDDY_STREAK_DECAY RIGHT_INDEX_CHORD_STREAK_DECAY\n    #endif\n    #ifndef RIGHT_INDEX_MIDDY_REPEAT_DECAY\n    #define RIGHT_INDEX_MIDDY_REPEAT_DECAY RIGHT_INDEX_CHORD_REPEAT_DECAY\n    #endif\n    right_index_middy: homey_right_index_middy {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = RIGHT_INDEX_HOLDING_TYPE;\n        hold-trigger-key-positions = <LEFT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <RIGHT_INDEX_HOLDING_TIME>;\n        #ifdef ENABLE_KEY_REPEAT\n        quick-tap-ms = <RIGHT_INDEX_REPEAT_DECAY>;\n        #endif\n        require-prior-idle-ms = <RIGHT_INDEX_STREAK_DECAY>;\n        #binding-cells = <2>;\n        #ifdef ENFORCE_BILATERAL\n        bindings = <&kp>, <&right_index_tap>;\n        #else\n        bindings = <&kp>, <&kp>;\n        #endif\n    };\n    #define RightIndexMiddy right_index_middy RIGHT_MIDDY_MOD RIGHT_MIDDY_KEY\n    #ifndef LEFT_PINKY_INDEX_HOLDING_TYPE\n    #define LEFT_PINKY_INDEX_HOLDING_TYPE LEFT_PINKY_CHORD_HOLDING_TYPE\n    #endif\n    #ifndef LEFT_PINKY_INDEX_HOLDING_TIME\n    #define LEFT_PINKY_INDEX_HOLDING_TIME LEFT_PINKY_CHORD_HOLDING_TIME\n    #endif\n    #ifndef LEFT_PINKY_INDEX_STREAK_DECAY\n    #define LEFT_PINKY_INDEX_STREAK_DECAY LEFT_PINKY_CHORD_STREAK_DECAY\n    #endif\n    #ifndef LEFT_PINKY_INDEX_REPEAT_DECAY\n    #define LEFT_PINKY_INDEX_REPEAT_DECAY LEFT_PINKY_CHORD_REPEAT_DECAY\n    #endif\n    left_pinky_index: homey_left_pinky_index {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = LEFT_PINKY_HOLDING_TYPE;\n        hold-trigger-key-positions = <RIGHT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <LEFT_PINKY_HOLDING_TIME>;\n        #ifdef ENABLE_KEY_REPEAT\n        quick-tap-ms = <LEFT_PINKY_REPEAT_DECAY>;\n        #endif\n        require-prior-idle-ms = <LEFT_PINKY_STREAK_DECAY>;\n        #binding-cells = <2>;\n        #ifdef ENFORCE_BILATERAL\n        bindings = <&kp>, <&left_pinky_tap>;\n        #else\n        bindings = <&kp>, <&kp>;\n        #endif\n    };\n    #define LeftPinkyIndex left_pinky_index LEFT_INDEX_MOD LEFT_INDEX_KEY\n    #ifndef LEFT_RING1_INDEX_HOLDING_TYPE\n    #define LEFT_RING1_INDEX_HOLDING_TYPE LEFT_RING1_CHORD_HOLDING_TYPE\n    #endif\n    #ifndef LEFT_RING1_INDEX_HOLDING_TIME\n    #define LEFT_RING1_INDEX_HOLDING_TIME LEFT_RING1_CHORD_HOLDING_TIME\n    #endif\n    #ifndef LEFT_RING1_INDEX_STREAK_DECAY\n    #define LEFT_RING1_INDEX_STREAK_DECAY LEFT_RING1_CHORD_STREAK_DECAY\n    #endif\n    #ifndef LEFT_RING1_INDEX_REPEAT_DECAY\n    #define LEFT_RING1_INDEX_REPEAT_DECAY LEFT_RING1_CHORD_REPEAT_DECAY\n    #endif\n    left_ring1_index: homey_left_ring1_index {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = LEFT_RING1_HOLDING_TYPE;\n        hold-trigger-key-positions = <RIGHT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <LEFT_RING1_HOLDING_TIME>;\n        #ifdef ENABLE_KEY_REPEAT\n        quick-tap-ms = <LEFT_RING1_REPEAT_DECAY>;\n        #endif\n        require-prior-idle-ms = <LEFT_RING1_STREAK_DECAY>;\n        #binding-cells = <2>;\n        #ifdef ENFORCE_BILATERAL\n        bindings = <&kp>, <&left_ring1_tap>;\n        #else\n        bindings = <&kp>, <&kp>;\n        #endif\n    };\n    #define LeftRing1Index left_ring1_index LEFT_INDEX_MOD LEFT_INDEX_KEY\n    #ifndef LEFT_RING2_INDEX_HOLDING_TYPE\n    #define LEFT_RING2_INDEX_HOLDING_TYPE LEFT_RING2_CHORD_HOLDING_TYPE\n    #endif\n    #ifndef LEFT_RING2_INDEX_HOLDING_TIME\n    #define LEFT_RING2_INDEX_HOLDING_TIME LEFT_RING2_CHORD_HOLDING_TIME\n    #endif\n    #ifndef LEFT_RING2_INDEX_STREAK_DECAY\n    #define LEFT_RING2_INDEX_STREAK_DECAY LEFT_RING2_CHORD_STREAK_DECAY\n    #endif\n    #ifndef LEFT_RING2_INDEX_REPEAT_DECAY\n    #define LEFT_RING2_INDEX_REPEAT_DECAY LEFT_RING2_CHORD_REPEAT_DECAY\n    #endif\n    left_ring2_index: homey_left_ring2_index {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = LEFT_RING2_HOLDING_TYPE;\n        hold-trigger-key-positions = <RIGHT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <LEFT_RING2_HOLDING_TIME>;\n        #ifdef ENABLE_KEY_REPEAT\n        quick-tap-ms = <LEFT_RING2_REPEAT_DECAY>;\n        #endif\n        require-prior-idle-ms = <LEFT_RING2_STREAK_DECAY>;\n        #binding-cells = <2>;\n        #ifdef ENFORCE_BILATERAL\n        bindings = <&kp>, <&left_ring2_tap>;\n        #else\n        bindings = <&kp>, <&kp>;\n        #endif\n    };\n    #define LeftRing2Index left_ring2_index LEFT_INDEX_MOD LEFT_INDEX_KEY\n    #ifndef LEFT_MIDDY_INDEX_HOLDING_TYPE\n    #define LEFT_MIDDY_INDEX_HOLDING_TYPE LEFT_MIDDY_CHORD_HOLDING_TYPE\n    #endif\n    #ifndef LEFT_MIDDY_INDEX_HOLDING_TIME\n    #define LEFT_MIDDY_INDEX_HOLDING_TIME LEFT_MIDDY_CHORD_HOLDING_TIME\n    #endif\n    #ifndef LEFT_MIDDY_INDEX_STREAK_DECAY\n    #define LEFT_MIDDY_INDEX_STREAK_DECAY LEFT_MIDDY_CHORD_STREAK_DECAY\n    #endif\n    #ifndef LEFT_MIDDY_INDEX_REPEAT_DECAY\n    #define LEFT_MIDDY_INDEX_REPEAT_DECAY LEFT_MIDDY_CHORD_REPEAT_DECAY\n    #endif\n    left_middy_index: homey_left_middy_index {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = LEFT_MIDDY_HOLDING_TYPE;\n        hold-trigger-key-positions = <RIGHT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <LEFT_MIDDY_HOLDING_TIME>;\n        #ifdef ENABLE_KEY_REPEAT\n        quick-tap-ms = <LEFT_MIDDY_REPEAT_DECAY>;\n        #endif\n        require-prior-idle-ms = <LEFT_MIDDY_STREAK_DECAY>;\n        #binding-cells = <2>;\n        #ifdef ENFORCE_BILATERAL\n        bindings = <&kp>, <&left_middy_tap>;\n        #else\n        bindings = <&kp>, <&kp>;\n        #endif\n    };\n    #define LeftMiddyIndex left_middy_index LEFT_INDEX_MOD LEFT_INDEX_KEY\n    #ifndef RIGHT_PINKY_INDEX_HOLDING_TYPE\n    #define RIGHT_PINKY_INDEX_HOLDING_TYPE RIGHT_PINKY_CHORD_HOLDING_TYPE\n    #endif\n    #ifndef RIGHT_PINKY_INDEX_HOLDING_TIME\n    #define RIGHT_PINKY_INDEX_HOLDING_TIME RIGHT_PINKY_CHORD_HOLDING_TIME\n    #endif\n    #ifndef RIGHT_PINKY_INDEX_STREAK_DECAY\n    #define RIGHT_PINKY_INDEX_STREAK_DECAY RIGHT_PINKY_CHORD_STREAK_DECAY\n    #endif\n    #ifndef RIGHT_PINKY_INDEX_REPEAT_DECAY\n    #define RIGHT_PINKY_INDEX_REPEAT_DECAY RIGHT_PINKY_CHORD_REPEAT_DECAY\n    #endif\n    right_pinky_index: homey_right_pinky_index {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = RIGHT_PINKY_HOLDING_TYPE;\n        hold-trigger-key-positions = <LEFT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <RIGHT_PINKY_HOLDING_TIME>;\n        #ifdef ENABLE_KEY_REPEAT\n        quick-tap-ms = <RIGHT_PINKY_REPEAT_DECAY>;\n        #endif\n        require-prior-idle-ms = <RIGHT_PINKY_STREAK_DECAY>;\n        #binding-cells = <2>;\n        #ifdef ENFORCE_BILATERAL\n        bindings = <&kp>, <&right_pinky_tap>;\n        #else\n        bindings = <&kp>, <&kp>;\n        #endif\n    };\n    #define RightPinkyIndex right_pinky_index RIGHT_INDEX_MOD RIGHT_INDEX_KEY\n    #ifndef RIGHT_RING1_INDEX_HOLDING_TYPE\n    #define RIGHT_RING1_INDEX_HOLDING_TYPE RIGHT_RING1_CHORD_HOLDING_TYPE\n    #endif\n    #ifndef RIGHT_RING1_INDEX_HOLDING_TIME\n    #define RIGHT_RING1_INDEX_HOLDING_TIME RIGHT_RING1_CHORD_HOLDING_TIME\n    #endif\n    #ifndef RIGHT_RING1_INDEX_STREAK_DECAY\n    #define RIGHT_RING1_INDEX_STREAK_DECAY RIGHT_RING1_CHORD_STREAK_DECAY\n    #endif\n    #ifndef RIGHT_RING1_INDEX_REPEAT_DECAY\n    #define RIGHT_RING1_INDEX_REPEAT_DECAY RIGHT_RING1_CHORD_REPEAT_DECAY\n    #endif\n    right_ring1_index: homey_right_ring1_index {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = RIGHT_RING1_HOLDING_TYPE;\n        hold-trigger-key-positions = <LEFT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <RIGHT_RING1_HOLDING_TIME>;\n        #ifdef ENABLE_KEY_REPEAT\n        quick-tap-ms = <RIGHT_RING1_REPEAT_DECAY>;\n        #endif\n        require-prior-idle-ms = <RIGHT_RING1_STREAK_DECAY>;\n        #binding-cells = <2>;\n        #ifdef ENFORCE_BILATERAL\n        bindings = <&kp>, <&right_ring1_tap>;\n        #else\n        bindings = <&kp>, <&kp>;\n        #endif\n    };\n    #define RightRing1Index right_ring1_index RIGHT_INDEX_MOD RIGHT_INDEX_KEY\n    #ifndef RIGHT_RING2_INDEX_HOLDING_TYPE\n    #define RIGHT_RING2_INDEX_HOLDING_TYPE RIGHT_RING2_CHORD_HOLDING_TYPE\n    #endif\n    #ifndef RIGHT_RING2_INDEX_HOLDING_TIME\n    #define RIGHT_RING2_INDEX_HOLDING_TIME RIGHT_RING2_CHORD_HOLDING_TIME\n    #endif\n    #ifndef RIGHT_RING2_INDEX_STREAK_DECAY\n    #define RIGHT_RING2_INDEX_STREAK_DECAY RIGHT_RING2_CHORD_STREAK_DECAY\n    #endif\n    #ifndef RIGHT_RING2_INDEX_REPEAT_DECAY\n    #define RIGHT_RING2_INDEX_REPEAT_DECAY RIGHT_RING2_CHORD_REPEAT_DECAY\n    #endif\n    right_ring2_index: homey_right_ring2_index {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = RIGHT_RING2_HOLDING_TYPE;\n        hold-trigger-key-positions = <LEFT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <RIGHT_RING2_HOLDING_TIME>;\n        #ifdef ENABLE_KEY_REPEAT\n        quick-tap-ms = <RIGHT_RING2_REPEAT_DECAY>;\n        #endif\n        require-prior-idle-ms = <RIGHT_RING2_STREAK_DECAY>;\n        #binding-cells = <2>;\n        #ifdef ENFORCE_BILATERAL\n        bindings = <&kp>, <&right_ring2_tap>;\n        #else\n        bindings = <&kp>, <&kp>;\n        #endif\n    };\n    #define RightRing2Index right_ring2_index RIGHT_INDEX_MOD RIGHT_INDEX_KEY\n    #ifndef RIGHT_MIDDY_INDEX_HOLDING_TYPE\n    #define RIGHT_MIDDY_INDEX_HOLDING_TYPE RIGHT_MIDDY_CHORD_HOLDING_TYPE\n    #endif\n    #ifndef RIGHT_MIDDY_INDEX_HOLDING_TIME\n    #define RIGHT_MIDDY_INDEX_HOLDING_TIME RIGHT_MIDDY_CHORD_HOLDING_TIME\n    #endif\n    #ifndef RIGHT_MIDDY_INDEX_STREAK_DECAY\n    #define RIGHT_MIDDY_INDEX_STREAK_DECAY RIGHT_MIDDY_CHORD_STREAK_DECAY\n    #endif\n    #ifndef RIGHT_MIDDY_INDEX_REPEAT_DECAY\n    #define RIGHT_MIDDY_INDEX_REPEAT_DECAY RIGHT_MIDDY_CHORD_REPEAT_DECAY\n    #endif\n    right_middy_index: homey_right_middy_index {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = RIGHT_MIDDY_HOLDING_TYPE;\n        hold-trigger-key-positions = <LEFT_HAND_KEYS THUMB_KEYS>;\n        hold-trigger-on-release; // wait for other home row mods\n        tapping-term-ms = <RIGHT_MIDDY_HOLDING_TIME>;\n        #ifdef ENABLE_KEY_REPEAT\n        quick-tap-ms = <RIGHT_MIDDY_REPEAT_DECAY>;\n        #endif\n        require-prior-idle-ms = <RIGHT_MIDDY_STREAK_DECAY>;\n        #binding-cells = <2>;\n        #ifdef ENFORCE_BILATERAL\n        bindings = <&kp>, <&right_middy_tap>;\n        #else\n        bindings = <&kp>, <&kp>;\n        #endif\n    };\n    #define RightMiddyIndex right_middy_index RIGHT_INDEX_MOD RIGHT_INDEX_KEY\n\n    //\n    // Key repetition access keys on the index fingers\n    //\n    plain: plain_typing_layer {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = PLAIN_HOLDING_TYPE;\n        tapping-term-ms = <PLAIN_HOLDING_TIME>;\n        require-prior-idle-ms = <PLAIN_STREAK_DECAY>;\n        #binding-cells = <2>;\n        bindings = <&mo>, <&kp>;\n        retro-tap; // tap on standalone hold\n    };\n    plain_engram_COMMA: plain_typing_layer_engram_COMMA {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = PLAIN_HOLDING_TYPE;\n        tapping-term-ms = <PLAIN_HOLDING_TIME>;\n        require-prior-idle-ms = <PLAIN_STREAK_DECAY>;\n        #binding-cells = <2>;\n        bindings = <&mo>, <&engram_COMMA>;\n        retro-tap; // tap on standalone hold\n    };\n    plain_engram_DOT: plain_typing_layer_engram_DOT {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = PLAIN_HOLDING_TYPE;\n        tapping-term-ms = <PLAIN_HOLDING_TIME>;\n        require-prior-idle-ms = <PLAIN_STREAK_DECAY>;\n        #binding-cells = <2>;\n        bindings = <&mo>, <&engram_DOT>;\n        retro-tap; // tap on standalone hold\n    };\n\n    //\n    // Thumb cluster hold-tap keys for Miryoku layers\n    //\n    thumb: thumb_layer_access {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = THUMB_HOLDING_TYPE;\n        tapping-term-ms = <THUMB_HOLDING_TIME>;\n        #ifdef ENABLE_KEY_REPEAT\n        quick-tap-ms = <THUMB_REPEAT_DECAY>; // enable repeat\n        #endif\n        #binding-cells = <2>;\n        bindings = <&mo>, <&kp>;\n    };\n    thumb_parang_left: thumb_layer_access_parang_left {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = THUMB_HOLDING_TYPE;\n        tapping-term-ms = <THUMB_HOLDING_TIME>;\n        #ifdef ENABLE_KEY_REPEAT\n        quick-tap-ms = <THUMB_REPEAT_DECAY>; // enable repeat\n        #endif\n        #binding-cells = <2>;\n        bindings = <&mo>, <&parang_left>;\n    };\n    space: thumb_layer_access_spacebar {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = SPACE_HOLDING_TYPE;\n        tapping-term-ms = <SPACE_HOLDING_TIME>;\n        #ifdef ENABLE_KEY_REPEAT\n        quick-tap-ms = <SPACE_REPEAT_DECAY>; // enable repeat\n        #endif\n        #binding-cells = <2>;\n        bindings = <&mo>, <&kp>;\n    };\n\n    //////////////////////////////////////////////////////////////////////////\n    //\n    // Custom hold-taps\n    //\n    //////////////////////////////////////////////////////////////////////////\n\n    //\n    // CAPPY_HOLDING_TIME defines how long you need to hold (milliseconds)\n    // cappy to type CapsLock.  Shorter holds are taps that type CapsWord.\n    //\n    #ifndef CAPPY_HOLDING_TIME\n    #define CAPPY_HOLDING_TIME 200\n    #endif\n\n    //\n    // Tap = CapsWord; Hold = CapsLock\n    //\n    cappy: capsword_and_capslock {\n        compatible = \"zmk,behavior-hold-tap\";\n        flavor = \"tap-preferred\";\n        tapping-term-ms = <CAPPY_HOLDING_TIME>;\n        #binding-cells = <2>;\n        bindings = <&kp>, <&caps_word>;\n    };\n\n    //////////////////////////////////////////////////////////////////////////\n    //\n    // Custom shifted pairs\n    //\n    //////////////////////////////////////////////////////////////////////////\n\n    //\n    // Shift + LEFT_PARENTHESIS = LESS_THAN\n    //\n    parang_left: left_parenthesis_and_less_than {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&kp LPAR>, <&kp LT>;\n        mods = <(MOD_LSFT|MOD_RSFT)>;\n    };\n\n    //\n    // Shift + RIGHT_PARENTHESIS = GREATER_THAN\n    //\n    parang_right: right_parenthesis_and_greater_than {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&kp RPAR>, <&kp GT>;\n        mods = <(MOD_LSFT|MOD_RSFT)>;\n    };\n\n    //\n    // Custom shifted pairs for the Engram layout\n    // - https://engram.dev/\n    // - https://sunaku.github.io/engram-keyboard-layout.html\n    //\n    engram_N1: engram_shift_N1_PIPE {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&kp N1>, <&kp PIPE>;\n        mods = <(MOD_LSFT|MOD_RSFT)>;\n    };\n    engram_N2: engram_shift_N2_EQUAL {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&kp N2>, <&kp EQUAL>;\n        mods = <(MOD_LSFT|MOD_RSFT)>;\n    };\n    engram_N3: engram_shift_N3_TILDE {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&kp N3>, <&kp TILDE>;\n        mods = <(MOD_LSFT|MOD_RSFT)>;\n    };\n    engram_N4: engram_shift_N4_PLUS {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&kp N4>, <&kp PLUS>;\n        mods = <(MOD_LSFT|MOD_RSFT)>;\n    };\n    engram_N5: engram_shift_N5_LT {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&kp N5>, <&kp LT>;\n        mods = <(MOD_LSFT|MOD_RSFT)>;\n    };\n    engram_N6: engram_shift_N6_GT {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&kp N6>, <&kp GT>;\n        mods = <(MOD_LSFT|MOD_RSFT)>;\n    };\n    engram_N7: engram_shift_N7_CARET {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&kp N7>, <&kp CARET>;\n        mods = <(MOD_LSFT|MOD_RSFT)>;\n    };\n    engram_N8: engram_shift_N8_AMPS {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&kp N8>, <&kp AMPS>;\n        mods = <(MOD_LSFT|MOD_RSFT)>;\n    };\n    engram_N9: engram_shift_N9_PRCNT {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&kp N9>, <&kp PRCNT>;\n        mods = <(MOD_LSFT|MOD_RSFT)>;\n    };\n    engram_N0: engram_shift_N0_STAR {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&kp N0>, <&kp STAR>;\n        mods = <(MOD_LSFT|MOD_RSFT)>;\n    };\n    engram_SQT: engram_shift_SQT_LPAR {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&kp SQT>, <&kp LPAR>;\n        mods = <(MOD_LSFT|MOD_RSFT)>;\n    };\n    engram_DQT: engram_shift_DQT_RPAR {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&kp DQT>, <&kp RPAR>;\n        mods = <(MOD_LSFT|MOD_RSFT)>;\n    };\n    engram_COMMA: engram_shift_COMMA_SEMI {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&kp COMMA>, <&kp SEMI>;\n        mods = <(MOD_LSFT|MOD_RSFT)>;\n    };\n    engram_DOT: engram_shift_DOT_COLON {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&kp DOT>, <&kp COLON>;\n        mods = <(MOD_LSFT|MOD_RSFT)>;\n    };\n    engram_QMARK: engram_shift_QMARK_EXCL {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&kp QMARK>, <&kp EXCL>;\n        mods = <(MOD_LSFT|MOD_RSFT)>;\n    };\n    engram_HASH: engram_shift_HASH_DLLR {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&kp HASH>, <&kp DLLR>;\n        mods = <(MOD_LSFT|MOD_RSFT)>;\n    };\n    engram_AT: engram_shift_AT_GRAVE {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&kp AT>, <&kp GRAVE>;\n        mods = <(MOD_LSFT|MOD_RSFT)>;\n    };\n    engram_FSLH: engram_shift_FSLH_BSLH {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&kp FSLH>, <&kp BSLH>;\n        mods = <(MOD_LSFT|MOD_RSFT)>;\n    };\n\n    //////////////////////////////////////////////////////////////////////////\n    //\n    // ZMK global overrides\n    //\n    //////////////////////////////////////////////////////////////////////////\n\n    //\n    // CapsWord - ported from Pascal Getreuer's extension for QMK\n    // - https://zmk.dev/docs/behaviors/caps-word\n    // - https://getreuer.info/posts/keyboards/caps-word/index.html\n    //\n    behavior_caps_word {\n        continue-list = <\n            UNDERSCORE MINUS\n            BACKSPACE DELETE\n            N1 N2 N3 N4 N5 N6 N7 N8 N9 N0\n        >;\n    };\n\n};\n\nmacros {\n\n    //\n    // Linux Magic System Request Key - hold this down and type REISUB\n    // - https://www.kernel.org/doc/html/latest/admin-guide/sysrq.html\n    // - https://github.com/manna-harbour/miryoku/discussions/259\n    //\n    ZMK_MACRO(linux_magic_sysrq,\n        wait-ms = <0>;\n        tap-ms = <0>;\n        bindings\n            = <&macro_press &mo 0 &kp RALT>\n            , <&macro_tap &kp PRINTSCREEN>\n            , <&macro_pause_for_release>\n            , <&macro_release &mo 0 &kp RALT>\n            ;\n    )\n\n    //\n    // Mod+Tab application switcher - hold this down to keep menu open\n    //\n    mod_tab: mod_tab_switcher {\n        compatible = \"zmk,behavior-macro-one-param\";\n        wait-ms = <0>;\n        tap-ms = <0>;\n        #binding-cells = <1>;\n        bindings\n            = <&macro_param_1to1>\n            , <&macro_press &kp MACRO_PLACEHOLDER>\n            , <&macro_tap &kp TAB>\n            , <&macro_pause_for_release>\n            , <&macro_param_1to1>\n            , <&macro_release &kp MACRO_PLACEHOLDER>\n            ;\n    };\n\n    //////////////////////////////////////////////////////////////////////////\n    //\n    // Approximation of Pascal Getreuer's Select Word macro from QMK\n    // - https://getreuer.info/posts/keyboards/select-word/index.html\n    //\n    //////////////////////////////////////////////////////////////////////////\n\n    //\n    // SELECT_WORD_DELAY defines how long the macro waits (milliseconds)\n    // after moving the cursor before it selects a word.  A larger delay\n    // may allow the macro to move to the next word upon each invocation.\n    //\n    #ifndef SELECT_WORD_DELAY\n    #define SELECT_WORD_DELAY 1\n    #endif\n\n    ZMK_MACRO(select_none,\n        wait-ms = <SELECT_WORD_DELAY>;\n        tap-ms = <SELECT_WORD_DELAY>;\n        bindings = <&kp DOWN &kp UP &kp RIGHT &kp LEFT>;\n    )\n\n    //\n    // select a word (jumps to next word upon each successive invocation)\n    //\n    select_word: select_word {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&select_word_right>, <&select_word_left>;\n        mods = <(MOD_LSFT|MOD_RSFT)>;\n    };\n    ZMK_MACRO(select_word_right,\n        wait-ms = <SELECT_WORD_DELAY>;\n        tap-ms = <SELECT_WORD_DELAY>;\n        bindings = <&kp _W(RIGHT) &kp _W(LEFT) &kp _W(LS(RIGHT))>;\n    )\n    ZMK_MACRO(select_word_left,\n        wait-ms = <SELECT_WORD_DELAY>;\n        tap-ms = <SELECT_WORD_DELAY>;\n        bindings = <&kp _W(LEFT) &kp _W(RIGHT) &kp _W(LS(LEFT))>;\n    )\n\n    //\n    // extend current selection by one word\n    //\n    extend_word: extend_word {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&extend_word_right>, <&extend_word_left>;\n        mods = <(MOD_LSFT|MOD_RSFT)>;\n    };\n    ZMK_MACRO(extend_word_right,\n        wait-ms = <SELECT_WORD_DELAY>;\n        tap-ms = <SELECT_WORD_DELAY>;\n        bindings = <&kp _W(LS(RIGHT))>;\n    )\n    ZMK_MACRO(extend_word_left,\n        wait-ms = <SELECT_WORD_DELAY>;\n        tap-ms = <SELECT_WORD_DELAY>;\n        bindings = <&kp _W(LS(LEFT))>;\n    )\n\n    //\n    // select current line\n    //\n    select_line: select_line {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&select_line_right>, <&select_line_left>;\n        mods = <(MOD_LSFT|MOD_RSFT)>;\n    };\n    ZMK_MACRO(select_line_right,\n        wait-ms = <SELECT_WORD_DELAY>;\n        tap-ms = <SELECT_WORD_DELAY>;\n        bindings = <&kp _HOME &kp LS(_END)>;\n    )\n    ZMK_MACRO(select_line_left,\n        wait-ms = <SELECT_WORD_DELAY>;\n        tap-ms = <SELECT_WORD_DELAY>;\n        bindings = <&kp _END &kp LS(_HOME)>;\n    )\n\n    //\n    // extend current selection by one line\n    //\n    extend_line: extend_line {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&extend_line_right>, <&extend_line_left>;\n        mods = <(MOD_LSFT|MOD_RSFT)>;\n    };\n    ZMK_MACRO(extend_line_right,\n        wait-ms = <SELECT_WORD_DELAY>;\n        tap-ms = <SELECT_WORD_DELAY>;\n        bindings = <&kp LS(DOWN) &kp LS(_END)>;\n    )\n    ZMK_MACRO(extend_line_left,\n        wait-ms = <SELECT_WORD_DELAY>;\n        tap-ms = <SELECT_WORD_DELAY>;\n        bindings = <&kp LS(UP) &kp LS(_HOME)>;\n    )\n\n    //////////////////////////////////////////////////////////////////////////\n    //\n    // World layer - international characters\n    //\n    //////////////////////////////////////////////////////////////////////////\n\n    //\n    // UNICODE_TARGET_OS defines which operating system you're targeting\n    // for the UNICODE() preprocessor macro to be used on, since each OS\n    // has different shortcuts for typing Unicode characters as hexcodes.\n    //\n    // NOTE: You may need to enable Unicode hexadecimal input in your OS:\n    // - https://ladedu.com/how-to-enter-unicode-characters-on-a-mac/\n    // - https://help.ubuntu.com/stable/ubuntu-help/tips-specialchars.html.en#ctrlshiftu\n    //\n    // Specifically, Windows users should be running the WinCompose tool,\n    // which lets you type Unicode characters via hexadecimal codepoints:\n    // - https://github.com/samhocevar/wincompose\n    //\n    #ifndef UNICODE_TARGET_OS\n    #define UNICODE_TARGET_OS OPERATING_SYSTEM\n    #endif\n\n    //\n    // UNICODE_TAP_DELAY defines how long the macro waits (milliseconds)\n    // between keystrokes while inputting the Unicode codepoint shortcut.\n    //\n    #ifndef UNICODE_TAP_DELAY\n    #define UNICODE_TAP_DELAY 1\n    #endif\n\n    //\n    // UNICODE_SEQ_DELAY defines how long the macro waits (milliseconds)\n    // between emitting Unicode codepoints in multi-codepoint characters.\n    //\n    #ifndef UNICODE_SEQ_DELAY\n    #define UNICODE_SEQ_DELAY 10\n    #endif\n\n    #define UNICODE(name, ...) \\\n        ZMK_MACRO(name, \\\n            wait-ms = <UNICODE_TAP_DELAY>; \\\n            tap-ms = <UNICODE_TAP_DELAY>; \\\n            bindings = __VA_ARGS__; \\\n        )\n\n    //\n    // UNICODE_SEQ_LINUX() specifies how Unicode hexadecimal codepoint\n    // keystrokes are transformed into Unicode characters under Linux.\n    //\n    #ifndef UNICODE_SEQ_LINUX\n    #define UNICODE_SEQ_LINUX(keystrokes) \\\n        <&macro_tap &kp LC(LS(U)) keystrokes &kp ENTER>\n    #endif\n\n    //\n    // UNICODE_SEQ_MACOS() specifies how Unicode hexadecimal codepoint\n    // keystrokes are transformed into Unicode characters under macOS.\n    //\n    #ifndef UNICODE_SEQ_MACOS\n    #define UNICODE_SEQ_MACOS(keystrokes) \\\n        <&macro_press &kp LALT> ,\\\n        <&macro_tap keystrokes> ,\\\n        <&macro_release &kp LALT>\n    #endif\n\n    //\n    // UNICODE_SEQ_WINDOWS() specifies how Unicode hexadecimal codepoint\n    // keystrokes are transformed into Unicode characters under Windows.\n    //\n    // If you've configured WinCompose to use a different trigger hotkey,\n    // such as F13 instead of the default RA(U) shortcut, simply override\n    // this definition to adapt all UNICODE() function calls accordingly.\n    //\n    #ifndef UNICODE_SEQ_WINDOWS\n    #define UNICODE_SEQ_WINDOWS(keystrokes) \\\n        <&macro_tap &kp RA(U) keystrokes &kp ENTER>\n    #endif\n\n    //\n    // COMPOSE_KEY_LINUX specifies the keycode for Compose key in Linux,\n    // which may be RALT by default but can be reconfigured as follows:\n    //\n    // $ setxkbmap -option compose:sclk # use ScrollLock as Compose key\n    //\n    // See xkeyboard-config(7) for possible choices for the Compose key:\n    // https://manpages.debian.org/stable/xkb-data/xkeyboard-config.7.en.html#Position_of_Compose_key\n    //\n    #ifndef COMPOSE_KEY_LINUX\n    #define COMPOSE_KEY_LINUX RALT\n    #endif\n\n    //\n    // COMPOSE_SEQ_LINUX() prefixes keystrokes with the Linux Compose key.\n    //\n    #ifndef COMPOSE_SEQ_LINUX\n    #define COMPOSE_SEQ_LINUX(keystrokes) \\\n        <&macro_tap &kp COMPOSE_KEY_LINUX keystrokes>\n    #endif\n\n    //\n    // COMPOSE_SEQ_MACOS() formats keystrokes for macOS character entry.\n    //\n    #ifndef COMPOSE_SEQ_MACOS\n    #define COMPOSE_SEQ_MACOS(keystrokes) \\\n        <&macro_tap keystrokes>\n    #endif\n\n    //\n    // COMPOSE_SEQ_WINDOWS() wraps keystrokes in Windows AltCode sequence.\n    //\n    #ifndef COMPOSE_SEQ_WINDOWS\n    #define COMPOSE_SEQ_WINDOWS(keystrokes) \\\n        <&macro_press &kp LALT>, \\\n        <&macro_tap keystrokes>, \\\n        <&macro_release &kp LALT>\n    #endif\n\n    //\n    // NOTE: edit the world.yaml file and run `rake` to generate this:\n    //\n\n    //\n    // codepoints\n    //\n    UNICODE(world_degree_sign, /* ¬∞ */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp B &kp N0)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N0 &kp N0 &kp B &kp N0)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp B &kp N0)\n      #endif\n    )\n    UNICODE(world_section_sign, /* ¬ß */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp A &kp N7)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N0 &kp N0 &kp A &kp N7)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp A &kp N7)\n      #endif\n    )\n    UNICODE(world_paragraph_sign, /* ¬∂ */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp B &kp N6)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N0 &kp N0 &kp B &kp N6)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp B &kp N6)\n      #endif\n    )\n    UNICODE(world_o_ordinal, /* ¬∫ */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp B &kp A)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N0 &kp N0 &kp B &kp A)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp B &kp A)\n      #endif\n    )\n    UNICODE(world_a_ordinal, /* ¬™ */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp A &kp A)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N0 &kp N0 &kp A &kp A)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp A &kp A)\n      #endif\n    )\n    UNICODE(world_exclaim_left, /* ¬° */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp A &kp N1)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N0 &kp N0 &kp A &kp N1)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp A &kp N1)\n      #endif\n    )\n    UNICODE(world_question_left, /* ¬ø */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp B &kp F)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N0 &kp N0 &kp B &kp F)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp B &kp F)\n      #endif\n    )\n    UNICODE(world_currency_crypto, /* ‚Çø */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp N2 &kp N0 &kp B &kp F)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N2 &kp N0 &kp B &kp F)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp N2 &kp N0 &kp B &kp F)\n      #endif\n    )\n    UNICODE(world_currency_cent, /* ¬¢ */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp A &kp N2)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N0 &kp N0 &kp A &kp N2)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp A &kp N2)\n      #endif\n    )\n    UNICODE(world_currency_sign, /* ¬§ */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp A &kp N4)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N0 &kp N0 &kp A &kp N4)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp A &kp N4)\n      #endif\n    )\n\n    //\n    // characters\n    //\n    UNICODE(world_c_cedilla_lower, /* √ß */\n      #if UNICODE_TARGET_OS == 1\n        COMPOSE_SEQ_LINUX(&kp COMMA &kp C)\n      #elif UNICODE_TARGET_OS == 2\n        COMPOSE_SEQ_MACOS(&kp LA(C))\n      #elif UNICODE_TARGET_OS == 3\n        COMPOSE_SEQ_WINDOWS(&kp KP_N0 &kp KP_N2 &kp KP_N3 &kp KP_N1)\n      #endif\n    )\n    UNICODE(world_c_cedilla_upper, /* √á */\n      #if UNICODE_TARGET_OS == 1\n        COMPOSE_SEQ_LINUX(&kp COMMA &kp LS(C))\n      #elif UNICODE_TARGET_OS == 2\n        COMPOSE_SEQ_MACOS(&kp LA(LS(C)))\n      #elif UNICODE_TARGET_OS == 3\n        COMPOSE_SEQ_WINDOWS(&kp KP_N0 &kp KP_N1 &kp KP_N9 &kp KP_N9)\n      #endif\n    )\n    world_c_cedilla: world_c_cedilla {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_c_cedilla_lower>, <&world_c_cedilla_upper>;\n        mods = <MOD_LSFT>;\n    };\n    UNICODE(world_i_acute_lower, /* √≠ */\n      #if UNICODE_TARGET_OS == 1\n        COMPOSE_SEQ_LINUX(&kp SQT &kp I)\n      #elif UNICODE_TARGET_OS == 2\n        COMPOSE_SEQ_MACOS(&kp LA(E) &kp I)\n      #elif UNICODE_TARGET_OS == 3\n        COMPOSE_SEQ_WINDOWS(&kp KP_N0 &kp KP_N2 &kp KP_N3 &kp KP_N7)\n      #endif\n    )\n    UNICODE(world_i_acute_upper, /* √ç */\n      #if UNICODE_TARGET_OS == 1\n        COMPOSE_SEQ_LINUX(&kp SQT &kp LS(I))\n      #elif UNICODE_TARGET_OS == 2\n        COMPOSE_SEQ_MACOS(&kp LA(E) &kp LS(I))\n      #elif UNICODE_TARGET_OS == 3\n        COMPOSE_SEQ_WINDOWS(&kp KP_N0 &kp KP_N2 &kp KP_N0 &kp KP_N5)\n      #endif\n    )\n    world_i_acute: world_i_acute {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_i_acute_lower>, <&world_i_acute_upper>;\n        mods = <MOD_LSFT>;\n    };\n    UNICODE(world_i_diaeresis_lower, /* √Ø */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp E &kp F)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N0 &kp N0 &kp E &kp F)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp E &kp F)\n      #endif\n    )\n    UNICODE(world_i_diaeresis_upper, /* √è */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp C &kp F)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N0 &kp N0 &kp C &kp F)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp C &kp F)\n      #endif\n    )\n    world_i_diaeresis: world_i_diaeresis {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_i_diaeresis_lower>, <&world_i_diaeresis_upper>;\n        mods = <MOD_LSFT>;\n    };\n    UNICODE(world_i_circumflex_lower, /* √Æ */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp E &kp E)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N0 &kp N0 &kp E &kp E)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp E &kp E)\n      #endif\n    )\n    UNICODE(world_i_circumflex_upper, /* √é */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp C &kp E)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N0 &kp N0 &kp C &kp E)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp C &kp E)\n      #endif\n    )\n    world_i_circumflex: world_i_circumflex {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_i_circumflex_lower>, <&world_i_circumflex_upper>;\n        mods = <MOD_LSFT>;\n    };\n    UNICODE(world_i_grave_lower, /* √¨ */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp E &kp C)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N0 &kp N0 &kp E &kp C)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp E &kp C)\n      #endif\n    )\n    UNICODE(world_i_grave_upper, /* √å */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp C &kp C)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N0 &kp N0 &kp C &kp C)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp C &kp C)\n      #endif\n    )\n    world_i_grave: world_i_grave {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_i_grave_lower>, <&world_i_grave_upper>;\n        mods = <MOD_LSFT>;\n    };\n    UNICODE(world_e_acute_lower, /* √© */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp E &kp N9)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N0 &kp N0 &kp E &kp N9)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp E &kp N9)\n      #endif\n    )\n    UNICODE(world_e_acute_upper, /* √â */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp C &kp N9)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N0 &kp N0 &kp C &kp N9)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp C &kp N9)\n      #endif\n    )\n    world_e_acute: world_e_acute {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_e_acute_lower>, <&world_e_acute_upper>;\n        mods = <MOD_LSFT>;\n    };\n    UNICODE(world_e_diaeresis_lower, /* √´ */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp E &kp B)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N0 &kp N0 &kp E &kp B)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp E &kp B)\n      #endif\n    )\n    UNICODE(world_e_diaeresis_upper, /* √ã */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp C &kp B)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N0 &kp N0 &kp C &kp B)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp C &kp B)\n      #endif\n    )\n    world_e_diaeresis: world_e_diaeresis {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_e_diaeresis_lower>, <&world_e_diaeresis_upper>;\n        mods = <MOD_LSFT>;\n    };\n    UNICODE(world_e_circumflex_lower, /* √™ */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp E &kp A)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N0 &kp N0 &kp E &kp A)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp E &kp A)\n      #endif\n    )\n    UNICODE(world_e_circumflex_upper, /* √ä */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp C &kp A)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N0 &kp N0 &kp C &kp A)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp C &kp A)\n      #endif\n    )\n    world_e_circumflex: world_e_circumflex {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_e_circumflex_lower>, <&world_e_circumflex_upper>;\n        mods = <MOD_LSFT>;\n    };\n    UNICODE(world_e_grave_lower, /* √® */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp E &kp N8)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N0 &kp N0 &kp E &kp N8)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp E &kp N8)\n      #endif\n    )\n    UNICODE(world_e_grave_upper, /* √à */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp C &kp N8)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N0 &kp N0 &kp C &kp N8)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp C &kp N8)\n      #endif\n    )\n    world_e_grave: world_e_grave {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_e_grave_lower>, <&world_e_grave_upper>;\n        mods = <MOD_LSFT>;\n    };\n    UNICODE(world_e_ae_lower, /* √¶ */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp E &kp N6)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N0 &kp N0 &kp E &kp N6)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp E &kp N6)\n      #endif\n    )\n    UNICODE(world_e_ae_upper, /* √Ü */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp C &kp N6)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N0 &kp N0 &kp C &kp N6)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp C &kp N6)\n      #endif\n    )\n    world_e_ae: world_e_ae {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_e_ae_lower>, <&world_e_ae_upper>;\n        mods = <MOD_LSFT>;\n    };\n    UNICODE(world_a_acute_lower, /* √° */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp E &kp N1)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N0 &kp N0 &kp E &kp N1)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp E &kp N1)\n      #endif\n    )\n    UNICODE(world_a_acute_upper, /* √Å */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp C &kp N1)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N0 &kp N0 &kp C &kp N1)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp C &kp N1)\n      #endif\n    )\n    world_a_acute: world_a_acute {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_a_acute_lower>, <&world_a_acute_upper>;\n        mods = <MOD_LSFT>;\n    };\n    UNICODE(world_a_diaeresis_lower, /* √§ */\n      #if UNICODE_TARGET_OS == 1\n        COMPOSE_SEQ_LINUX(&kp DQT &kp A)\n      #elif UNICODE_TARGET_OS == 2\n        COMPOSE_SEQ_MACOS(&kp LA(U) &kp A)\n      #elif UNICODE_TARGET_OS == 3\n        COMPOSE_SEQ_WINDOWS(&kp KP_N0 &kp KP_N2 &kp KP_N2 &kp KP_N8)\n      #endif\n    )\n    UNICODE(world_a_diaeresis_upper, /* √Ñ */\n      #if UNICODE_TARGET_OS == 1\n        COMPOSE_SEQ_LINUX(&kp DQT &kp LS(A))\n      #elif UNICODE_TARGET_OS == 2\n        COMPOSE_SEQ_MACOS(&kp LA(U) &kp LS(A))\n      #elif UNICODE_TARGET_OS == 3\n        COMPOSE_SEQ_WINDOWS(&kp KP_N0 &kp KP_N1 &kp KP_N9 &kp KP_N6)\n      #endif\n    )\n    world_a_diaeresis: world_a_diaeresis {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_a_diaeresis_lower>, <&world_a_diaeresis_upper>;\n        mods = <MOD_LSFT>;\n    };\n    UNICODE(world_a_circumflex_lower, /* √¢ */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp E &kp N2)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N0 &kp N0 &kp E &kp N2)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp E &kp N2)\n      #endif\n    )\n    UNICODE(world_a_circumflex_upper, /* √Ç */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp C &kp N2)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N0 &kp N0 &kp C &kp N2)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp C &kp N2)\n      #endif\n    )\n    world_a_circumflex: world_a_circumflex {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_a_circumflex_lower>, <&world_a_circumflex_upper>;\n        mods = <MOD_LSFT>;\n    };\n    UNICODE(world_a_grave_lower, /* √† */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp E &kp N0)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N0 &kp N0 &kp E &kp N0)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp E &kp N0)\n      #endif\n    )\n    UNICODE(world_a_grave_upper, /* √Ä */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp C &kp N0)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N0 &kp N0 &kp C &kp N0)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp C &kp N0)\n      #endif\n    )\n    world_a_grave: world_a_grave {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_a_grave_lower>, <&world_a_grave_upper>;\n        mods = <MOD_LSFT>;\n    };\n    UNICODE(world_a_tilde_lower, /* √£ */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp E &kp N3)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N0 &kp N0 &kp E &kp N3)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp E &kp N3)\n      #endif\n    )\n    UNICODE(world_a_tilde_upper, /* √É */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp C &kp N3)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N0 &kp N0 &kp C &kp N3)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp C &kp N3)\n      #endif\n    )\n    world_a_tilde: world_a_tilde {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_a_tilde_lower>, <&world_a_tilde_upper>;\n        mods = <MOD_LSFT>;\n    };\n    UNICODE(world_a_ring_lower, /* √• */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp E &kp N5)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N0 &kp N0 &kp E &kp N5)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp E &kp N5)\n      #endif\n    )\n    UNICODE(world_a_ring_upper, /* √Ö */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp C &kp N5)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N0 &kp N0 &kp C &kp N5)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp C &kp N5)\n      #endif\n    )\n    world_a_ring: world_a_ring {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_a_ring_lower>, <&world_a_ring_upper>;\n        mods = <MOD_LSFT>;\n    };\n    UNICODE(world_y_acute_lower, /* √Ω */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp F &kp D)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N0 &kp N0 &kp F &kp D)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp F &kp D)\n      #endif\n    )\n    UNICODE(world_y_acute_upper, /* √ù */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp D &kp D)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N0 &kp N0 &kp D &kp D)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp D &kp D)\n      #endif\n    )\n    world_y_acute: world_y_acute {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_y_acute_lower>, <&world_y_acute_upper>;\n        mods = <MOD_LSFT>;\n    };\n    UNICODE(world_y_diaeresis_lower, /* √ø */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp F &kp F)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N0 &kp N0 &kp F &kp F)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp F &kp F)\n      #endif\n    )\n    UNICODE(world_y_diaeresis_upper, /* ≈∏ */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp N1 &kp N7 &kp N8)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N0 &kp N1 &kp N7 &kp N8)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp N7 &kp N8)\n      #endif\n    )\n    world_y_diaeresis: world_y_diaeresis {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_y_diaeresis_lower>, <&world_y_diaeresis_upper>;\n        mods = <MOD_LSFT>;\n    };\n    UNICODE(world_o_acute_lower, /* √≥ */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp F &kp N3)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N0 &kp N0 &kp F &kp N3)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp F &kp N3)\n      #endif\n    )\n    UNICODE(world_o_acute_upper, /* √ì */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp D &kp N3)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N0 &kp N0 &kp D &kp N3)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp D &kp N3)\n      #endif\n    )\n    world_o_acute: world_o_acute {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_o_acute_lower>, <&world_o_acute_upper>;\n        mods = <MOD_LSFT>;\n    };\n    UNICODE(world_o_diaeresis_lower, /* √∂ */\n      #if UNICODE_TARGET_OS == 1\n        COMPOSE_SEQ_LINUX(&kp DQT &kp O)\n      #elif UNICODE_TARGET_OS == 2\n        COMPOSE_SEQ_MACOS(&kp LA(U) &kp O)\n      #elif UNICODE_TARGET_OS == 3\n        COMPOSE_SEQ_WINDOWS(&kp KP_N0 &kp KP_N2 &kp KP_N4 &kp KP_N6)\n      #endif\n    )\n    UNICODE(world_o_diaeresis_upper, /* √ñ */\n      #if UNICODE_TARGET_OS == 1\n        COMPOSE_SEQ_LINUX(&kp DQT &kp LS(O))\n      #elif UNICODE_TARGET_OS == 2\n        COMPOSE_SEQ_MACOS(&kp LA(U) &kp LS(O))\n      #elif UNICODE_TARGET_OS == 3\n        COMPOSE_SEQ_WINDOWS(&kp KP_N0 &kp KP_N2 &kp KP_N1 &kp KP_N4)\n      #endif\n    )\n    world_o_diaeresis: world_o_diaeresis {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_o_diaeresis_lower>, <&world_o_diaeresis_upper>;\n        mods = <MOD_LSFT>;\n    };\n    UNICODE(world_o_circumflex_lower, /* √¥ */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp F &kp N4)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N0 &kp N0 &kp F &kp N4)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp F &kp N4)\n      #endif\n    )\n    UNICODE(world_o_circumflex_upper, /* √î */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp D &kp N4)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N0 &kp N0 &kp D &kp N4)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp D &kp N4)\n      #endif\n    )\n    world_o_circumflex: world_o_circumflex {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_o_circumflex_lower>, <&world_o_circumflex_upper>;\n        mods = <MOD_LSFT>;\n    };\n    UNICODE(world_o_grave_lower, /* √≤ */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp F &kp N2)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N0 &kp N0 &kp F &kp N2)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp F &kp N2)\n      #endif\n    )\n    UNICODE(world_o_grave_upper, /* √í */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp D &kp N2)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N0 &kp N0 &kp D &kp N2)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp D &kp N2)\n      #endif\n    )\n    world_o_grave: world_o_grave {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_o_grave_lower>, <&world_o_grave_upper>;\n        mods = <MOD_LSFT>;\n    };\n    UNICODE(world_o_tilde_lower, /* √µ */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp F &kp N5)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N0 &kp N0 &kp F &kp N5)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp F &kp N5)\n      #endif\n    )\n    UNICODE(world_o_tilde_upper, /* √ï */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp D &kp N5)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N0 &kp N0 &kp D &kp N5)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp D &kp N5)\n      #endif\n    )\n    world_o_tilde: world_o_tilde {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_o_tilde_lower>, <&world_o_tilde_upper>;\n        mods = <MOD_LSFT>;\n    };\n    UNICODE(world_o_slash_lower, /* √∏ */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp F &kp N8)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N0 &kp N0 &kp F &kp N8)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp F &kp N8)\n      #endif\n    )\n    UNICODE(world_o_slash_upper, /* √ò */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp D &kp N8)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N0 &kp N0 &kp D &kp N8)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp D &kp N8)\n      #endif\n    )\n    world_o_slash: world_o_slash {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_o_slash_lower>, <&world_o_slash_upper>;\n        mods = <MOD_LSFT>;\n    };\n    UNICODE(world_u_acute_lower, /* √∫ */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp F &kp A)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N0 &kp N0 &kp F &kp A)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp F &kp A)\n      #endif\n    )\n    UNICODE(world_u_acute_upper, /* √ö */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp D &kp A)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N0 &kp N0 &kp D &kp A)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp D &kp A)\n      #endif\n    )\n    world_u_acute: world_u_acute {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_u_acute_lower>, <&world_u_acute_upper>;\n        mods = <MOD_LSFT>;\n    };\n    UNICODE(world_u_diaeresis_lower, /* √º */\n      #if UNICODE_TARGET_OS == 1\n        COMPOSE_SEQ_LINUX(&kp DQT &kp U)\n      #elif UNICODE_TARGET_OS == 2\n        COMPOSE_SEQ_MACOS(&kp LA(U) &kp U)\n      #elif UNICODE_TARGET_OS == 3\n        COMPOSE_SEQ_WINDOWS(&kp KP_N0 &kp KP_N2 &kp KP_N5 &kp KP_N2)\n      #endif\n    )\n    UNICODE(world_u_diaeresis_upper, /* √ú */\n      #if UNICODE_TARGET_OS == 1\n        COMPOSE_SEQ_LINUX(&kp DQT &kp LS(U))\n      #elif UNICODE_TARGET_OS == 2\n        COMPOSE_SEQ_MACOS(&kp LA(U) &kp LS(U))\n      #elif UNICODE_TARGET_OS == 3\n        COMPOSE_SEQ_WINDOWS(&kp KP_N0 &kp KP_N2 &kp KP_N2 &kp KP_N0)\n      #endif\n    )\n    world_u_diaeresis: world_u_diaeresis {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_u_diaeresis_lower>, <&world_u_diaeresis_upper>;\n        mods = <MOD_LSFT>;\n    };\n    UNICODE(world_u_circumflex_lower, /* √ª */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp F &kp B)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N0 &kp N0 &kp F &kp B)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp F &kp B)\n      #endif\n    )\n    UNICODE(world_u_circumflex_upper, /* √õ */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp D &kp B)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N0 &kp N0 &kp D &kp B)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp D &kp B)\n      #endif\n    )\n    world_u_circumflex: world_u_circumflex {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_u_circumflex_lower>, <&world_u_circumflex_upper>;\n        mods = <MOD_LSFT>;\n    };\n    UNICODE(world_u_grave_lower, /* √π */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp F &kp N9)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N0 &kp N0 &kp F &kp N9)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp F &kp N9)\n      #endif\n    )\n    UNICODE(world_u_grave_upper, /* √ô */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp D &kp N9)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N0 &kp N0 &kp D &kp N9)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp D &kp N9)\n      #endif\n    )\n    world_u_grave: world_u_grave {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_u_grave_lower>, <&world_u_grave_upper>;\n        mods = <MOD_LSFT>;\n    };\n    UNICODE(world_n_tilde_lower, /* √± */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp F &kp N1)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N0 &kp N0 &kp F &kp N1)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp F &kp N1)\n      #endif\n    )\n    UNICODE(world_n_tilde_upper, /* √ë */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp D &kp N1)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N0 &kp N0 &kp D &kp N1)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp D &kp N1)\n      #endif\n    )\n    world_n_tilde: world_n_tilde {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_n_tilde_lower>, <&world_n_tilde_upper>;\n        mods = <MOD_LSFT>;\n    };\n    UNICODE(world_quotes_left_angle_lower, /* ‚Äπ */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp N2 &kp N0 &kp N3 &kp N9)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N2 &kp N0 &kp N3 &kp N9)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp N2 &kp N0 &kp N3 &kp N9)\n      #endif\n    )\n    UNICODE(world_quotes_left_angle_upper, /* ¬´ */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp A &kp B)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N0 &kp N0 &kp A &kp B)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp A &kp B)\n      #endif\n    )\n    world_quotes_left_angle: world_quotes_left_angle {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_quotes_left_angle_lower>, <&world_quotes_left_angle_upper>;\n        mods = <MOD_LSFT>;\n    };\n    UNICODE(world_quotes_left_curly_lower, /* ‚Äò */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp N2 &kp N0 &kp N1 &kp N8)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N2 &kp N0 &kp N1 &kp N8)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp N2 &kp N0 &kp N1 &kp N8)\n      #endif\n    )\n    UNICODE(world_quotes_left_curly_upper, /* ‚Äú */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp N2 &kp N0 &kp N1 &kp C)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N2 &kp N0 &kp N1 &kp C)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp N2 &kp N0 &kp N1 &kp C)\n      #endif\n    )\n    world_quotes_left_curly: world_quotes_left_curly {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_quotes_left_curly_lower>, <&world_quotes_left_curly_upper>;\n        mods = <MOD_LSFT>;\n    };\n    UNICODE(world_quotes_left_low_lower, /* ‚Äö */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp N2 &kp N0 &kp N1 &kp A)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N2 &kp N0 &kp N1 &kp A)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp N2 &kp N0 &kp N1 &kp A)\n      #endif\n    )\n    UNICODE(world_quotes_left_low_upper, /* ‚Äû */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp N2 &kp N0 &kp N1 &kp E)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N2 &kp N0 &kp N1 &kp E)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp N2 &kp N0 &kp N1 &kp E)\n      #endif\n    )\n    world_quotes_left_low: world_quotes_left_low {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_quotes_left_low_lower>, <&world_quotes_left_low_upper>;\n        mods = <MOD_LSFT>;\n    };\n    UNICODE(world_quotes_left_corner1_lower, /* „Äå */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp N3 &kp N0 &kp N0 &kp C)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N3 &kp N0 &kp N0 &kp C)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp N3 &kp N0 &kp N0 &kp C)\n      #endif\n    )\n    UNICODE(world_quotes_left_corner1_upper, /* ÔπÅ */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp F &kp E &kp N4 &kp N1)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp F &kp E &kp N4 &kp N1)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp F &kp E &kp N4 &kp N1)\n      #endif\n    )\n    world_quotes_left_corner1: world_quotes_left_corner1 {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_quotes_left_corner1_lower>, <&world_quotes_left_corner1_upper>;\n        mods = <MOD_LSFT>;\n    };\n    UNICODE(world_quotes_left_corner2_lower, /* „Äé */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp N3 &kp N0 &kp N0 &kp E)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N3 &kp N0 &kp N0 &kp E)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp N3 &kp N0 &kp N0 &kp E)\n      #endif\n    )\n    UNICODE(world_quotes_left_corner2_upper, /* ÔπÉ */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp F &kp E &kp N4 &kp N3)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp F &kp E &kp N4 &kp N3)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp F &kp E &kp N4 &kp N3)\n      #endif\n    )\n    world_quotes_left_corner2: world_quotes_left_corner2 {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_quotes_left_corner2_lower>, <&world_quotes_left_corner2_upper>;\n        mods = <MOD_LSFT>;\n    };\n    UNICODE(world_quotes_left_grave, /* ` */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp N6 &kp N0)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N0 &kp N0 &kp N6 &kp N0)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp N6 &kp N0)\n      #endif\n    )\n    UNICODE(world_quotes_right_angle_lower, /* ‚Ä∫ */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp N2 &kp N0 &kp N3 &kp A)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N2 &kp N0 &kp N3 &kp A)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp N2 &kp N0 &kp N3 &kp A)\n      #endif\n    )\n    UNICODE(world_quotes_right_angle_upper, /* ¬ª */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp B &kp B)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N0 &kp N0 &kp B &kp B)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp B &kp B)\n      #endif\n    )\n    world_quotes_right_angle: world_quotes_right_angle {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_quotes_right_angle_lower>, <&world_quotes_right_angle_upper>;\n        mods = <MOD_LSFT>;\n    };\n    UNICODE(world_quotes_right_curly_lower, /* ‚Äô */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp N2 &kp N0 &kp N1 &kp N9)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N2 &kp N0 &kp N1 &kp N9)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp N2 &kp N0 &kp N1 &kp N9)\n      #endif\n    )\n    UNICODE(world_quotes_right_curly_upper, /* ‚Äù */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp N2 &kp N0 &kp N1 &kp D)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N2 &kp N0 &kp N1 &kp D)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp N2 &kp N0 &kp N1 &kp D)\n      #endif\n    )\n    world_quotes_right_curly: world_quotes_right_curly {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_quotes_right_curly_lower>, <&world_quotes_right_curly_upper>;\n        mods = <MOD_LSFT>;\n    };\n    world_quotes_right_low: world_quotes_right_low {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_quotes_left_low_lower>, <&world_quotes_left_low_upper>;\n        mods = <MOD_LSFT>;\n    };\n    UNICODE(world_quotes_right_corner1_lower, /* „Äç */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp N3 &kp N0 &kp N0 &kp D)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N3 &kp N0 &kp N0 &kp D)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp N3 &kp N0 &kp N0 &kp D)\n      #endif\n    )\n    UNICODE(world_quotes_right_corner1_upper, /* ÔπÇ */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp F &kp E &kp N4 &kp N2)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp F &kp E &kp N4 &kp N2)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp F &kp E &kp N4 &kp N2)\n      #endif\n    )\n    world_quotes_right_corner1: world_quotes_right_corner1 {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_quotes_right_corner1_lower>, <&world_quotes_right_corner1_upper>;\n        mods = <MOD_LSFT>;\n    };\n    UNICODE(world_quotes_right_corner2_lower, /* „Äè */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp N3 &kp N0 &kp N0 &kp F)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N3 &kp N0 &kp N0 &kp F)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp N3 &kp N0 &kp N0 &kp F)\n      #endif\n    )\n    UNICODE(world_quotes_right_corner2_upper, /* ÔπÑ */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp F &kp E &kp N4 &kp N4)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp F &kp E &kp N4 &kp N4)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp F &kp E &kp N4 &kp N4)\n      #endif\n    )\n    world_quotes_right_corner2: world_quotes_right_corner2 {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_quotes_right_corner2_lower>, <&world_quotes_right_corner2_upper>;\n        mods = <MOD_LSFT>;\n    };\n    UNICODE(world_quotes_right_grave, /* ¬¥ */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp B &kp N4)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N0 &kp N0 &kp B &kp N4)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp B &kp N4)\n      #endif\n    )\n    UNICODE(world_currency_dollar_lower, /* $ */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp N2 &kp N4)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N0 &kp N0 &kp N2 &kp N4)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp N2 &kp N4)\n      #endif\n    )\n    world_currency_dollar: world_currency_dollar {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_currency_dollar_lower>, <&world_currency_cent>;\n        mods = <MOD_LSFT>;\n    };\n    UNICODE(world_currency_yen, /* ¬• */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp A &kp N5)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N0 &kp N0 &kp A &kp N5)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp A &kp N5)\n      #endif\n    )\n    UNICODE(world_currency_euro, /* ‚Ç¨ */\n      #if UNICODE_TARGET_OS == 1\n        COMPOSE_SEQ_LINUX(&kp E &kp EQUAL)\n      #elif UNICODE_TARGET_OS == 2\n        COMPOSE_SEQ_MACOS(&kp LA(LS(N2)))\n      #elif UNICODE_TARGET_OS == 3\n        COMPOSE_SEQ_WINDOWS(&kp KP_N0 &kp KP_N1 &kp KP_N2 &kp KP_N8)\n      #endif\n    )\n    UNICODE(world_currency_won, /* ‚Ç© */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp N2 &kp N0 &kp A &kp N9)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N2 &kp N0 &kp A &kp N9)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp N2 &kp N0 &kp A &kp N9)\n      #endif\n    )\n    UNICODE(world_currency_pound, /* ¬£ */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp A &kp N3)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N0 &kp N0 &kp A &kp N3)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp A &kp N3)\n      #endif\n    )\n    world_currency_generic: world_currency_generic {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_currency_sign>, <&world_currency_crypto>;\n        mods = <MOD_LSFT>;\n    };\n\n    //\n    // transforms\n    //\n    world_i_base: world_i_base {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_i_acute>, <&world_i_LCTL>;\n        mods = <(MOD_LCTL|MOD_RCTL|MOD_RSFT)>;\n    };\n    world_i_LCTL: world_i_LCTL {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_i_diaeresis>, <&world_i_RCTL>;\n        mods = <(MOD_RCTL|MOD_RSFT)>;\n    };\n    world_i_RCTL: world_i_RCTL {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_i_circumflex>, <&world_i_grave>;\n        mods = <(MOD_RSFT)>;\n    };\n    world_e_base: world_e_base {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_e_acute>, <&world_e_RALT>;\n        mods = <(MOD_RALT|MOD_LCTL|MOD_RCTL|MOD_RSFT)>;\n    };\n    world_e_RALT: world_e_RALT {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_e_ae>, <&world_e_LCTL>;\n        mods = <(MOD_LCTL|MOD_RCTL|MOD_RSFT)>;\n    };\n    world_e_LCTL: world_e_LCTL {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_e_diaeresis>, <&world_e_RCTL>;\n        mods = <(MOD_RCTL|MOD_RSFT)>;\n    };\n    world_e_RCTL: world_e_RCTL {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_e_circumflex>, <&world_e_grave>;\n        mods = <(MOD_RSFT)>;\n    };\n    world_a_base: world_a_base {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_a_acute>, <&world_a_LALT>;\n        mods = <(MOD_LALT|MOD_RALT|MOD_LCTL|MOD_RCTL|MOD_RSFT)>;\n    };\n    world_a_LALT: world_a_LALT {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_a_tilde>, <&world_a_RALT>;\n        mods = <(MOD_RALT|MOD_LCTL|MOD_RCTL|MOD_RSFT)>;\n    };\n    world_a_RALT: world_a_RALT {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_a_ring>, <&world_a_LCTL>;\n        mods = <(MOD_LCTL|MOD_RCTL|MOD_RSFT)>;\n    };\n    world_a_LCTL: world_a_LCTL {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_a_diaeresis>, <&world_a_RCTL>;\n        mods = <(MOD_RCTL|MOD_RSFT)>;\n    };\n    world_a_RCTL: world_a_RCTL {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_a_circumflex>, <&world_a_grave>;\n        mods = <(MOD_RSFT)>;\n    };\n    world_y_base: world_y_base {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_y_acute>, <&world_y_diaeresis>;\n        mods = <(MOD_LCTL)>;\n    };\n    world_o_base: world_o_base {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_o_acute>, <&world_o_LALT>;\n        mods = <(MOD_LALT|MOD_RALT|MOD_LCTL|MOD_RCTL|MOD_RSFT)>;\n    };\n    world_o_LALT: world_o_LALT {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_o_tilde>, <&world_o_RALT>;\n        mods = <(MOD_RALT|MOD_LCTL|MOD_RCTL|MOD_RSFT)>;\n    };\n    world_o_RALT: world_o_RALT {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_o_slash>, <&world_o_LCTL>;\n        mods = <(MOD_LCTL|MOD_RCTL|MOD_RSFT)>;\n    };\n    world_o_LCTL: world_o_LCTL {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_o_diaeresis>, <&world_o_RCTL>;\n        mods = <(MOD_RCTL|MOD_RSFT)>;\n    };\n    world_o_RCTL: world_o_RCTL {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_o_circumflex>, <&world_o_grave>;\n        mods = <(MOD_RSFT)>;\n    };\n    world_u_base: world_u_base {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_u_acute>, <&world_u_LCTL>;\n        mods = <(MOD_LCTL|MOD_RCTL|MOD_RSFT)>;\n    };\n    world_u_LCTL: world_u_LCTL {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_u_diaeresis>, <&world_u_RCTL>;\n        mods = <(MOD_RCTL|MOD_RSFT)>;\n    };\n    world_u_RCTL: world_u_RCTL {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_u_circumflex>, <&world_u_grave>;\n        mods = <(MOD_RSFT)>;\n    };\n    world_quotes_left_base: world_quotes_left_base {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_quotes_left_angle>, <&world_quotes_left_LALT>;\n        mods = <(MOD_LALT|MOD_RALT|MOD_LCTL|MOD_RCTL|MOD_RSFT)>;\n    };\n    world_quotes_left_LALT: world_quotes_left_LALT {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_quotes_left_corner1>, <&world_quotes_left_RALT>;\n        mods = <(MOD_RALT|MOD_LCTL|MOD_RCTL|MOD_RSFT)>;\n    };\n    world_quotes_left_RALT: world_quotes_left_RALT {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_quotes_left_corner2>, <&world_quotes_left_LCTL>;\n        mods = <(MOD_LCTL|MOD_RCTL|MOD_RSFT)>;\n    };\n    world_quotes_left_LCTL: world_quotes_left_LCTL {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_quotes_left_curly>, <&world_quotes_left_RCTL>;\n        mods = <(MOD_RCTL|MOD_RSFT)>;\n    };\n    world_quotes_left_RCTL: world_quotes_left_RCTL {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_quotes_left_low>, <&world_quotes_left_grave>;\n        mods = <(MOD_RSFT)>;\n    };\n    world_quotes_right_base: world_quotes_right_base {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_quotes_right_angle>, <&world_quotes_right_LALT>;\n        mods = <(MOD_LALT|MOD_RALT|MOD_LCTL|MOD_RCTL|MOD_RSFT)>;\n    };\n    world_quotes_right_LALT: world_quotes_right_LALT {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_quotes_right_corner1>, <&world_quotes_right_RALT>;\n        mods = <(MOD_RALT|MOD_LCTL|MOD_RCTL|MOD_RSFT)>;\n    };\n    world_quotes_right_RALT: world_quotes_right_RALT {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_quotes_right_corner2>, <&world_quotes_right_LCTL>;\n        mods = <(MOD_LCTL|MOD_RCTL|MOD_RSFT)>;\n    };\n    world_quotes_right_LCTL: world_quotes_right_LCTL {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_quotes_right_curly>, <&world_quotes_right_RCTL>;\n        mods = <(MOD_RCTL|MOD_RSFT)>;\n    };\n    world_quotes_right_RCTL: world_quotes_right_RCTL {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_quotes_right_low>, <&world_quotes_right_grave>;\n        mods = <(MOD_RSFT)>;\n    };\n    world_currency_base: world_currency_base {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_currency_dollar>, <&world_currency_LALT>;\n        mods = <(MOD_LALT|MOD_RALT|MOD_LCTL|MOD_RCTL|MOD_RSFT)>;\n    };\n    world_currency_LALT: world_currency_LALT {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_currency_yen>, <&world_currency_RALT>;\n        mods = <(MOD_RALT|MOD_LCTL|MOD_RCTL|MOD_RSFT)>;\n    };\n    world_currency_RALT: world_currency_RALT {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_currency_won>, <&world_currency_LCTL>;\n        mods = <(MOD_LCTL|MOD_RCTL|MOD_RSFT)>;\n    };\n    world_currency_LCTL: world_currency_LCTL {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_currency_euro>, <&world_currency_RCTL>;\n        mods = <(MOD_RCTL|MOD_RSFT)>;\n    };\n    world_currency_RCTL: world_currency_RCTL {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&world_currency_pound>, <&world_currency_generic>;\n        mods = <(MOD_RSFT)>;\n    };\n\n    //////////////////////////////////////////////////////////////////////////\n    //\n    // Emoji layer - modern age pictograms\n    //\n    //////////////////////////////////////////////////////////////////////////\n\n    //\n    // EMOJI_GENDER_SIGN_PRESET defines an Emoji gender sign for use as a\n    // convenient inward-rolling shortcut on the home row of the layer.\n    //\n    #ifndef EMOJI_GENDER_SIGN_PRESET\n    //#define EMOJI_GENDER_SIGN_PRESET 0 // neutral\n    #define EMOJI_GENDER_SIGN_PRESET 1 // male\n    //#define EMOJI_GENDER_SIGN_PRESET 2 // female\n    #endif\n\n    //\n    // EMOJI_SKIN_TONE_PRESET defines an Emoji skin tone for use as a\n    // convenient inward-rolling shortcut on the home row of the layer.\n    //\n    #ifndef EMOJI_SKIN_TONE_PRESET\n    //#define EMOJI_SKIN_TONE_PRESET 0 // neutral\n    //#define EMOJI_SKIN_TONE_PRESET 1 // light_skin_tone\n    //#define EMOJI_SKIN_TONE_PRESET 2 // medium_light_skin_tone\n    //#define EMOJI_SKIN_TONE_PRESET 3 // medium_skin_tone\n    #define EMOJI_SKIN_TONE_PRESET 4 // medium_dark_skin_tone\n    //#define EMOJI_SKIN_TONE_PRESET 5 // dark_skin_tone\n    #endif\n\n    //\n    // EMOJI_HAIR_STYLE_PRESET defines an Emoji hair style for use as a\n    // convenient inward-rolling shortcut on the home row of the layer.\n    //\n    #ifndef EMOJI_HAIR_STYLE_PRESET\n    //#define EMOJI_HAIR_STYLE_PRESET 0 // neutral\n    //#define EMOJI_HAIR_STYLE_PRESET 1 // bald\n    //#define EMOJI_HAIR_STYLE_PRESET 2 // red_hair\n    //#define EMOJI_HAIR_STYLE_PRESET 3 // curly_hair\n    #define EMOJI_HAIR_STYLE_PRESET 4 // white_hair\n    #endif\n\n    //\n    // NOTE: edit the emoji.yaml file and run `rake` to generate this:\n    //\n\n    //\n    // codepoints\n    //\n    UNICODE(emoji_zwj, /* ‚Äç */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp N2 &kp N0 &kp N0 &kp D)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N2 &kp N0 &kp N0 &kp D)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp N2 &kp N0 &kp N0 &kp D)\n      #endif\n    )\n    UNICODE(emoji_male_sign, /* ‚ôÇÔ∏è */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp N2 &kp N6 &kp N4 &kp N2), <&macro_wait_time UNICODE_SEQ_DELAY>, UNICODE_SEQ_LINUX(&kp F &kp E &kp N0 &kp F)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N2 &kp N6 &kp N4 &kp N2), <&macro_wait_time UNICODE_SEQ_DELAY>, UNICODE_SEQ_MACOS(&kp F &kp E &kp N0 &kp F)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp N2 &kp N6 &kp N4 &kp N2), <&macro_wait_time UNICODE_SEQ_DELAY>, UNICODE_SEQ_WINDOWS(&kp F &kp E &kp N0 &kp F)\n      #endif\n    )\n    UNICODE(emoji_female_sign, /* ‚ôÄÔ∏è */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp N2 &kp N6 &kp N4 &kp N0), <&macro_wait_time UNICODE_SEQ_DELAY>, UNICODE_SEQ_LINUX(&kp F &kp E &kp N0 &kp F)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N2 &kp N6 &kp N4 &kp N0), <&macro_wait_time UNICODE_SEQ_DELAY>, UNICODE_SEQ_MACOS(&kp F &kp E &kp N0 &kp F)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp N2 &kp N6 &kp N4 &kp N0), <&macro_wait_time UNICODE_SEQ_DELAY>, UNICODE_SEQ_WINDOWS(&kp F &kp E &kp N0 &kp F)\n      #endif\n    )\n    UNICODE(emoji_right_arrow, /* ‚û°Ô∏è */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp N2 &kp N7 &kp A &kp N1), <&macro_wait_time UNICODE_SEQ_DELAY>, UNICODE_SEQ_LINUX(&kp F &kp E &kp N0 &kp F)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N2 &kp N7 &kp A &kp N1), <&macro_wait_time UNICODE_SEQ_DELAY>, UNICODE_SEQ_MACOS(&kp F &kp E &kp N0 &kp F)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp N2 &kp N7 &kp A &kp N1), <&macro_wait_time UNICODE_SEQ_DELAY>, UNICODE_SEQ_WINDOWS(&kp F &kp E &kp N0 &kp F)\n      #endif\n    )\n    UNICODE(emoji_left_arrow, /* ‚¨ÖÔ∏è */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp N2 &kp B &kp N0 &kp N5), <&macro_wait_time UNICODE_SEQ_DELAY>, UNICODE_SEQ_LINUX(&kp F &kp E &kp N0 &kp F)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N2 &kp B &kp N0 &kp N5), <&macro_wait_time UNICODE_SEQ_DELAY>, UNICODE_SEQ_MACOS(&kp F &kp E &kp N0 &kp F)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp N2 &kp B &kp N0 &kp N5), <&macro_wait_time UNICODE_SEQ_DELAY>, UNICODE_SEQ_WINDOWS(&kp F &kp E &kp N0 &kp F)\n      #endif\n    )\n    UNICODE(emoji_rainbow, /* üåà */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N3 &kp N0 &kp N8)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N3 &kp N0 &kp N8)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N3 &kp N0 &kp N8)\n      #endif\n    )\n    UNICODE(emoji_cloudy, /* Ô∏è‚òÅÔ∏è */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp F &kp E &kp N0 &kp F), <&macro_wait_time UNICODE_SEQ_DELAY>, UNICODE_SEQ_LINUX(&kp N2 &kp N6 &kp N0 &kp N1), UNICODE_SEQ_LINUX(&kp F &kp E &kp N0 &kp F)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp F &kp E &kp N0 &kp F), <&macro_wait_time UNICODE_SEQ_DELAY>, UNICODE_SEQ_MACOS(&kp N2 &kp N6 &kp N0 &kp N1), UNICODE_SEQ_MACOS(&kp F &kp E &kp N0 &kp F)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp F &kp E &kp N0 &kp F), <&macro_wait_time UNICODE_SEQ_DELAY>, UNICODE_SEQ_WINDOWS(&kp N2 &kp N6 &kp N0 &kp N1), UNICODE_SEQ_WINDOWS(&kp F &kp E &kp N0 &kp F)\n      #endif\n    )\n    UNICODE(emoji_mostly_cloudy, /* üå• */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N3 &kp N2 &kp N5)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N3 &kp N2 &kp N5)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N3 &kp N2 &kp N5)\n      #endif\n    )\n    UNICODE(emoji_partly_cloudy, /* ‚õÖ */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp N2 &kp N6 &kp C &kp N5)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N2 &kp N6 &kp C &kp N5)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp N2 &kp N6 &kp C &kp N5)\n      #endif\n    )\n    UNICODE(emoji_mostly_sunny, /* Ô∏èüå§Ô∏è */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp F &kp E &kp N0 &kp F), <&macro_wait_time UNICODE_SEQ_DELAY>, UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N3 &kp N2 &kp N4), UNICODE_SEQ_LINUX(&kp F &kp E &kp N0 &kp F)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp F &kp E &kp N0 &kp F), <&macro_wait_time UNICODE_SEQ_DELAY>, UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N3 &kp N2 &kp N4), UNICODE_SEQ_MACOS(&kp F &kp E &kp N0 &kp F)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp F &kp E &kp N0 &kp F), <&macro_wait_time UNICODE_SEQ_DELAY>, UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N3 &kp N2 &kp N4), UNICODE_SEQ_WINDOWS(&kp F &kp E &kp N0 &kp F)\n      #endif\n    )\n    UNICODE(emoji_sunny, /* ‚òÄÔ∏è */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp N2 &kp N6 &kp N0 &kp N0), <&macro_wait_time UNICODE_SEQ_DELAY>, UNICODE_SEQ_LINUX(&kp F &kp E &kp N0 &kp F)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N2 &kp N6 &kp N0 &kp N0), <&macro_wait_time UNICODE_SEQ_DELAY>, UNICODE_SEQ_MACOS(&kp F &kp E &kp N0 &kp F)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp N2 &kp N6 &kp N0 &kp N0), <&macro_wait_time UNICODE_SEQ_DELAY>, UNICODE_SEQ_WINDOWS(&kp F &kp E &kp N0 &kp F)\n      #endif\n    )\n    UNICODE(emoji_sunrise, /* üåÖ */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N3 &kp N0 &kp N5)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N3 &kp N0 &kp N5)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N3 &kp N0 &kp N5)\n      #endif\n    )\n    UNICODE(emoji_sunrise_mountains, /* üåÑ */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N3 &kp N0 &kp N4)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N3 &kp N0 &kp N4)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N3 &kp N0 &kp N4)\n      #endif\n    )\n    UNICODE(emoji_cityscape, /* Ô∏èüèôÔ∏è */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp F &kp E &kp N0 &kp F), <&macro_wait_time UNICODE_SEQ_DELAY>, UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N3 &kp D &kp N9), UNICODE_SEQ_LINUX(&kp F &kp E &kp N0 &kp F)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp F &kp E &kp N0 &kp F), <&macro_wait_time UNICODE_SEQ_DELAY>, UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N3 &kp D &kp N9), UNICODE_SEQ_MACOS(&kp F &kp E &kp N0 &kp F)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp F &kp E &kp N0 &kp F), <&macro_wait_time UNICODE_SEQ_DELAY>, UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N3 &kp D &kp N9), UNICODE_SEQ_WINDOWS(&kp F &kp E &kp N0 &kp F)\n      #endif\n    )\n    UNICODE(emoji_cityscape_dusk, /* Ô∏èüåá */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp F &kp E &kp N0 &kp F), <&macro_wait_time UNICODE_SEQ_DELAY>, UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N3 &kp N0 &kp N7)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp F &kp E &kp N0 &kp F), <&macro_wait_time UNICODE_SEQ_DELAY>, UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N3 &kp N0 &kp N7)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp F &kp E &kp N0 &kp F), <&macro_wait_time UNICODE_SEQ_DELAY>, UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N3 &kp N0 &kp N7)\n      #endif\n    )\n    UNICODE(emoji_cityscape_night, /* üåÉ */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N3 &kp N0 &kp N3)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N3 &kp N0 &kp N3)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N3 &kp N0 &kp N3)\n      #endif\n    )\n    UNICODE(emoji_light_skin_tone, /* üèª */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N3 &kp F &kp B)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N3 &kp F &kp B)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N3 &kp F &kp B)\n      #endif\n    )\n    UNICODE(emoji_medium_light_skin_tone, /* üèº */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N3 &kp F &kp C)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N3 &kp F &kp C)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N3 &kp F &kp C)\n      #endif\n    )\n    UNICODE(emoji_medium_skin_tone, /* üèΩ */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N3 &kp F &kp D)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N3 &kp F &kp D)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N3 &kp F &kp D)\n      #endif\n    )\n    UNICODE(emoji_medium_dark_skin_tone, /* üèæ */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N3 &kp F &kp E)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N3 &kp F &kp E)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N3 &kp F &kp E)\n      #endif\n    )\n    UNICODE(emoji_dark_skin_tone, /* üèø */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N3 &kp F &kp F)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N3 &kp F &kp F)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N3 &kp F &kp F)\n      #endif\n    )\n    UNICODE(emoji_baby_bottle, /* üçº */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N3 &kp N7 &kp C)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N3 &kp N7 &kp C)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N3 &kp N7 &kp C)\n      #endif\n    )\n    UNICODE(emoji_baby, /* üë∂ */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N4 &kp N7 &kp N6)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N4 &kp N7 &kp N6)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N4 &kp N7 &kp N6)\n      #endif\n    )\n    UNICODE(emoji_boy, /* üë¶ */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N4 &kp N6 &kp N6)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N4 &kp N6 &kp N6)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N4 &kp N6 &kp N6)\n      #endif\n    )\n    UNICODE(emoji_girl, /* üëß */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N4 &kp N6 &kp N7)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N4 &kp N6 &kp N7)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N4 &kp N6 &kp N7)\n      #endif\n    )\n    UNICODE(emoji_man, /* üë® */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N4 &kp N6 &kp N8)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N4 &kp N6 &kp N8)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N4 &kp N6 &kp N8)\n      #endif\n    )\n    UNICODE(emoji_woman, /* üë© */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N4 &kp N6 &kp N9)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N4 &kp N6 &kp N9)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N4 &kp N6 &kp N9)\n      #endif\n    )\n    UNICODE(emoji_old_man, /* üë¥ */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N4 &kp N7 &kp N4)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N4 &kp N7 &kp N4)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N4 &kp N7 &kp N4)\n      #endif\n    )\n    UNICODE(emoji_old_woman, /* üëµ */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N4 &kp N7 &kp N5)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N4 &kp N7 &kp N5)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N4 &kp N7 &kp N5)\n      #endif\n    )\n    UNICODE(emoji_white_hair, /* ü¶≥ */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N9 &kp B &kp N3)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N9 &kp B &kp N3)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N9 &kp B &kp N3)\n      #endif\n    )\n    UNICODE(emoji_curly_hair, /* ü¶± */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N9 &kp B &kp N1)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N9 &kp B &kp N1)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N9 &kp B &kp N1)\n      #endif\n    )\n    UNICODE(emoji_red_hair, /* ü¶∞ */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N9 &kp B &kp N0)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N9 &kp B &kp N0)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N9 &kp B &kp N0)\n      #endif\n    )\n    UNICODE(emoji_bald, /* ü¶≤ */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N9 &kp B &kp N2)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N9 &kp B &kp N2)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N9 &kp B &kp N2)\n      #endif\n    )\n    UNICODE(emoji_new_moon, /* üåë */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N3 &kp N1 &kp N1)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N3 &kp N1 &kp N1)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N3 &kp N1 &kp N1)\n      #endif\n    )\n    UNICODE(emoji_waxing_crescent_moon, /* üåí */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N3 &kp N1 &kp N2)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N3 &kp N1 &kp N2)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N3 &kp N1 &kp N2)\n      #endif\n    )\n    UNICODE(emoji_first_quarter_moon, /* üåì */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N3 &kp N1 &kp N3)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N3 &kp N1 &kp N3)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N3 &kp N1 &kp N3)\n      #endif\n    )\n    UNICODE(emoji_waxing_gibbous_moon, /* üåî */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N3 &kp N1 &kp N4)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N3 &kp N1 &kp N4)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N3 &kp N1 &kp N4)\n      #endif\n    )\n    UNICODE(emoji_full_moon, /* üåï */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N3 &kp N1 &kp N5)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N3 &kp N1 &kp N5)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N3 &kp N1 &kp N5)\n      #endif\n    )\n    UNICODE(emoji_waning_gibbous_moon, /* üåñ */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N3 &kp N1 &kp N6)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N3 &kp N1 &kp N6)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N3 &kp N1 &kp N6)\n      #endif\n    )\n    UNICODE(emoji_last_quarter_moon, /* üåó */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N3 &kp N1 &kp N7)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N3 &kp N1 &kp N7)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N3 &kp N1 &kp N7)\n      #endif\n    )\n    UNICODE(emoji_waning_crescent_moon, /* üåò */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N3 &kp N1 &kp N8)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N3 &kp N1 &kp N8)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N3 &kp N1 &kp N8)\n      #endif\n    )\n    UNICODE(emoji_tada, /* üéâ */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N3 &kp N8 &kp N9)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N3 &kp N8 &kp N9)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N3 &kp N8 &kp N9)\n      #endif\n    )\n    UNICODE(emoji_heart, /* Ô∏è‚ù§Ô∏è */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp F &kp E &kp N0 &kp F), <&macro_wait_time UNICODE_SEQ_DELAY>, UNICODE_SEQ_LINUX(&kp N2 &kp N7 &kp N6 &kp N4), UNICODE_SEQ_LINUX(&kp F &kp E &kp N0 &kp F)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp F &kp E &kp N0 &kp F), <&macro_wait_time UNICODE_SEQ_DELAY>, UNICODE_SEQ_MACOS(&kp N2 &kp N7 &kp N6 &kp N4), UNICODE_SEQ_MACOS(&kp F &kp E &kp N0 &kp F)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp F &kp E &kp N0 &kp F), <&macro_wait_time UNICODE_SEQ_DELAY>, UNICODE_SEQ_WINDOWS(&kp N2 &kp N7 &kp N6 &kp N4), UNICODE_SEQ_WINDOWS(&kp F &kp E &kp N0 &kp F)\n      #endif\n    )\n    UNICODE(emoji_fire, /* üî• */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N5 &kp N2 &kp N5)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N5 &kp N2 &kp N5)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N5 &kp N2 &kp N5)\n      #endif\n    )\n    UNICODE(emoji_muscle, /* üí™ */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N4 &kp A &kp A)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N4 &kp A &kp A)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N4 &kp A &kp A)\n      #endif\n    )\n    UNICODE(emoji_person_climbing, /* üßó */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N9 &kp D &kp N7)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N9 &kp D &kp N7)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N9 &kp D &kp N7)\n      #endif\n    )\n    UNICODE(emoji_lab_coat, /* ü•º */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N9 &kp N7 &kp C)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N9 &kp N7 &kp C)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N9 &kp N7 &kp C)\n      #endif\n    )\n    UNICODE(emoji_rocket, /* üöÄ */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N6 &kp N8 &kp N0)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N6 &kp N8 &kp N0)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N6 &kp N8 &kp N0)\n      #endif\n    )\n    UNICODE(emoji_joy, /* üòÇ */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N6 &kp N0 &kp N2)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N6 &kp N0 &kp N2)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N6 &kp N0 &kp N2)\n      #endif\n    )\n    UNICODE(emoji_rofl, /* ü§£ */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N9 &kp N2 &kp N3)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N9 &kp N2 &kp N3)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N9 &kp N2 &kp N3)\n      #endif\n    )\n    UNICODE(emoji_star_struck, /* ü§© */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N9 &kp N2 &kp N9)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N9 &kp N2 &kp N9)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N9 &kp N2 &kp N9)\n      #endif\n    )\n    UNICODE(emoji_love_struck, /* üòç */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N6 &kp N0 &kp D)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N6 &kp N0 &kp D)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N6 &kp N0 &kp D)\n      #endif\n    )\n    UNICODE(emoji_saluting_face, /* ü´° */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp A &kp E &kp N1)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp A &kp E &kp N1)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp A &kp E &kp N1)\n      #endif\n    )\n    UNICODE(emoji_shocked_face, /* ü§Ø */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N9 &kp N2 &kp F)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N9 &kp N2 &kp F)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N9 &kp N2 &kp F)\n      #endif\n    )\n    UNICODE(emoji_cold_sweat, /* üò∞ */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N6 &kp N3 &kp N0)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N6 &kp N3 &kp N0)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N6 &kp N3 &kp N0)\n      #endif\n    )\n    UNICODE(emoji_monocle_face, /* üßê */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N9 &kp D &kp N0)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N9 &kp D &kp N0)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N9 &kp D &kp N0)\n      #endif\n    )\n    UNICODE(emoji_snap_fingers, /* ü´∞ */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp A &kp F &kp N0)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp A &kp F &kp N0)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp A &kp F &kp N0)\n      #endif\n    )\n    UNICODE(emoji_ok_hand, /* üëå */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N4 &kp N4 &kp C)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N4 &kp N4 &kp C)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N4 &kp N4 &kp C)\n      #endif\n    )\n    UNICODE(emoji_pray, /* üôè */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N6 &kp N4 &kp F)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N6 &kp N4 &kp F)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N6 &kp N4 &kp F)\n      #endif\n    )\n    UNICODE(emoji_sweat_smile, /* üòÖ */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N6 &kp N0 &kp N5)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N6 &kp N0 &kp N5)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N6 &kp N0 &kp N5)\n      #endif\n    )\n    UNICODE(emoji_disappointed, /* üòû */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N6 &kp N1 &kp E)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N6 &kp N1 &kp E)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N6 &kp N1 &kp E)\n      #endif\n    )\n    UNICODE(emoji_thinking, /* ü§î */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N9 &kp N1 &kp N4)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N9 &kp N1 &kp N4)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N9 &kp N1 &kp N4)\n      #endif\n    )\n    UNICODE(emoji_person_tipping_hand, /* üíÅ */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N4 &kp N8 &kp N1)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N4 &kp N8 &kp N1)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N4 &kp N8 &kp N1)\n      #endif\n    )\n    UNICODE(emoji_person_gesturing_ok, /* üôÜ */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N6 &kp N4 &kp N6)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N6 &kp N4 &kp N6)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N6 &kp N4 &kp N6)\n      #endif\n    )\n    UNICODE(emoji_person_bowing, /* üôá */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N6 &kp N4 &kp N7)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N6 &kp N4 &kp N7)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N6 &kp N4 &kp N7)\n      #endif\n    )\n    UNICODE(emoji_person_raising_hand, /* üôã */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N6 &kp N4 &kp B)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N6 &kp N4 &kp B)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N6 &kp N4 &kp B)\n      #endif\n    )\n    UNICODE(emoji_person_gesturing_no, /* üôÖ */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N6 &kp N4 &kp N5)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N6 &kp N4 &kp N5)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N6 &kp N4 &kp N5)\n      #endif\n    )\n    UNICODE(emoji_person_shrugging, /* ü§∑ */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N9 &kp N3 &kp N7)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N9 &kp N3 &kp N7)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N9 &kp N3 &kp N7)\n      #endif\n    )\n    UNICODE(emoji_checkoff, /* ‚úÖ */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp N2 &kp N7 &kp N0 &kp N5)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N2 &kp N7 &kp N0 &kp N5)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp N2 &kp N7 &kp N0 &kp N5)\n      #endif\n    )\n    UNICODE(emoji_100, /* üíØ */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N4 &kp A &kp F)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N4 &kp A &kp F)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N4 &kp A &kp F)\n      #endif\n    )\n    UNICODE(emoji_warning, /* ‚ö†Ô∏è */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp N2 &kp N6 &kp A &kp N0), <&macro_wait_time UNICODE_SEQ_DELAY>, UNICODE_SEQ_LINUX(&kp F &kp E &kp N0 &kp F)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N2 &kp N6 &kp A &kp N0), <&macro_wait_time UNICODE_SEQ_DELAY>, UNICODE_SEQ_MACOS(&kp F &kp E &kp N0 &kp F)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp N2 &kp N6 &kp A &kp N0), <&macro_wait_time UNICODE_SEQ_DELAY>, UNICODE_SEQ_WINDOWS(&kp F &kp E &kp N0 &kp F)\n      #endif\n    )\n    UNICODE(emoji_x, /* ‚ùå */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp N2 &kp N7 &kp N4 &kp C)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N2 &kp N7 &kp N4 &kp C)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp N2 &kp N7 &kp N4 &kp C)\n      #endif\n    )\n    UNICODE(emoji_question, /* ‚ùì */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp N2 &kp N7 &kp N5 &kp N3)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N2 &kp N7 &kp N5 &kp N3)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp N2 &kp N7 &kp N5 &kp N3)\n      #endif\n    )\n    UNICODE(emoji_astronaut, /* üßë‚ÄçüöÄ */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N9 &kp D &kp N1), <&macro_wait_time UNICODE_SEQ_DELAY>, UNICODE_SEQ_LINUX(&kp N2 &kp N0 &kp N0 &kp D), UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N6 &kp N8 &kp N0)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N9 &kp D &kp N1), <&macro_wait_time UNICODE_SEQ_DELAY>, UNICODE_SEQ_MACOS(&kp N2 &kp N0 &kp N0 &kp D), UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N6 &kp N8 &kp N0)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N9 &kp D &kp N1), <&macro_wait_time UNICODE_SEQ_DELAY>, UNICODE_SEQ_WINDOWS(&kp N2 &kp N0 &kp N0 &kp D), UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N6 &kp N8 &kp N0)\n      #endif\n    )\n    UNICODE(emoji_nerd, /* ü§ì */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N9 &kp N1 &kp N3)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N9 &kp N1 &kp N3)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N9 &kp N1 &kp N3)\n      #endif\n    )\n    UNICODE(emoji_sparkles, /* ‚ú® */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp N2 &kp N7 &kp N2 &kp N8)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N2 &kp N7 &kp N2 &kp N8)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp N2 &kp N7 &kp N2 &kp N8)\n      #endif\n    )\n    UNICODE(emoji_raised_hands, /* üôå */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N6 &kp N4 &kp C)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N6 &kp N4 &kp C)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N6 &kp N4 &kp C)\n      #endif\n    )\n    UNICODE(emoji_point_up, /* ‚òùÔ∏è */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp N2 &kp N6 &kp N1 &kp D), <&macro_wait_time UNICODE_SEQ_DELAY>, UNICODE_SEQ_LINUX(&kp F &kp E &kp N0 &kp F)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N2 &kp N6 &kp N1 &kp D), <&macro_wait_time UNICODE_SEQ_DELAY>, UNICODE_SEQ_MACOS(&kp F &kp E &kp N0 &kp F)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp N2 &kp N6 &kp N1 &kp D), <&macro_wait_time UNICODE_SEQ_DELAY>, UNICODE_SEQ_WINDOWS(&kp F &kp E &kp N0 &kp F)\n      #endif\n    )\n    UNICODE(emoji_thumbs_up, /* üëç */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N4 &kp N4 &kp D)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N4 &kp N4 &kp D)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N4 &kp N4 &kp D)\n      #endif\n    )\n\n    //\n    // characters\n    //\n    emoji_moon_complete: emoji_moon_complete {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&emoji_new_moon>, <&emoji_full_moon>;\n        mods = <MOD_LSFT>;\n    };\n    emoji_moon_gibbous: emoji_moon_gibbous {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&emoji_waning_gibbous_moon>, <&emoji_waxing_gibbous_moon>;\n        mods = <MOD_LSFT>;\n    };\n    emoji_moon_quarter: emoji_moon_quarter {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&emoji_last_quarter_moon>, <&emoji_first_quarter_moon>;\n        mods = <MOD_LSFT>;\n    };\n    emoji_moon_crescent: emoji_moon_crescent {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&emoji_waning_crescent_moon>, <&emoji_waxing_crescent_moon>;\n        mods = <MOD_LSFT>;\n    };\n    UNICODE(emoji_face_smile_up, /* üôÇ */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N6 &kp N4 &kp N2)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N6 &kp N4 &kp N2)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N6 &kp N4 &kp N2)\n      #endif\n    )\n    UNICODE(emoji_face_smile_down, /* üôÉ */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N6 &kp N4 &kp N3)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N6 &kp N4 &kp N3)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N6 &kp N4 &kp N3)\n      #endif\n    )\n    emoji_face_smile: emoji_face_smile {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&emoji_face_smile_up>, <&emoji_face_smile_down>;\n        mods = <MOD_LSFT>;\n    };\n    emoji_face_laugh: emoji_face_laugh {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&emoji_joy>, <&emoji_rofl>;\n        mods = <MOD_LSFT>;\n    };\n    emoji_face_eyes: emoji_face_eyes {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&emoji_star_struck>, <&emoji_love_struck>;\n        mods = <MOD_LSFT>;\n    };\n    UNICODE(emoji_face_joke_wink, /* üòâ */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N6 &kp N0 &kp N9)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N6 &kp N0 &kp N9)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N6 &kp N0 &kp N9)\n      #endif\n    )\n    UNICODE(emoji_face_joke_tounge, /* üòú */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N6 &kp N1 &kp C)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N6 &kp N1 &kp C)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N6 &kp N1 &kp C)\n      #endif\n    )\n    emoji_face_joke: emoji_face_joke {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&emoji_face_joke_wink>, <&emoji_face_joke_tounge>;\n        mods = <MOD_LSFT>;\n    };\n    UNICODE(emoji_face_fear_scared, /* üò® */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N6 &kp N2 &kp N8)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N6 &kp N2 &kp N8)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N6 &kp N2 &kp N8)\n      #endif\n    )\n    UNICODE(emoji_face_fear_scream, /* üò± */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N6 &kp N3 &kp N1)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N6 &kp N3 &kp N1)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N6 &kp N3 &kp N1)\n      #endif\n    )\n    emoji_face_fear: emoji_face_fear {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&emoji_face_fear_scared>, <&emoji_face_fear_scream>;\n        mods = <MOD_LSFT>;\n    };\n    UNICODE(emoji_face_surprise_dizzy, /* üòµ */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N6 &kp N3 &kp N5)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N6 &kp N3 &kp N5)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N6 &kp N3 &kp N5)\n      #endif\n    )\n    emoji_face_surprise: emoji_face_surprise {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&emoji_shocked_face>, <&emoji_face_surprise_dizzy>;\n        mods = <MOD_LSFT>;\n    };\n    UNICODE(emoji_gesture_attention_wave, /* üëã */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N4 &kp N4 &kp B)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N4 &kp N4 &kp B)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N4 &kp N4 &kp B)\n      #endif\n    )\n    emoji_gesture_attention: emoji_gesture_attention {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&emoji_snap_fingers>, <&emoji_gesture_attention_wave>;\n        mods = <MOD_LSFT>;\n    };\n    UNICODE(emoji_gesture_approval_cool, /* üòé */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N6 &kp N0 &kp E)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N6 &kp N0 &kp E)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N6 &kp N0 &kp E)\n      #endif\n    )\n    emoji_gesture_approval: emoji_gesture_approval {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&emoji_ok_hand>, <&emoji_gesture_approval_cool>;\n        mods = <MOD_LSFT>;\n    };\n    emoji_gesture_gratitude: emoji_gesture_gratitude {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&emoji_pray>, <&emoji_saluting_face>;\n        mods = <MOD_LSFT>;\n    };\n    emoji_gesture_anxiety: emoji_gesture_anxiety {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&emoji_sweat_smile>, <&emoji_cold_sweat>;\n        mods = <MOD_LSFT>;\n    };\n    UNICODE(emoji_gesture_despair_cry, /* üò¢ */\n      #if UNICODE_TARGET_OS == 1\n        UNICODE_SEQ_LINUX(&kp N1 &kp F &kp N6 &kp N2 &kp N2)\n      #elif UNICODE_TARGET_OS == 2\n        UNICODE_SEQ_MACOS(&kp N1 &kp F &kp N6 &kp N2 &kp N2)\n      #elif UNICODE_TARGET_OS == 3\n        UNICODE_SEQ_WINDOWS(&kp N1 &kp F &kp N6 &kp N2 &kp N2)\n      #endif\n    )\n    emoji_gesture_despair: emoji_gesture_despair {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&emoji_disappointed>, <&emoji_gesture_despair_cry>;\n        mods = <MOD_LSFT>;\n    };\n    emoji_gesture_curious: emoji_gesture_curious {\n        compatible = \"zmk,behavior-mod-morph\";\n        #binding-cells = <0>;\n        bindings = <&emoji_thinking>, <&emoji_monocle_face>;\n        mods = <MOD_LSFT>;\n    };\n};\n/*HACK*/};\n#if EMOJI_GENDER_SIGN_PRESET == 0\n    emoji_gender_sign_preset: &none {};\n#elif EMOJI_GENDER_SIGN_PRESET == 1\n    emoji_gender_sign_preset: &emoji_male_sign {};\n#elif EMOJI_GENDER_SIGN_PRESET == 2\n    emoji_gender_sign_preset: &emoji_female_sign {};\n#endif\n\n#if EMOJI_SKIN_TONE_PRESET == 0\n    emoji_skin_tone_preset: &none {};\n#elif EMOJI_SKIN_TONE_PRESET == 1\n    emoji_skin_tone_preset: &emoji_light_skin_tone {};\n#elif EMOJI_SKIN_TONE_PRESET == 2\n    emoji_skin_tone_preset: &emoji_medium_light_skin_tone {};\n#elif EMOJI_SKIN_TONE_PRESET == 3\n    emoji_skin_tone_preset: &emoji_medium_skin_tone {};\n#elif EMOJI_SKIN_TONE_PRESET == 4\n    emoji_skin_tone_preset: &emoji_medium_dark_skin_tone {};\n#elif EMOJI_SKIN_TONE_PRESET == 5\n    emoji_skin_tone_preset: &emoji_dark_skin_tone {};\n#endif\n\n#if EMOJI_HAIR_STYLE_PRESET == 0\n    emoji_hair_style_preset: &none {};\n#elif EMOJI_HAIR_STYLE_PRESET == 1\n    emoji_hair_style_preset: &emoji_bald {};\n#elif EMOJI_HAIR_STYLE_PRESET == 2\n    emoji_hair_style_preset: &emoji_red_hair {};\n#elif EMOJI_HAIR_STYLE_PRESET == 3\n    emoji_hair_style_preset: &emoji_curly_hair {};\n#elif EMOJI_HAIR_STYLE_PRESET == 4\n    emoji_hair_style_preset: &emoji_white_hair {};\n#endif\n/*HACK*//{\n\n//////////////////////////////////////////////////////////////////////////\n//\n// Mouse keys (control mouse via keyboard) -- requires PR23 beta firmware:\n// select \"community.pr23.mouse-keys\" from the drop-down menu located at\n// Glove80 Layout Editor > Settings > Advanced Settings > Firmware Version\n//\n// - https://github.com/moergo-sc/zmk/pull/23\n// - https://gist.github.com/krissen/dd27082e7ab0575619c7a31f4d2ec7ae\n// - https://github.com/zmkfirmware/zmk/compare/main...urob:zmk:mouse-3.2\n//\n//////////////////////////////////////////////////////////////////////////\n\n//\n// MOUSE_MOTION_DELAY defines how long to wait (milliseconds) before starting\n// to move the mouse pointer.\n//\n#ifndef MOUSE_MOTION_DELAY\n#define MOUSE_MOTION_DELAY 0\n#endif\n\n//\n// MOUSE_MOTION_ACCELERATION_EXPONENT sets how the mouse pointer accelerates:\n//\n// acceleration exponent 0: uniform speed\n// acceleration exponent 1: uniform acceleration\n// acceleration exponent 2: uniform jerk\n//\n#ifndef MOUSE_MOTION_ACCELERATION_EXPONENT\n#define MOUSE_MOTION_ACCELERATION_EXPONENT 1\n#endif\n\n//\n// MOUSE_MOTION_TIME_TO_MAXIMUM_SPEED defines how long to wait (milliseconds)\n// before the mouse pointer speed is suddenly boosted to the maximum value.\n//\n#ifndef MOUSE_MOTION_TIME_TO_MAXIMUM_SPEED\n#define MOUSE_MOTION_TIME_TO_MAXIMUM_SPEED 300\n#endif\n\n//\n// MOUSE_MOTION_MAXIMUM_SPEED defines how quickly the mouse pointer can move.\n//\n#ifndef MOUSE_MOTION_MAXIMUM_SPEED\n#define MOUSE_MOTION_MAXIMUM_SPEED 600\n#endif\n\n//\n// MOUSE_SCROLL_DELAY defines how long to wait (milliseconds) before starting\n// to move the mouse pointer.\n//\n#ifndef MOUSE_SCROLL_DELAY\n#define MOUSE_SCROLL_DELAY 0\n#endif\n\n//\n// MOUSE_SCROLL_ACCELERATION_EXPONENT sets how the mouse pointer accelerates:\n//\n// acceleration exponent 0: uniform speed\n// acceleration exponent 1: uniform acceleration\n// acceleration exponent 2: uniform jerk\n//\n#ifndef MOUSE_SCROLL_ACCELERATION_EXPONENT\n#define MOUSE_SCROLL_ACCELERATION_EXPONENT 0\n#endif\n\n//\n// MOUSE_SCROLL_TIME_TO_MAXIMUM_SPEED defines how long to wait (milliseconds)\n// before the mouse pointer speed is suddenly boosted to the maximum value.\n//\n#ifndef MOUSE_SCROLL_TIME_TO_MAXIMUM_SPEED\n#define MOUSE_SCROLL_TIME_TO_MAXIMUM_SPEED 300\n#endif\n\n//\n// MOUSE_SCROLL_MAXIMUM_SPEED defines how quickly the mouse wheel can scroll.\n//\n#ifndef MOUSE_SCROLL_MAXIMUM_SPEED\n#define MOUSE_SCROLL_MAXIMUM_SPEED 10\n#endif\n/*HACK*/};\n#if __has_include(<zmk/events/mouse_tick.h>)\n    // ==== MOUSE-KEY <section begins> ====\n    #define ZMK_MOUSE_DEFAULT_MOVE_VAL MOUSE_MOTION_MAXIMUM_SPEED\n    #define ZMK_MOUSE_DEFAULT_SCRL_VAL MOUSE_SCROLL_MAXIMUM_SPEED\n    #include <dt-bindings/zmk/mouse.h>\n    &mmv {\n      delay-ms = <MOUSE_MOTION_DELAY>;\n      acceleration-exponent = <MOUSE_MOTION_ACCELERATION_EXPONENT>;\n      time-to-max-speed-ms = <MOUSE_MOTION_TIME_TO_MAXIMUM_SPEED>;\n    };\n    &msc {\n      delay-ms = <MOUSE_SCROLL_DELAY>;\n      acceleration-exponent = <MOUSE_SCROLL_ACCELERATION_EXPONENT>;\n      time-to-max-speed-ms = <MOUSE_SCROLL_TIME_TO_MAXIMUM_SPEED>;\n    };\n    // ==== MOUSE-KEY <section ends> =====\n#else\n    #define mkp none\n    #define mmv none\n    #define msc none\n    #define LCLK\n    #define MCLK\n    #define RCLK\n    #define MB1\n    #define MB2\n    #define MB3\n    #define MB4\n    #define MB5\n    #define MB6\n    #define MB7\n    #define MB8\n    #define MOVE_UP\n    #define MOVE_DOWN\n    #define MOVE_LEFT\n    #define MOVE_RIGHT\n    #define SCRL_UP\n    #define SCRL_DOWN\n    #define SCRL_LEFT\n    #define SCRL_RIGHT\n#endif\n/*HACK*//{\n",
  "custom_devicetree": "",
  "config_parameters": [],
  "macros": [],
  "combos": []
}
